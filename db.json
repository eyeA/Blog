{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"9064e7b038ca1fdf059b967079f22591a2b27525","modified":1483542148000},{"_id":"source/CNAME","hash":"f12e24eb4500224322b36ced3bfa60ba77616315","modified":1483547976000},{"_id":"source/favicon.ico","hash":"3078eac667309ad86eca16b9bb7ee15eb84a92e7","modified":1483537277000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1483526002000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1483526002000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1483526002000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1483526002000},{"_id":"themes/next/.DS_Store","hash":"5630dd9b3350d0970559995facb847018d5efc19","modified":1483526309000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1483526002000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1483526002000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1483526002000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1483526002000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1483526002000},{"_id":"themes/next/_config.yml","hash":"6eb5cb6d3a0edca359ed6bae5b53de9fe6ab2b66","modified":1483970473000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1483526002000},{"_id":"themes/next/package.json","hash":"02e3ad556ec604d470601dec0076aedb7f324e1b","modified":1483604808000},{"_id":"source/_posts/hello-world.md","hash":"565b0ee7a5ef8219c00603ae62ed2a2862d96c60","modified":1483546522000},{"_id":"source/_posts/night.md","hash":"690203ab4ef5ba356be7a0c7068e8f69633ff9a8","modified":1483758772000},{"_id":"source/_posts/html之localStorage.md","hash":"3b16cd2351800884ffceea740dd11d1af8e2885d","modified":1483970014000},{"_id":"source/categories/index.md","hash":"cfa1a109b76872e57bc3f9f870f8fb1e91bcbb48","modified":1483546973000},{"_id":"source/reading/index.md","hash":"1fe65ae241e31118e8f1f586620e232cfab2bf77","modified":1483547329000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1483526002000},{"_id":"themes/next/layout/_layout.swig","hash":"7a1e4443c3ba1e08c20e64ddbf0b8255d034dab0","modified":1483526002000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1483526002000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1483526002000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1483526002000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1483526002000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1483526002000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1483526002000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1483526002000},{"_id":"themes/next/source/.DS_Store","hash":"54275a04c3543125d937beda46ed11e8d0afb687","modified":1483671696000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1483526002000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1483526002000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1483526002000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1483526002000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1483526002000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1483526002000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1483526002000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1483526002000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1483526002000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1483526002000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1483526002000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1483526002000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1483526002000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1483526002000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1483526002000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"c284b735234c0a9011e2a8d6fe99c13b6c3bb05d","modified":1483545696000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1483526002000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1483526002000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1483526002000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1483526002000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1483526002000},{"_id":"themes/next/layout/_macro/post.swig","hash":"39a8efd961ea2c5758ca4231d3cc4108c1856930","modified":1483526002000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1483526002000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1483526002000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1483606044000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1483526002000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1483526002000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1483526002000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4eb278f7b1b7dfe1088c2b411778cc6129df82bb","modified":1483686174000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1483526002000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1483686216000},{"_id":"themes/next/layout/_partials/header.swig","hash":"5696ee15fc21eb3a6416902afcf1df454497c552","modified":1483526002000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1483526002000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1483526002000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1483526002000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1483526002000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1483526002000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1483526002000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1483526002000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1483526002000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1483526002000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1483526002000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1483526002000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1483526002000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1483526002000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1483526002000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1483526002000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1483526002000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1483526002000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483526002000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1483526002000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483526002000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1483526002000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483526002000},{"_id":"themes/next/source/images/avatar.jpg","hash":"08eb39a37ac91dc0399e331b64ebfd5a75fb802e","modified":1483439781000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1483526002000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1483526002000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1483526002000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1483526002000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1483526002000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1483526002000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1483526002000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1483526002000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1483526002000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1483526002000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1483526002000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1483526002000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"417e16a0fbdcb1b87987787bd7f9fa17eefc2d2b","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1483526002000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1483526002000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1483526002000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1483526002000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1483526002000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1483526002000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1483526002000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1483526002000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1483526002000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1483526002000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1483526002000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1483526002000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1483526002000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"bef514826ebf9eb6e99bb2b0d72285106658a1ec","modified":1483526002000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1483526002000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1483526002000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1483526002000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1483526002000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1483526002000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1483526002000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1483526002000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1483526002000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1483526002000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1483526002000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1483526002000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1483526002000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1483526002000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1483526002000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1483526002000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1483526002000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1483526002000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1483526002000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1483526002000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1483526002000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1483526002000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1483526002000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"fd2e77616076fd75519d1e16f371a311bf8c3e43","modified":1483756132000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1483526002000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1483759369000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7e899c4c0aa1312666f2534a4700667d1bfd88da","modified":1483526002000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1483526002000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1483526002000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1483526002000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1483526002000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1483526002000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1483772969000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1483526002000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1483526002000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1483526002000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1483526002000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1483526002000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1483526002000},{"_id":"public/categories/index.html","hash":"710173d60a7d940bd1ef63e4a6eb7c0d12b4a29c","modified":1483970643985},{"_id":"public/reading/index.html","hash":"407ef82fca964e88135f5a4f6244324a0517501e","modified":1483970643985},{"_id":"public/archives/index.html","hash":"e32e5433c6905a157205ddbe2d7e45ac52daf788","modified":1483970643985},{"_id":"public/archives/2017/index.html","hash":"8f7bffc0734c807588c362d4ff4668c6cb1720a5","modified":1483970643985},{"_id":"public/archives/2017/01/index.html","hash":"2c1ca84f81835dcc8736969718827d2eb7ded9ab","modified":1483970643986},{"_id":"public/categories/阅读/index.html","hash":"d66a58a6d59b05117da3cb068970a51e0249d5b5","modified":1483970643985},{"_id":"public/categories/HTML5/index.html","hash":"bc2bf77917e1a82db095466ccc8870645f30b148","modified":1483970643985},{"_id":"public/2017/01/04/hello-world/index.html","hash":"3f1da0c0c96dc1dfc72341a5ed873ab38d45c9a1","modified":1483970643986},{"_id":"public/2017/01/05/html之localStorage/index.html","hash":"4da83b730d5660c784fc00cf09ea6ffac5549560","modified":1483970643986},{"_id":"public/2017/01/05/night/index.html","hash":"e54ed74af061b0c86430e6451614e6c0fba7a9b6","modified":1483970643986},{"_id":"public/index.html","hash":"c4c05106a0b4487a0e5bfd9e251213a692ac1806","modified":1483970643986},{"_id":"public/favicon.ico","hash":"3078eac667309ad86eca16b9bb7ee15eb84a92e7","modified":1483969200293},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1483969200293},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1483969200293},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1483969200293},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1483969200293},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1483969200293},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1483969200293},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1483969200293},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1483969200293},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483969200293},{"_id":"public/CNAME","hash":"f12e24eb4500224322b36ced3bfa60ba77616315","modified":1483969200301},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1483969200301},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483969200301},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1483969200301},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1483969200301},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1483969200301},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1483969200301},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1483969200301},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1483969200301},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1483969200301},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1483969200301},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1483969200301},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1483969200301},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1483969200301},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1483969200302},{"_id":"public/images/avatar.jpg","hash":"08eb39a37ac91dc0399e331b64ebfd5a75fb802e","modified":1483969201191},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1483969201194},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1483969201211},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1483969201211},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1483969201211},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1483969201217},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1483969201217},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1483969201217},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1483969201217},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1483969201217},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1483969201217},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1483969201217},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1483969201217},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1483969201217},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1483969201217},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1483969201217},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1483969201217},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1483969201217},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1483969201217},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1483969201217},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1483969201218},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1483969201218},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1483969201218},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1483969201218},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1483969201218},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1483969201218},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1483969201218},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1483969201218},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1483969201218},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1483969201218},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1483969201218},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1483969201218},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1483969201218},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1483969201218},{"_id":"public/css/main.css","hash":"bc9c762eceee1005f452a51c603d2e0b2ef3dd4b","modified":1483969201218},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1483969201218},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1483969201218},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1483969201218},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1483969201218},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1483969201218},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1483969201218},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1483969201218},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1483969201218},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1483969201218},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1483969201218},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1483969201219},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1483969201225}],"Category":[{"name":"阅读","_id":"cixq4y2g20005smwdb2zsw7qf"},{"name":"HTML5","_id":"cixq4y2g60006smwd1q5mys1l"},{"name":"reading","_id":"cixq5bs750000suwdoq8h55m5"},{"name":"JavaScript","_id":"cixq6m53l0004b4wdmlv4iac6"}],"Data":[],"Page":[{"title":"分类","date":"2017-01-04T15:54:16.000Z","_content":"分类内容","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-01-04 23:54:16\n---\n分类内容","updated":"2017-01-04T16:22:53.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cixq4y2fs0001smwdv9kbpjm7","content":"<p>分类内容</p>\n","excerpt":"","more":"<p>分类内容</p>\n"},{"title":"阅读","date":"2017-01-04T15:57:11.000Z","_content":"\n阅读  ","source":"reading/index.md","raw":"---\ntitle: 阅读\ndate: 2017-01-04 23:57:11\n---\n\n阅读  ","updated":"2017-01-04T16:28:49.000Z","path":"reading/index.html","comments":1,"layout":"page","_id":"cixq4y2fx0003smwdmgvad15x","content":"<p>阅读  </p>\n","excerpt":"","more":"<p>阅读  </p>\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-01-04T07:42:39.000Z","updated":"2017-01-04T16:15:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixq4y2fo0000smwdbfqimygx","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<a id=\"more\"></a>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>","more":"<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"},{"title":"开始新篇章","date":"2017-01-04T16:27:18.000Z","keywords":"Hexo, Blog","description":"生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。","_content":"一枚前端，在努力得一步一步往上爬\n<!-- more -->\n更多精彩内容，后续会持续更新中...^_^\n","source":"_posts/night.md","raw":"---\ntitle: 开始新篇章\ndate: 2017-01-05 00:27:18\ntags:\ncategories: \"阅读\"\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n---\n一枚前端，在努力得一步一步往上爬\n<!-- more -->\n更多精彩内容，后续会持续更新中...^_^\n","slug":"night","published":1,"updated":"2017-01-09T14:09:09.000Z","_id":"cixq4y2fu0002smwd6m5xh9c4","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一枚前端，在努力得一步一步往上爬<br><a id=\"more\"></a><br>更多精彩内容，后续会持续更新中…^_^</p>\n","excerpt":"<p>一枚前端，在努力得一步一步往上爬<br>","more":"<br>更多精彩内容，后续会持续更新中…^_^</p>"},{"title":"html5的localStorage本地存储","date":"2017-01-04T16:33:03.000Z","type":"reading","_content":"### 概述\nHTML5 提供了两种在客户端存储数据的新方法：\n`localStorage` - 没有时间限制的数据存储\n`sessionStorage` - 针对一个 session 的数据存储\n<!-- more -->\n之前，这些都是由 `cookie` 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。\n在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。\n对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。\nHTML5 使用 `JavaScript` 来存储和访问数据。\n### 用法小结\n（一）设置值\n```javascript\n1.localStorage.setItem(key,value) //如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】\n2.localStorage.name = \"moomoo\";\n3.localStorage[\"name\"] = \"moomoo\";\n```\n（二）获取值\n```javascript\n1.localStorage.getItem(key,value):如果key的value不存在时，返回null，例：localStorage.getItem(\"name\");【推荐写法】\n2.var name = localStorage.name;\n3.var name = localStorage[\"name\"];\n```\n（三）清除值\n```javascript\n1.localStorage.remove(key);// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值\n2.localStorage.clear();  // 表示清除localStorage存储的所有数据\n```\n（四）遍历存储的数据\n当你不清楚本地localStorage存储了多少数据的时候，用`key(index)`方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：\n```javascript\nfor(i=0;i<localStorage.length;i++){\n　　document.write(localStorage.key(i)+\":\"+localStorage.getItem(localStorage.key(i))+\"<br/>\");\n}\nlocalStorage.length表示本地存储数据的总量；\nlocalStorage.key(i),表示获取第i个数据的key；\nlocalStorage.getItem(localStorage.key(i));表示获取第i个数据的value。\n```\n（五）JSON存储\n当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。\n1.SON.stringify(data) 将对象转换成JSON格式的数据串。\n2.JSON.parse(data)将数据解析成对象并返回解析后的对象。\n这样说或许不太好懂，直接上例子：\n```javascript\nvar arr = {\"name\":\"moomoo\",\"age\":2,\"eat\":\"apple\"};\nlocalStorage.setItem(\"arr\",JSON.stringify(arr));\narr = JSON.parse(localStorage.getItem(\"arr\"));\n```\n不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。\n（六）sessionStorage\n`sessionStorage`是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。\n当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。\nsessionStorage 方法与localStorage的方法相似，这里就不过多赘述。\n（七）兼容性\n   [点击这里查看兼容性^_^](http://caniuse.com/#search=localStorage)\n作者 [@eyea](mailto:deyeseau@gmail.com)\n### END\n","source":"_posts/html之localStorage.md","raw":"---\ntitle: html5的localStorage本地存储\ndate: 2017-01-05 00:33:03\ntags:\ncategories: \"阅读\"\ntype: reading\n---\n### 概述\nHTML5 提供了两种在客户端存储数据的新方法：\n`localStorage` - 没有时间限制的数据存储\n`sessionStorage` - 针对一个 session 的数据存储\n<!-- more -->\n之前，这些都是由 `cookie` 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。\n在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。\n对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。\nHTML5 使用 `JavaScript` 来存储和访问数据。\n### 用法小结\n（一）设置值\n```javascript\n1.localStorage.setItem(key,value) //如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】\n2.localStorage.name = \"moomoo\";\n3.localStorage[\"name\"] = \"moomoo\";\n```\n（二）获取值\n```javascript\n1.localStorage.getItem(key,value):如果key的value不存在时，返回null，例：localStorage.getItem(\"name\");【推荐写法】\n2.var name = localStorage.name;\n3.var name = localStorage[\"name\"];\n```\n（三）清除值\n```javascript\n1.localStorage.remove(key);// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值\n2.localStorage.clear();  // 表示清除localStorage存储的所有数据\n```\n（四）遍历存储的数据\n当你不清楚本地localStorage存储了多少数据的时候，用`key(index)`方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：\n```javascript\nfor(i=0;i<localStorage.length;i++){\n　　document.write(localStorage.key(i)+\":\"+localStorage.getItem(localStorage.key(i))+\"<br/>\");\n}\nlocalStorage.length表示本地存储数据的总量；\nlocalStorage.key(i),表示获取第i个数据的key；\nlocalStorage.getItem(localStorage.key(i));表示获取第i个数据的value。\n```\n（五）JSON存储\n当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。\n1.SON.stringify(data) 将对象转换成JSON格式的数据串。\n2.JSON.parse(data)将数据解析成对象并返回解析后的对象。\n这样说或许不太好懂，直接上例子：\n```javascript\nvar arr = {\"name\":\"moomoo\",\"age\":2,\"eat\":\"apple\"};\nlocalStorage.setItem(\"arr\",JSON.stringify(arr));\narr = JSON.parse(localStorage.getItem(\"arr\"));\n```\n不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。\n（六）sessionStorage\n`sessionStorage`是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。\n当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。\nsessionStorage 方法与localStorage的方法相似，这里就不过多赘述。\n（七）兼容性\n   [点击这里查看兼容性^_^](http://caniuse.com/#search=localStorage)\n作者 [@eyea](mailto:deyeseau@gmail.com)\n### END\n","slug":"html之localStorage","published":1,"updated":"2017-01-09T14:12:10.000Z","_id":"cixq4y2fy0004smwddpbq9mgl","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>HTML5 提供了两种在客户端存储数据的新方法：<br><code>localStorage</code> - 没有时间限制的数据存储<br><code>sessionStorage</code> - 针对一个 session 的数据存储<br><a id=\"more\"></a><br>之前，这些都是由 <code>cookie</code> 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。<br>在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。<br>对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。<br>HTML5 使用 <code>JavaScript</code> 来存储和访问数据。</p>\n<h3 id=\"用法小结\"><a href=\"#用法小结\" class=\"headerlink\" title=\"用法小结\"></a>用法小结</h3><p>（一）设置值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span>localStorage.setItem(key,value) <span class=\"comment\">//如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】</span></div><div class=\"line\"><span class=\"number\">2.</span>localStorage.name = <span class=\"string\">\"moomoo\"</span>;</div><div class=\"line\"><span class=\"number\">3.</span>localStorage[<span class=\"string\">\"name\"</span>] = <span class=\"string\">\"moomoo\"</span>;</div></pre></td></tr></table></figure></p>\n<p>（二）获取值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span>localStorage.getItem(key,value):如果key的value不存在时，返回<span class=\"literal\">null</span>，例：localStorage.getItem(<span class=\"string\">\"name\"</span>);【推荐写法】</div><div class=\"line\"><span class=\"number\">2.</span><span class=\"keyword\">var</span> name = localStorage.name;</div><div class=\"line\"><span class=\"number\">3.</span><span class=\"keyword\">var</span> name = localStorage[<span class=\"string\">\"name\"</span>];</div></pre></td></tr></table></figure></p>\n<p>（三）清除值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span>localStorage.remove(key);<span class=\"comment\">// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值</span></div><div class=\"line\"><span class=\"number\">2.</span>localStorage.clear();  <span class=\"comment\">// 表示清除localStorage存储的所有数据</span></div></pre></td></tr></table></figure></p>\n<p>（四）遍历存储的数据<br>当你不清楚本地localStorage存储了多少数据的时候，用<code>key(index)</code>方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;localStorage.length;i++)&#123;</div><div class=\"line\">　　<span class=\"built_in\">document</span>.write(localStorage.key(i)+<span class=\"string\">\":\"</span>+localStorage.getItem(localStorage.key(i))+<span class=\"string\">\"&lt;br/&gt;\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">localStorage.length表示本地存储数据的总量；</div><div class=\"line\">localStorage.key(i),表示获取第i个数据的key；</div><div class=\"line\">localStorage.getItem(localStorage.key(i));表示获取第i个数据的value。</div></pre></td></tr></table></figure></p>\n<p>（五）JSON存储<br>当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。<br>1.SON.stringify(data) 将对象转换成JSON格式的数据串。<br>2.JSON.parse(data)将数据解析成对象并返回解析后的对象。<br>这样说或许不太好懂，直接上例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"moomoo\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">2</span>,<span class=\"string\">\"eat\"</span>:<span class=\"string\">\"apple\"</span>&#125;;</div><div class=\"line\">localStorage.setItem(<span class=\"string\">\"arr\"</span>,<span class=\"built_in\">JSON</span>.stringify(arr));</div><div class=\"line\">arr = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">\"arr\"</span>));</div></pre></td></tr></table></figure></p>\n<p>不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。<br>（六）sessionStorage<br><code>sessionStorage</code>是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。<br>当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。<br>sessionStorage 方法与localStorage的方法相似，这里就不过多赘述。<br>（七）兼容性<br>   <a href=\"http://caniuse.com/#search=localStorage\" target=\"_blank\" rel=\"external\">点击这里查看兼容性^_^</a><br>作者 <a href=\"mailto:deyeseau@gmail.com\" target=\"_blank\" rel=\"external\">@eyea</a></p>\n<h3 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h3>","excerpt":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>HTML5 提供了两种在客户端存储数据的新方法：<br><code>localStorage</code> - 没有时间限制的数据存储<br><code>sessionStorage</code> - 针对一个 session 的数据存储<br>","more":"<br>之前，这些都是由 <code>cookie</code> 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。<br>在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。<br>对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。<br>HTML5 使用 <code>JavaScript</code> 来存储和访问数据。</p>\n<h3 id=\"用法小结\"><a href=\"#用法小结\" class=\"headerlink\" title=\"用法小结\"></a>用法小结</h3><p>（一）设置值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span>localStorage.setItem(key,value) <span class=\"comment\">//如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】</span></div><div class=\"line\"><span class=\"number\">2.</span>localStorage.name = <span class=\"string\">\"moomoo\"</span>;</div><div class=\"line\"><span class=\"number\">3.</span>localStorage[<span class=\"string\">\"name\"</span>] = <span class=\"string\">\"moomoo\"</span>;</div></pre></td></tr></table></figure></p>\n<p>（二）获取值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span>localStorage.getItem(key,value):如果key的value不存在时，返回<span class=\"literal\">null</span>，例：localStorage.getItem(<span class=\"string\">\"name\"</span>);【推荐写法】</div><div class=\"line\"><span class=\"number\">2.</span><span class=\"keyword\">var</span> name = localStorage.name;</div><div class=\"line\"><span class=\"number\">3.</span><span class=\"keyword\">var</span> name = localStorage[<span class=\"string\">\"name\"</span>];</div></pre></td></tr></table></figure></p>\n<p>（三）清除值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"number\">1.</span>localStorage.remove(key);<span class=\"comment\">// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值</span></div><div class=\"line\"><span class=\"number\">2.</span>localStorage.clear();  <span class=\"comment\">// 表示清除localStorage存储的所有数据</span></div></pre></td></tr></table></figure></p>\n<p>（四）遍历存储的数据<br>当你不清楚本地localStorage存储了多少数据的时候，用<code>key(index)</code>方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;localStorage.length;i++)&#123;</div><div class=\"line\">　　<span class=\"built_in\">document</span>.write(localStorage.key(i)+<span class=\"string\">\":\"</span>+localStorage.getItem(localStorage.key(i))+<span class=\"string\">\"&lt;br/&gt;\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\">localStorage.length表示本地存储数据的总量；</div><div class=\"line\">localStorage.key(i),表示获取第i个数据的key；</div><div class=\"line\">localStorage.getItem(localStorage.key(i));表示获取第i个数据的value。</div></pre></td></tr></table></figure></p>\n<p>（五）JSON存储<br>当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。<br>1.SON.stringify(data) 将对象转换成JSON格式的数据串。<br>2.JSON.parse(data)将数据解析成对象并返回解析后的对象。<br>这样说或许不太好懂，直接上例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"moomoo\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">2</span>,<span class=\"string\">\"eat\"</span>:<span class=\"string\">\"apple\"</span>&#125;;</div><div class=\"line\">localStorage.setItem(<span class=\"string\">\"arr\"</span>,<span class=\"built_in\">JSON</span>.stringify(arr));</div><div class=\"line\">arr = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">\"arr\"</span>));</div></pre></td></tr></table></figure></p>\n<p>不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。<br>（六）sessionStorage<br><code>sessionStorage</code>是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。<br>当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。<br>sessionStorage 方法与localStorage的方法相似，这里就不过多赘述。<br>（七）兼容性<br>   <a href=\"http://caniuse.com/#search=localStorage\">点击这里查看兼容性^_^</a><br>作者 <a href=\"mailto:deyeseau@gmail.com\">@eyea</a></p>\n<h3 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h3>"},{"title":"Ajax跨域请求方案","date":"2017-01-09T14:26:01.000Z","updated":"2017-01-09T14:43:48.000Z","_content":"#### 1.所谓跨域\n跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。\n另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。\n<!-- more -->\n#### 2.跨域形成\n请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：\n协议跨域，例如从 http 站点访问 https 站点。\n主机跨域，例如从 a.baidu.com 访问 b.baidu.com\n端口跨域，例如从80端口的站点访问8080端口的站点。\n请求域名和直接请求该域名对应的ip之间也算跨域。\n内部判断规则：url首部匹配\n```javascript```\nwindow.location.protocol + window.location.host\n```\n简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。\n#### 3.跨域方案之Jsonp\n谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。\n例如常规下的请求\n```javascript```\nget => http://a.test.com/users\n=>>\n[{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：\n```javascript```\n<script src=\"http://a.test.com/users\"></script>\n```\n显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：\n```javascript```\njsonp([{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n对于js而言，这就是一个普通的函数调用\n```javascript```\njsonp(...params)\n```\n那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。\n```javascript```\nvar jsonp = function(data){\n    //输出json\n    console.dir(data);\n}\n```\njsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。\n```javascript```\n<script src=\"http://a.test.com/users?callback=jsonp\"></script>\n```\n后端得到callback参数时，使用该值包装json数据，否则正常处理。\n需要注意的是，处理jsonp的函数必须在window下，也即\n```javascript```\nwindow.jsonp = function(data){\n    console.dir(data);\n}\n```\n方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。\n知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？\n```javascript```\nvar getJsonp = function(url, success){\n    //声明window下的jsonp函数\n    window.jsonp = function(data){\n        //jsonp函数被执行将data转发到success函数\n        success(data);\n    }\n    var src = '';\n    //判断地址是否带其它参数决定callback怎么拼接\n    if(url.IndexOf('?') != -1){\n        src = url + '&callback=jsonp';\n    }else{\n        src = url + '?callback=jsonp';\n    }\n    //动态创建script标签\n    var script = document.createElement('script');\n    script.type = \"text/javascript\";\n    script.src = src;\n    document.head.appendChild(script);\n}\n//用法\ngetJsonp('http://test.com/users', function(data){\n    console.log('得到jsonp数据：',JSON.stringify(data));\n});\n```\n上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。\n浏览器支持：几乎所有\n#### 4.跨域解决方案之CORS\nCORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。\nCORS使得以下常见场景得到支持：\n使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。\nweb 字体(css 中通过 @font-face 使用跨站字体资源)\n使用 drawImage 绘制 Images/video 画面到 canvas\nCORS有以下三种常见的访问控制场景：\n简单请求\n只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。\n不使用自定义请求头\n这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：\n```javascript```\nGET /resources/public-data/ HTTP/1.1\n...\nOrigin: http://my.com\n```\n此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。\n```javascript```\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\n```\n这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）\n预请求\n预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：\n请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。\n使用自定义请求头\n例：\n```javascript```\nvar request = new XMLHttpRequest();\nvar url = 'http://test.com/users';\nvar body = 'test';\n\nfunction coAccess(){\n  if(request)\n  {\n    request.open('POST', url, true);\n    request.setRequestHeader('X-CUSTOMER-HEADER', '沐心chen');\n    request.setRequestHeader('Content-Type', 'application/xml');\n    request.onreadystatechange = function(state){\n        ...\n    };\n    request.send(body);\n  }\n  ...\n  ```\n上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。\n此时浏览器与后端的交互过程如下：\n```javascript```\n//浏览器预先发起OPTIONS请求\n，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers\nOPTIONS /resources/post-here/ HTTP/1.1\n...\nOrigin: http://my.com\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-CUSTOMER-HEADER\n//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nAccess-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS\nAccess-Control-Allow-Headers: X-CUSTOMER-HEADER\nAccess-Control-Max-Age: 1728000\nVary: Accept-Encoding, Origin\n\n//浏览器判断本次请求被允许，真实发起原先的POST请求\nPOST /resources/post-here/ HTTP/1.1\n...\nX-CUSTOMER-HEADER: 沐心chen\nOrigin: http://my.com\n\n//服务器返回数据\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nVary: Accept-Encoding, Origin\n```\nOPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。\n带凭证的请求\n跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。\n```javascript```\n var request = new XMLHttpRequest();\n var url = 'http://test.com/users';\n\n function coAccess(){\n     if(request)\n     {\n       request.open('GET', url, true);\n       request.withCredentials = true;\n       request.onreadystatechange = function(state){\n           ...\n       };\n       request.send(body);\n     }\n     ...\n```\n我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。\n```javascript```\n //浏览器发起请求，携带cookie信息\n GET /resources/access-control-with-credentials/ HTTP/1.1\n ...\n Origin: http://my.com\n Cookie: rememberMe=沐心chen\n\n //服务端返回，设置了更多cookie\n HTTP/1.1 200 OK\n ...\n Access-Control-Allow-Origin: http://my.com\n Access-Control-Allow-Credentials: true\n Vary: Accept-Encoding, Origin\n Set-Cookie:rememberYou=沐心chen\n ```\n值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用*，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。\n上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 * 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。\n尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。\n浏览器支持：\n```html```\nDestop\tMobile\nIE8+\tAndroid2.1\nChrome4+\tSafari3.2\nfirefox3.5+\t其它\nOpera12+\t..\nSafari4+\t..\n```\n##### END\n","source":"_posts/2017-01-09-前端ajax跨域请求方案.md","raw":"---\ntitle: Ajax跨域请求方案\ndate: 2017-01-09 22:26:01\ntags: Ajax\ncategories: JavaScript\nupdated:\n---\n#### 1.所谓跨域\n跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。\n另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。\n<!-- more -->\n#### 2.跨域形成\n请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：\n协议跨域，例如从 http 站点访问 https 站点。\n主机跨域，例如从 a.baidu.com 访问 b.baidu.com\n端口跨域，例如从80端口的站点访问8080端口的站点。\n请求域名和直接请求该域名对应的ip之间也算跨域。\n内部判断规则：url首部匹配\n```javascript```\nwindow.location.protocol + window.location.host\n```\n简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。\n#### 3.跨域方案之Jsonp\n谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。\n例如常规下的请求\n```javascript```\nget => http://a.test.com/users\n=>>\n[{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：\n```javascript```\n<script src=\"http://a.test.com/users\"></script>\n```\n显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：\n```javascript```\njsonp([{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n对于js而言，这就是一个普通的函数调用\n```javascript```\njsonp(...params)\n```\n那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。\n```javascript```\nvar jsonp = function(data){\n    //输出json\n    console.dir(data);\n}\n```\njsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。\n```javascript```\n<script src=\"http://a.test.com/users?callback=jsonp\"></script>\n```\n后端得到callback参数时，使用该值包装json数据，否则正常处理。\n需要注意的是，处理jsonp的函数必须在window下，也即\n```javascript```\nwindow.jsonp = function(data){\n    console.dir(data);\n}\n```\n方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。\n知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？\n```javascript```\nvar getJsonp = function(url, success){\n    //声明window下的jsonp函数\n    window.jsonp = function(data){\n        //jsonp函数被执行将data转发到success函数\n        success(data);\n    }\n    var src = '';\n    //判断地址是否带其它参数决定callback怎么拼接\n    if(url.IndexOf('?') != -1){\n        src = url + '&callback=jsonp';\n    }else{\n        src = url + '?callback=jsonp';\n    }\n    //动态创建script标签\n    var script = document.createElement('script');\n    script.type = \"text/javascript\";\n    script.src = src;\n    document.head.appendChild(script);\n}\n//用法\ngetJsonp('http://test.com/users', function(data){\n    console.log('得到jsonp数据：',JSON.stringify(data));\n});\n```\n上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。\n浏览器支持：几乎所有\n#### 4.跨域解决方案之CORS\nCORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。\nCORS使得以下常见场景得到支持：\n使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。\nweb 字体(css 中通过 @font-face 使用跨站字体资源)\n使用 drawImage 绘制 Images/video 画面到 canvas\nCORS有以下三种常见的访问控制场景：\n简单请求\n只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。\n不使用自定义请求头\n这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：\n```javascript```\nGET /resources/public-data/ HTTP/1.1\n...\nOrigin: http://my.com\n```\n此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。\n```javascript```\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\n```\n这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）\n预请求\n预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：\n请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。\n使用自定义请求头\n例：\n```javascript```\nvar request = new XMLHttpRequest();\nvar url = 'http://test.com/users';\nvar body = 'test';\n\nfunction coAccess(){\n  if(request)\n  {\n    request.open('POST', url, true);\n    request.setRequestHeader('X-CUSTOMER-HEADER', '沐心chen');\n    request.setRequestHeader('Content-Type', 'application/xml');\n    request.onreadystatechange = function(state){\n        ...\n    };\n    request.send(body);\n  }\n  ...\n  ```\n上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。\n此时浏览器与后端的交互过程如下：\n```javascript```\n//浏览器预先发起OPTIONS请求\n，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers\nOPTIONS /resources/post-here/ HTTP/1.1\n...\nOrigin: http://my.com\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-CUSTOMER-HEADER\n//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nAccess-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS\nAccess-Control-Allow-Headers: X-CUSTOMER-HEADER\nAccess-Control-Max-Age: 1728000\nVary: Accept-Encoding, Origin\n\n//浏览器判断本次请求被允许，真实发起原先的POST请求\nPOST /resources/post-here/ HTTP/1.1\n...\nX-CUSTOMER-HEADER: 沐心chen\nOrigin: http://my.com\n\n//服务器返回数据\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nVary: Accept-Encoding, Origin\n```\nOPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。\n带凭证的请求\n跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。\n```javascript```\n var request = new XMLHttpRequest();\n var url = 'http://test.com/users';\n\n function coAccess(){\n     if(request)\n     {\n       request.open('GET', url, true);\n       request.withCredentials = true;\n       request.onreadystatechange = function(state){\n           ...\n       };\n       request.send(body);\n     }\n     ...\n```\n我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。\n```javascript```\n //浏览器发起请求，携带cookie信息\n GET /resources/access-control-with-credentials/ HTTP/1.1\n ...\n Origin: http://my.com\n Cookie: rememberMe=沐心chen\n\n //服务端返回，设置了更多cookie\n HTTP/1.1 200 OK\n ...\n Access-Control-Allow-Origin: http://my.com\n Access-Control-Allow-Credentials: true\n Vary: Accept-Encoding, Origin\n Set-Cookie:rememberYou=沐心chen\n ```\n值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用*，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。\n上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 * 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。\n尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。\n浏览器支持：\n```html```\nDestop\tMobile\nIE8+\tAndroid2.1\nChrome4+\tSafari3.2\nfirefox3.5+\t其它\nOpera12+\t..\nSafari4+\t..\n```\n##### END\n","slug":"2017-01-09-前端ajax跨域请求方案","published":1,"_id":"cixq6laaa0001b4wdbwrkzm65","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"1-所谓跨域\"><a href=\"#1-所谓跨域\" class=\"headerlink\" title=\"1.所谓跨域\"></a>1.所谓跨域</h4><p>跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。<br>另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。<br><a id=\"more\"></a></p>\n<h4 id=\"2-跨域形成\"><a href=\"#2-跨域形成\" class=\"headerlink\" title=\"2.跨域形成\"></a>2.跨域形成</h4><p>请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：<br>协议跨域，例如从 http 站点访问 https 站点。<br>主机跨域，例如从 a.baidu.com 访问 b.baidu.com<br>端口跨域，例如从80端口的站点访问8080端口的站点。<br>请求域名和直接请求该域名对应的ip之间也算跨域。<br>内部判断规则：url首部匹配<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.location.protocol + window.location.host</div></pre></td></tr></table></figure></p>\n<p>简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。</p>\n<h4 id=\"3-跨域方案之Jsonp\"><a href=\"#3-跨域方案之Jsonp\" class=\"headerlink\" title=\"3.跨域方案之Jsonp\"></a>3.跨域方案之Jsonp</h4><p>谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。<br>例如常规下的请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">get =&gt; http://a.test.com/users</div><div class=\"line\">=&gt;&gt;</div><div class=\"line\">[&#123;</div><div class=\"line\">    username : &apos;沐心chen&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;广东深圳&apos;</div><div class=\"line\">&#125;,&#123;</div><div class=\"line\">    username : &apos;李彦宏&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;山西阳泉&apos;</div><div class=\"line\">&#125;]</div></pre></td></tr></table></figure></p>\n<p>由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;http://a.test.com/users&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">jsonp([&#123;</div><div class=\"line\">    username : &apos;沐心chen&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;广东深圳&apos;</div><div class=\"line\">&#125;,&#123;</div><div class=\"line\">    username : &apos;李彦宏&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;山西阳泉&apos;</div><div class=\"line\">&#125;]</div></pre></td></tr></table></figure></p>\n<p>对于js而言，这就是一个普通的函数调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jsonp(...params)</div></pre></td></tr></table></figure></p>\n<p>那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">var jsonp = function(data)&#123;</div><div class=\"line\">    //输出json</div><div class=\"line\">    console.dir(data);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>jsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;http://a.test.com/users?callback=jsonp&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>后端得到callback参数时，使用该值包装json数据，否则正常处理。<br>需要注意的是，处理jsonp的函数必须在window下，也即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.jsonp = function(data)&#123;</div><div class=\"line\">    console.dir(data);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。<br>知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">var getJsonp = function(url, success)&#123;</div><div class=\"line\">    //声明window下的jsonp函数</div><div class=\"line\">    window.jsonp = function(data)&#123;</div><div class=\"line\">        //jsonp函数被执行将data转发到success函数</div><div class=\"line\">        success(data);</div><div class=\"line\">    &#125;</div><div class=\"line\">    var src = &apos;&apos;;</div><div class=\"line\">    //判断地址是否带其它参数决定callback怎么拼接</div><div class=\"line\">    if(url.IndexOf(&apos;?&apos;) != -1)&#123;</div><div class=\"line\">        src = url + &apos;&amp;callback=jsonp&apos;;</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        src = url + &apos;?callback=jsonp&apos;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    //动态创建script标签</div><div class=\"line\">    var script = document.createElement(&apos;script&apos;);</div><div class=\"line\">    script.type = &quot;text/javascript&quot;;</div><div class=\"line\">    script.src = src;</div><div class=\"line\">    document.head.appendChild(script);</div><div class=\"line\">&#125;</div><div class=\"line\">//用法</div><div class=\"line\">getJsonp(&apos;http://test.com/users&apos;, function(data)&#123;</div><div class=\"line\">    console.log(&apos;得到jsonp数据：&apos;,JSON.stringify(data));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。<br>浏览器支持：几乎所有</p>\n<h4 id=\"4-跨域解决方案之CORS\"><a href=\"#4-跨域解决方案之CORS\" class=\"headerlink\" title=\"4.跨域解决方案之CORS\"></a>4.跨域解决方案之CORS</h4><p>CORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。<br>CORS使得以下常见场景得到支持：<br>使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。<br>web 字体(css 中通过 @font-face 使用跨站字体资源)<br>使用 drawImage 绘制 Images/video 画面到 canvas<br>CORS有以下三种常见的访问控制场景：<br>简单请求<br>只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。<br>不使用自定义请求头<br>这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">GET /resources/public-data/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">Origin: http://my.com</div></pre></td></tr></table></figure></p>\n<p>此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div></pre></td></tr></table></figure></p>\n<p>这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）<br>预请求<br>预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：<br>请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。<br>使用自定义请求头<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">var request = new XMLHttpRequest();</div><div class=\"line\">var url = &apos;http://test.com/users&apos;;</div><div class=\"line\">var body = &apos;test&apos;;</div><div class=\"line\"></div><div class=\"line\">function coAccess()&#123;</div><div class=\"line\">  if(request)</div><div class=\"line\">  &#123;</div><div class=\"line\">    request.open(&apos;POST&apos;, url, true);</div><div class=\"line\">    request.setRequestHeader(&apos;X-CUSTOMER-HEADER&apos;, &apos;沐心chen&apos;);</div><div class=\"line\">    request.setRequestHeader(&apos;Content-Type&apos;, &apos;application/xml&apos;);</div><div class=\"line\">    request.onreadystatechange = function(state)&#123;</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;;</div><div class=\"line\">    request.send(body);</div><div class=\"line\">  &#125;</div><div class=\"line\">  ...</div></pre></td></tr></table></figure></p>\n<p>上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。<br>此时浏览器与后端的交互过程如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">//浏览器预先发起OPTIONS请求</div><div class=\"line\">，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers</div><div class=\"line\">OPTIONS /resources/post-here/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">Origin: http://my.com</div><div class=\"line\">Access-Control-Request-Method: POST</div><div class=\"line\">Access-Control-Request-Headers: X-CUSTOMER-HEADER</div><div class=\"line\">//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限</div><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div><div class=\"line\">Access-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS</div><div class=\"line\">Access-Control-Allow-Headers: X-CUSTOMER-HEADER</div><div class=\"line\">Access-Control-Max-Age: 1728000</div><div class=\"line\">Vary: Accept-Encoding, Origin</div><div class=\"line\"></div><div class=\"line\">//浏览器判断本次请求被允许，真实发起原先的POST请求</div><div class=\"line\">POST /resources/post-here/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">X-CUSTOMER-HEADER: 沐心chen</div><div class=\"line\">Origin: http://my.com</div><div class=\"line\"></div><div class=\"line\">//服务器返回数据</div><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div><div class=\"line\">Vary: Accept-Encoding, Origin</div></pre></td></tr></table></figure></p>\n<p>OPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。<br>带凭证的请求<br>跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">var request = new XMLHttpRequest();</div><div class=\"line\">var url = &apos;http://test.com/users&apos;;</div><div class=\"line\"></div><div class=\"line\">function coAccess()&#123;</div><div class=\"line\">    if(request)</div><div class=\"line\">    &#123;</div><div class=\"line\">      request.open(&apos;GET&apos;, url, true);</div><div class=\"line\">      request.withCredentials = true;</div><div class=\"line\">      request.onreadystatechange = function(state)&#123;</div><div class=\"line\">          ...</div><div class=\"line\">      &#125;;</div><div class=\"line\">      request.send(body);</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div></pre></td></tr></table></figure></p>\n<p>我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//浏览器发起请求，携带cookie信息</div><div class=\"line\">GET /resources/access-control-with-credentials/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">Origin: http://my.com</div><div class=\"line\">Cookie: rememberMe=沐心chen</div><div class=\"line\"></div><div class=\"line\">//服务端返回，设置了更多cookie</div><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div><div class=\"line\">Access-Control-Allow-Credentials: true</div><div class=\"line\">Vary: Accept-Encoding, Origin</div><div class=\"line\">Set-Cookie:rememberYou=沐心chen</div></pre></td></tr></table></figure></p>\n<p>值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用<em>，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。<br>上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 </em> 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。<br>尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。<br>浏览器支持：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Destop\tMobile</div><div class=\"line\">IE8+\tAndroid2.1</div><div class=\"line\">Chrome4+\tSafari3.2</div><div class=\"line\">firefox3.5+\t其它</div><div class=\"line\">Opera12+\t..</div><div class=\"line\">Safari4+\t..</div></pre></td></tr></table></figure></p>\n<h5 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h5>","excerpt":"<h4 id=\"1-所谓跨域\"><a href=\"#1-所谓跨域\" class=\"headerlink\" title=\"1.所谓跨域\"></a>1.所谓跨域</h4><p>跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。<br>另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。<br>","more":"</p>\n<h4 id=\"2-跨域形成\"><a href=\"#2-跨域形成\" class=\"headerlink\" title=\"2.跨域形成\"></a>2.跨域形成</h4><p>请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：<br>协议跨域，例如从 http 站点访问 https 站点。<br>主机跨域，例如从 a.baidu.com 访问 b.baidu.com<br>端口跨域，例如从80端口的站点访问8080端口的站点。<br>请求域名和直接请求该域名对应的ip之间也算跨域。<br>内部判断规则：url首部匹配<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.location.protocol + window.location.host</div></pre></td></tr></table></figure></p>\n<p>简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。</p>\n<h4 id=\"3-跨域方案之Jsonp\"><a href=\"#3-跨域方案之Jsonp\" class=\"headerlink\" title=\"3.跨域方案之Jsonp\"></a>3.跨域方案之Jsonp</h4><p>谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。<br>例如常规下的请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">get =&gt; http://a.test.com/users</div><div class=\"line\">=&gt;&gt;</div><div class=\"line\">[&#123;</div><div class=\"line\">    username : &apos;沐心chen&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;广东深圳&apos;</div><div class=\"line\">&#125;,&#123;</div><div class=\"line\">    username : &apos;李彦宏&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;山西阳泉&apos;</div><div class=\"line\">&#125;]</div></pre></td></tr></table></figure></p>\n<p>由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;http://a.test.com/users&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">jsonp([&#123;</div><div class=\"line\">    username : &apos;沐心chen&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;广东深圳&apos;</div><div class=\"line\">&#125;,&#123;</div><div class=\"line\">    username : &apos;李彦宏&apos;,</div><div class=\"line\">    sex : &apos;男&apos;,</div><div class=\"line\">    address : &apos;山西阳泉&apos;</div><div class=\"line\">&#125;]</div></pre></td></tr></table></figure></p>\n<p>对于js而言，这就是一个普通的函数调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jsonp(...params)</div></pre></td></tr></table></figure></p>\n<p>那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">var jsonp = function(data)&#123;</div><div class=\"line\">    //输出json</div><div class=\"line\">    console.dir(data);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>jsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;http://a.test.com/users?callback=jsonp&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>后端得到callback参数时，使用该值包装json数据，否则正常处理。<br>需要注意的是，处理jsonp的函数必须在window下，也即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.jsonp = function(data)&#123;</div><div class=\"line\">    console.dir(data);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。<br>知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">var getJsonp = function(url, success)&#123;</div><div class=\"line\">    //声明window下的jsonp函数</div><div class=\"line\">    window.jsonp = function(data)&#123;</div><div class=\"line\">        //jsonp函数被执行将data转发到success函数</div><div class=\"line\">        success(data);</div><div class=\"line\">    &#125;</div><div class=\"line\">    var src = &apos;&apos;;</div><div class=\"line\">    //判断地址是否带其它参数决定callback怎么拼接</div><div class=\"line\">    if(url.IndexOf(&apos;?&apos;) != -1)&#123;</div><div class=\"line\">        src = url + &apos;&amp;callback=jsonp&apos;;</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        src = url + &apos;?callback=jsonp&apos;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    //动态创建script标签</div><div class=\"line\">    var script = document.createElement(&apos;script&apos;);</div><div class=\"line\">    script.type = &quot;text/javascript&quot;;</div><div class=\"line\">    script.src = src;</div><div class=\"line\">    document.head.appendChild(script);</div><div class=\"line\">&#125;</div><div class=\"line\">//用法</div><div class=\"line\">getJsonp(&apos;http://test.com/users&apos;, function(data)&#123;</div><div class=\"line\">    console.log(&apos;得到jsonp数据：&apos;,JSON.stringify(data));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。<br>浏览器支持：几乎所有</p>\n<h4 id=\"4-跨域解决方案之CORS\"><a href=\"#4-跨域解决方案之CORS\" class=\"headerlink\" title=\"4.跨域解决方案之CORS\"></a>4.跨域解决方案之CORS</h4><p>CORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。<br>CORS使得以下常见场景得到支持：<br>使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。<br>web 字体(css 中通过 @font-face 使用跨站字体资源)<br>使用 drawImage 绘制 Images/video 画面到 canvas<br>CORS有以下三种常见的访问控制场景：<br>简单请求<br>只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。<br>不使用自定义请求头<br>这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">GET /resources/public-data/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">Origin: http://my.com</div></pre></td></tr></table></figure></p>\n<p>此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div></pre></td></tr></table></figure></p>\n<p>这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）<br>预请求<br>预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：<br>请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。<br>使用自定义请求头<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">var request = new XMLHttpRequest();</div><div class=\"line\">var url = &apos;http://test.com/users&apos;;</div><div class=\"line\">var body = &apos;test&apos;;</div><div class=\"line\"></div><div class=\"line\">function coAccess()&#123;</div><div class=\"line\">  if(request)</div><div class=\"line\">  &#123;</div><div class=\"line\">    request.open(&apos;POST&apos;, url, true);</div><div class=\"line\">    request.setRequestHeader(&apos;X-CUSTOMER-HEADER&apos;, &apos;沐心chen&apos;);</div><div class=\"line\">    request.setRequestHeader(&apos;Content-Type&apos;, &apos;application/xml&apos;);</div><div class=\"line\">    request.onreadystatechange = function(state)&#123;</div><div class=\"line\">        ...</div><div class=\"line\">    &#125;;</div><div class=\"line\">    request.send(body);</div><div class=\"line\">  &#125;</div><div class=\"line\">  ...</div></pre></td></tr></table></figure></p>\n<p>上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。<br>此时浏览器与后端的交互过程如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">//浏览器预先发起OPTIONS请求</div><div class=\"line\">，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers</div><div class=\"line\">OPTIONS /resources/post-here/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">Origin: http://my.com</div><div class=\"line\">Access-Control-Request-Method: POST</div><div class=\"line\">Access-Control-Request-Headers: X-CUSTOMER-HEADER</div><div class=\"line\">//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限</div><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div><div class=\"line\">Access-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS</div><div class=\"line\">Access-Control-Allow-Headers: X-CUSTOMER-HEADER</div><div class=\"line\">Access-Control-Max-Age: 1728000</div><div class=\"line\">Vary: Accept-Encoding, Origin</div><div class=\"line\"></div><div class=\"line\">//浏览器判断本次请求被允许，真实发起原先的POST请求</div><div class=\"line\">POST /resources/post-here/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">X-CUSTOMER-HEADER: 沐心chen</div><div class=\"line\">Origin: http://my.com</div><div class=\"line\"></div><div class=\"line\">//服务器返回数据</div><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div><div class=\"line\">Vary: Accept-Encoding, Origin</div></pre></td></tr></table></figure></p>\n<p>OPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。<br>带凭证的请求<br>跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">var request = new XMLHttpRequest();</div><div class=\"line\">var url = &apos;http://test.com/users&apos;;</div><div class=\"line\"></div><div class=\"line\">function coAccess()&#123;</div><div class=\"line\">    if(request)</div><div class=\"line\">    &#123;</div><div class=\"line\">      request.open(&apos;GET&apos;, url, true);</div><div class=\"line\">      request.withCredentials = true;</div><div class=\"line\">      request.onreadystatechange = function(state)&#123;</div><div class=\"line\">          ...</div><div class=\"line\">      &#125;;</div><div class=\"line\">      request.send(body);</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...</div></pre></td></tr></table></figure></p>\n<p>我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//浏览器发起请求，携带cookie信息</div><div class=\"line\">GET /resources/access-control-with-credentials/ HTTP/1.1</div><div class=\"line\">...</div><div class=\"line\">Origin: http://my.com</div><div class=\"line\">Cookie: rememberMe=沐心chen</div><div class=\"line\"></div><div class=\"line\">//服务端返回，设置了更多cookie</div><div class=\"line\">HTTP/1.1 200 OK</div><div class=\"line\">...</div><div class=\"line\">Access-Control-Allow-Origin: http://my.com</div><div class=\"line\">Access-Control-Allow-Credentials: true</div><div class=\"line\">Vary: Accept-Encoding, Origin</div><div class=\"line\">Set-Cookie:rememberYou=沐心chen</div></pre></td></tr></table></figure></p>\n<p>值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用<em>，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。<br>上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 </em> 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。<br>尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。<br>浏览器支持：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Destop\tMobile</div><div class=\"line\">IE8+\tAndroid2.1</div><div class=\"line\">Chrome4+\tSafari3.2</div><div class=\"line\">firefox3.5+\t其它</div><div class=\"line\">Opera12+\t..</div><div class=\"line\">Safari4+\t..</div></pre></td></tr></table></figure></p>\n<h5 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h5>"}],"PostAsset":[],"PostCategory":[{"post_id":"cixq4y2fu0002smwd6m5xh9c4","category_id":"cixq4y2g20005smwdb2zsw7qf","_id":"cixq4y2g70007smwd1uczyskh"},{"post_id":"cixq4y2fy0004smwddpbq9mgl","category_id":"cixq4y2g20005smwdb2zsw7qf","_id":"cixq63ex80000b4wd0nk71tzr"},{"post_id":"cixq6laaa0001b4wdbwrkzm65","category_id":"cixq6m53l0004b4wdmlv4iac6","_id":"cixq6m53m0005b4wdjmxz4jku"}],"PostTag":[{"post_id":"cixq6laaa0001b4wdbwrkzm65","tag_id":"cixq6ly9b0002b4wdxcpx6ecw","_id":"cixq6ly9c0003b4wd13w5udl9"}],"Tag":[{"name":"Ajax","_id":"cixq6ly9b0002b4wdxcpx6ecw"}]}}