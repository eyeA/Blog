{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"f12e24eb4500224322b36ced3bfa60ba77616315","modified":1511936060000},{"_id":"source/favicon.ico","hash":"3078eac667309ad86eca16b9bb7ee15eb84a92e7","modified":1511936060000},{"_id":"source/_posts/2017-01-09-前端ajax跨域请求方案.md","hash":"14f2d92fc5491151d8d62373000ed3b13493c732","modified":1511936060000},{"_id":"source/_posts/2017-01-14-GIT基本命令合集.md","hash":"77549d9eb5dbd79b5eeb943820d19c4d8e743395","modified":1511936060000},{"_id":"source/_posts/2017-01-17-哆啦A梦.md","hash":"0b7e6877958a2e77ca9059cfcfc8a49933a64c58","modified":1511936060000},{"_id":"source/_posts/2017-02-28-知识付费.md","hash":"2935d0765391a600e3620db9271dfb16537b9af6","modified":1511936060000},{"_id":"source/_posts/2017-03-21-透明立方体.md","hash":"7601f714f189c8f4da52e6d2921ff8510fcfd00f","modified":1511936060000},{"_id":"source/_posts/2017-03-21-VR之A-FRAME接触1.md","hash":"b6b676a449e2e1bad7d393f353745042c3f3f8c0","modified":1511936060000},{"_id":"source/_posts/2017-03-23-ThreeJS-开篇.md","hash":"2f1098445d8691058857769b566a34fa2c9cf96e","modified":1511936060000},{"_id":"source/_posts/2017-03-23-ThreeJS-相机.md","hash":"f67fa8594cb17531b3d7a2a5fb6f3387a5563aec","modified":1511936060000},{"_id":"source/_posts/2017-03-29-移动端适配方案一.md","hash":"f6efee6e18e49799bf28907cca0219784aa14e28","modified":1511936060000},{"_id":"source/_posts/2017-03-30-移动端适配方案二.md","hash":"3592dfc5a7cb166aab0f117fd1b6c8775f03e831","modified":1511936060000},{"_id":"source/_posts/2017-03-31-发布Node模块到NPM社区.md","hash":"0cc073f5c401c97443f469024d531885b51974a7","modified":1511936060000},{"_id":"source/_posts/2017-04-24-资源和文章.md","hash":"c5b655f5af08f573b3ea6ce763d4402ceb7ee664","modified":1511936060000},{"_id":"source/_posts/2017-05-09-记一次在AWS上VPS搭建网站的一些事.md","hash":"8391ae12405f571716ab1244fcd1b2e5abd05e21","modified":1511936060000},{"_id":"source/_posts/html之localStorage.md","hash":"42aad649b8b4001c2d7384e1f72a579215c5ae68","modified":1511936060000},{"_id":"source/categories/index.md","hash":"dadc04b56e6bb1e48e5f18937aa3dd1c6dd1ab01","modified":1511936060000},{"_id":"source/_posts/night.md","hash":"00fbc949c4e9127df8c620065c5bd390aac5e909","modified":1511936060000},{"_id":"source/about/index.md","hash":"c6649fe0dfd6dbb5b339089c6d1f17aee9055c2e","modified":1511936060000},{"_id":"source/reading/index.md","hash":"1fe65ae241e31118e8f1f586620e232cfab2bf77","modified":1511936060000},{"_id":"source/tags/index.md","hash":"c78e487f7811a70b3e6cda9981e600a731ba297a","modified":1511936060000},{"_id":"public/baidusitemap.xml","hash":"7ce6377894ec1b2b01401f40d898897633195ef0","modified":1511939102387},{"_id":"public/sitemap.xml","hash":"e3df1688000849d6480d1835749d8fed49a6a325","modified":1511939102567},{"_id":"public/categories/index.html","hash":"e341bb9d703b67877ae6f72895a05069a7f3a807","modified":1511939102698},{"_id":"public/about/index.html","hash":"78e40d3254dd621e5598bc578768791f64e809c1","modified":1511939102699},{"_id":"public/reading/index.html","hash":"0ded38fbb3fd1256300d7baf82754d1c0c57fa48","modified":1511939102698},{"_id":"public/tags/index.html","hash":"58ed7478caf6fd4f6d517b17357071437ea46965","modified":1511939102699},{"_id":"public/2017/05/09/记一次在AWS上VPS搭建网站的一些事/index.html","hash":"930f48ae801d45c274b4a11b52960746df568d73","modified":1511939102699},{"_id":"public/2017/04/24/资源和文章/index.html","hash":"3e0b6c8b847649e816a8dcd6e71be4a1ef9d4e22","modified":1511939102703},{"_id":"public/2017/03/31/发布Node模块到NPM社区/index.html","hash":"83635b6a3bf3ad42a02b2bb016f9ae436d8f8a3e","modified":1511939102703},{"_id":"public/2017/03/30/移动端适配方案二/index.html","hash":"a84a889911c5ecfbac4b76a5bbb4d01575640f36","modified":1511939102703},{"_id":"public/2017/03/29/移动端适配方案一/index.html","hash":"a07871e20dc1d589a6ff59b1368539d7a240546b","modified":1511939102703},{"_id":"public/2017/03/23/ThreeJS-相机/index.html","hash":"8f708308ca5330d4cb34063caca8b4e4d4eb1e7c","modified":1511939102699},{"_id":"public/2017/03/22/ThreeJS-开篇/index.html","hash":"e68003d2638d92bdd10ca7f5cd043565feaef46a","modified":1511939102703},{"_id":"public/2017/03/21/透明立方体/index.html","hash":"9d92d79aeaa32390a22a39df4ec2174a76d987d0","modified":1511939102704},{"_id":"public/2017/03/21/VR之A-FRAME接触1/index.html","hash":"488b1f4e967da088d03109bc113b33d4ad2a80ff","modified":1511939102704},{"_id":"public/2017/02/28/知识付费/index.html","hash":"0049d6124db3e0888603d2ae8dd0912e35e46fdf","modified":1511939102704},{"_id":"public/2017/01/20/哆啦A梦/index.html","hash":"ccb9a81bb79550eeb8a842f002c79642ec439c3f","modified":1511939102704},{"_id":"public/2017/01/14/GIT基本命令合集/index.html","hash":"efba57123e704700d6dd7d248c6c8a5f12207830","modified":1511939102704},{"_id":"public/2017/01/09/前端ajax跨域请求方案/index.html","hash":"5694ccbe95d80ff0e3e6458e23534b81b50b94f2","modified":1511939102704},{"_id":"public/2017/01/05/html之localStorage/index.html","hash":"4e043f69efa1f92a28352e62ccd1cb9d3ca47c85","modified":1511939102704},{"_id":"public/2017/01/05/night/index.html","hash":"9b89ee9d470bbd9a065b7fe61b558410918bc41d","modified":1511939102699},{"_id":"public/archives/index.html","hash":"a8a45421c52bb4229b3d0e0f0341b4c3016e3dfe","modified":1511939102699},{"_id":"public/archives/page/2/index.html","hash":"2b4d3c9fc4704f7a1bbcf9c0fce07ad4303a25bb","modified":1511939102699},{"_id":"public/archives/page/3/index.html","hash":"434cc8b40b1e603e95939b95f0be57cb18dbf968","modified":1511939102699},{"_id":"public/archives/2017/index.html","hash":"fe6e673556bfb2bd36060fa27c6ae4812af72a69","modified":1511939102699},{"_id":"public/archives/2017/page/2/index.html","hash":"868ef0f01a7b4644a2109fbff20052640ce566bf","modified":1511939102699},{"_id":"public/archives/2017/page/3/index.html","hash":"6b1683c732f00908051f9fbd09223c576d69d14c","modified":1511939102699},{"_id":"public/archives/2017/01/index.html","hash":"7232fd3e56563251457281d3ef4425bfbb6422d0","modified":1511939102699},{"_id":"public/archives/2017/02/index.html","hash":"0628b4ef0009516fd84c64dff33172cb05835381","modified":1511939102699},{"_id":"public/archives/2017/03/index.html","hash":"80b45ca7be4e095e7dbd93f7fd94d3f44d483fd6","modified":1511939102699},{"_id":"public/archives/2017/03/page/2/index.html","hash":"4755429589c457175daffb4a5e1f43035a05fb3f","modified":1511939102699},{"_id":"public/archives/2017/04/index.html","hash":"64d69e7e102222a1b9c839ccdebc5eae66058c3b","modified":1511939102699},{"_id":"public/archives/2017/05/index.html","hash":"b6830902e2062dce1b0c83dc2e19e2301c294bf2","modified":1511939102699},{"_id":"public/categories/JavaScript/index.html","hash":"cd2ff811cf4bcb30f94c02824ef7ac060cc4b9d0","modified":1511939102701},{"_id":"public/categories/Tools/index.html","hash":"a3b0a276e0f6c6d6302fb4e88daf82b13fcad1eb","modified":1511939102702},{"_id":"public/categories/CSS/index.html","hash":"32ccaa81bc229c9f8c2506da6ccdaec43771c15a","modified":1511939102702},{"_id":"public/categories/热点思考/index.html","hash":"369f18296bba8a62ce12787050c7eafa476a9155","modified":1511939102702},{"_id":"public/categories/VR/index.html","hash":"e3488203a8a82efcc7d52239841b689db248b057","modified":1511939102702},{"_id":"public/categories/WebGL/index.html","hash":"8649510b8166c3c161d4745680d2148342a82b5a","modified":1511939102702},{"_id":"public/categories/mobile/index.html","hash":"224d847c291d49163cfb08b85d641ba047ea5764","modified":1511939102702},{"_id":"public/categories/Node/index.html","hash":"8538ca820c6d2d46c347753195ce3d74ed62b135","modified":1511939102702},{"_id":"public/categories/resources/index.html","hash":"4e8646384ab7b950ea81a85c4747176b2fa960fb","modified":1511939102702},{"_id":"public/categories/性能优化/index.html","hash":"c0f1b27b07cbd97148529707e7052f95cbb750db","modified":1511939102702},{"_id":"public/categories/阅读/index.html","hash":"e1bdfc05995087c20193858c2cfef2447a349f90","modified":1511939102702},{"_id":"public/categories/Node/npm/index.html","hash":"f6ae9a8433e9ac8bc696b93ec6cab0ab49a9a285","modified":1511939102702},{"_id":"public/index.html","hash":"bd197ca0cdfa90f5c8c40fd2d55825bd6eae016a","modified":1511939102704},{"_id":"public/page/2/index.html","hash":"d002123117d4e32374749fde5f38b590d24aca94","modified":1511939102704},{"_id":"public/page/3/index.html","hash":"17391d06476e7c2da4219295cfad8c9b9f7d2c6c","modified":1511939102704},{"_id":"public/tags/Ajax/index.html","hash":"545d135e79c78da9221acaff7577748f7dfc622f","modified":1511939102702},{"_id":"public/tags/Git/index.html","hash":"30204cfc0bb6f4a58e37d0bc9346727604f7184b","modified":1511939102702},{"_id":"public/tags/CSS/index.html","hash":"d45e5c34d0121b03788816841a8a8f59e7bf0a29","modified":1511939102702},{"_id":"public/tags/知识付费、变现/index.html","hash":"ffd4c61e3a67775a91d9429887e92f3645e0b3d1","modified":1511939102702},{"_id":"public/tags/知识共享/index.html","hash":"282142c177b593dc8bfe7bae091626c34b3311a5","modified":1511939102702},{"_id":"public/tags/VR/index.html","hash":"6068b186afe9ff6fa86c98048d6fd2b9e67f23f4","modified":1511939102702},{"_id":"public/tags/A-FRAME/index.html","hash":"a8501fb2f7c3bbbd73272cd1cda975064e431e31","modified":1511939102702},{"_id":"public/tags/WebGL/index.html","hash":"a025bbf3d6e1a91f3791bfbfe6f5ab9fe2cd581c","modified":1511939102702},{"_id":"public/tags/ThreeJS/index.html","hash":"cb17067d3baba23b861f8df0297f40feac114983","modified":1511939102702},{"_id":"public/tags/移动端/index.html","hash":"78e122d00572be53cb32a4fbe8f29a2a94f05f59","modified":1511939102702},{"_id":"public/tags/Node/index.html","hash":"fe3980bff418c88a6e069ef176f69ce4007d9f00","modified":1511939102702},{"_id":"public/tags/resource/index.html","hash":"f9aab0bc801ada56829a4270bd4dc5019a42a1b0","modified":1511939102703},{"_id":"public/tags/AWS/index.html","hash":"b1ac46d8103ac8eea4fb2d7cbb8954073bdbb7d7","modified":1511939102703},{"_id":"public/tags/VPS/index.html","hash":"63bb997b7c4b0d1f7c8977ab3109ba53c47aeddc","modified":1511939102703},{"_id":"public/tags/node/index.html","hash":"754c23c7257a4d36ec9826e1b870661fcd25c2cd","modified":1511939102703},{"_id":"public/tags/nginx/index.html","hash":"a01cb1d607a6ef0f8239268821a1b9786bb60700","modified":1511939102703},{"_id":"public/CNAME","hash":"f12e24eb4500224322b36ced3bfa60ba77616315","modified":1511939102717},{"_id":"public/favicon.ico","hash":"3078eac667309ad86eca16b9bb7ee15eb84a92e7","modified":1511939102717},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1511937465000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1511937587000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1511937465000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1511937465000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1511937465000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1511937465000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1511937465000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1511937465000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1511937465000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1511937465000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1511937465000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1511937465000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1511937465000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1511937465000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1511937587000},{"_id":"themes/next/.git/logs/HEAD","hash":"170812723246a319741b69e3a9ae8a25f9fee478","modified":1511937587000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"170812723246a319741b69e3a9ae8a25f9fee478","modified":1511937587000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"170812723246a319741b69e3a9ae8a25f9fee478","modified":1511937587000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1511937587000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1511937587000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1511937587000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1511937587000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1511937587000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1511937587000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1511937587000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1511937587000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1511937587000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1511937587000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1511937587000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1511937587000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1511937587000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1511937587000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1511937587000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1511937587000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1511937587000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1511937587000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1511937587000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1511937587000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1511937587000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1511937587000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1511937587000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1511937587000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1511937587000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1511937587000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1511937587000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1511937587000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1511937587000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1511937587000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1511937587000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1511937587000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1511937587000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1511937587000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1511937587000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1511937587000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1511937587000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1511937587000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1511937587000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1511937587000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1511937587000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1511937587000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1511937587000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1511937587000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1511937587000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1511937587000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1511937587000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1511937587000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1511937587000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1511937587000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1511937587000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1511937587000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1511937587000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1511937587000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1511937587000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1511937587000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1511937587000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1511937587000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1511937587000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1511937587000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1511937587000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1511937587000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1511937587000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1511937587000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1511937587000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1511937587000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1511937587000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1511937587000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1511937587000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1511937587000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1511937587000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1511937587000},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1511937587000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1511937587000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1511937587000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1511937587000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1511937587000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1511937587000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1511937587000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1511937587000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1511937587000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1511937587000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1511937587000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1511937587000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1511937587000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1511937587000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1511937587000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1511937587000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1511937587000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1511937587000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1511937587000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1511937587000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511937587000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1511937587000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511937587000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511937587000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1511937587000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1511937587000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1511937587000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1511937587000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1511937587000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1511937587000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1511937587000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1511937587000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1511937587000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511937587000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1511937587000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511937587000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1511937587000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1511937587000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511937587000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1511937587000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1511937587000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1511937587000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1511937587000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1511937587000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1511937587000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1511937587000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1511937587000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1511937587000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1511937587000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1511937587000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1511937587000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1511937587000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1511937587000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1511937587000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1511937587000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1511937587000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1511937587000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1511937587000},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1511937587000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511937587000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511937587000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511937587000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1511937587000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1511937587000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1511937587000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1511937587000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1511937587000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1511937587000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1511937587000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1511937587000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1511937587000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1511937587000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1511937587000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1511937587000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1511937587000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1511937587000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1511937587000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1511937587000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1511937587000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511937587000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1511937587000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1511937587000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1511937587000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1511937587000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1511937587000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1511937587000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1511937587000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1511937587000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1511937587000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1511937587000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1511937587000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1511937587000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1511937587000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1511937587000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511937587000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1511937587000},{"_id":"themes/next/.git/objects/pack/pack-c4ee36d6afc8727850df4f55401af0c69b4c5239.idx","hash":"e28a4f09a9265639f92fddc4b49b73a547251f72","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511937587000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1511937587000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1511937587000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1511937587000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1511937587000},{"_id":"themes/next/.git/objects/pack/pack-c4ee36d6afc8727850df4f55401af0c69b4c5239.pack","hash":"17c64ccb3143602b1b40cc8a756ad9b214000a20","modified":1511937587000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1511937587000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1511937587000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1511937587000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1511937587000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1511937587000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1511937587000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1511937587000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1511937587000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1511937587000},{"_id":"themes/next/_config.yml","hash":"428c54f921842233adc9c720d5059b4e3547ad51","modified":1511937970000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1511937587000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1511937587000},{"_id":"themes/next/README.md","hash":"529d53dfa97678f8ce4c95620b26e61154162a29","modified":1511937587000},{"_id":"themes/next/README.cn.md","hash":"02713071ef9e260b3fe77f4403942189d55a00e9","modified":1511937587000},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1511937587000},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1511937587000},{"_id":"themes/next/.git/index","hash":"cd9c1dd2e23a4a1257e3629c58c1f36a2b40c6f1","modified":1511937587000},{"_id":"themes/next/.git/packed-refs","hash":"f1fe33b8cdc221749eb26034a82b483cd86ef1b6","modified":1511937587000},{"_id":"themes/next/.git/refs/heads/master","hash":"53814d46a4f19b2e026339024c8c1e2f179bdb6c","modified":1511937587000},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1511939102717},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511939102717},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511939102717},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1511939102717},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1511939102717},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1511939102717},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1511939102717},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1511939102717},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1511939102717},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1511939102718},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1511939102718},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1511939102718},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511939102718},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1511939102718},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511939102718},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1511939102718},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1511939102718},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511939102718},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511939102718},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511939102718},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511939102718},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511939102718},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511939102718},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511939102718},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511939102718},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511939102718},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511939102718},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511939102718},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511939102718},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511939102718},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1511939102718},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1511939102718},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1511939102718},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511939103451},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511939103525},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1511939103593},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1511939103593},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1511939103593},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1511939103593},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1511939103593},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1511939103593},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1511939103593},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1511939103593},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1511939103593},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1511939103593},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1511939103593},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1511939103593},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511939103594},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511939103594},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1511939103594},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1511939103594},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1511939103594},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1511939103594},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1511939103594},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1511939103594},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1511939103594},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1511939103594},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1511939103594},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511939103594},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1511939103594},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1511939103594},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1511939103594},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1511939103594},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1511939103594},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1511939103594},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1511939103595},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511939103595},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511939103595},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511939103595},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511939103595},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511939103596},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511939103596},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1511939103596},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1511939103596},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1511939103596},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1511939103596},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1511939103596},{"_id":"public/css/main.css","hash":"40c1faa9bceda35afc66d0e2e477c4842c0bae19","modified":1511939103596},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1511939103597},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1511939103597},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1511939103597},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1511939103597},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1511939103597},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1511939103597},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1511939103598},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1511939103598},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1511939103598},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1511939103598},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1511939103598},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1511939103598},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1511939103598},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1511939103598},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1511939103598},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1511939103598},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1511939103598},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1511939103598},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1511939103598},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1511939103599},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511939103599},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511939103599},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511939103599},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1511939103619}],"Category":[{"name":"JavaScript","_id":"cjakobkl60004bbfyyv77kevc"},{"name":"Tools","_id":"cjakobklj000abbfyvd4s8fir"},{"name":"CSS","_id":"cjakobklo000gbbfyztge8bxq"},{"name":"热点思考","_id":"cjakobkls000mbbfydbc1ndk4"},{"name":"VR","_id":"cjakobkm2000wbbfyxbavk0eb"},{"name":"WebGL","_id":"cjakobkm70014bbfy3yqu45xe"},{"name":"mobile","_id":"cjakobkm90018bbfyzwq7p5yr"},{"name":"Node","_id":"cjakobkmd001fbbfy195ov8qx"},{"name":"resources","_id":"cjakobkme001jbbfyklbdmtjb"},{"name":"性能优化","_id":"cjakobkmf001nbbfyptwmvdgh"},{"name":"阅读","_id":"cjakobkmh001rbbfy5w3ge5sd"},{"name":"npm","parent":"cjakobkmd001fbbfy195ov8qx","_id":"cjakobkmj001vbbfy8l3lryp8"}],"Data":[],"Page":[{"title":"","date":"2017-01-04T15:54:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: \ndate: 2017-01-04 23:54:16\ntype: 'categories'\n---\n","updated":"2017-11-29T06:14:20.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjakobkky0001bbfy0xjmfum2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于我的那点事儿","date":"2017-02-24T13:40:57.000Z","tags":null,"categories":"自我","updated":"2017-11-29T06:14:20.000Z","_content":"关于我的故事，先听几首歌曲吧，晚点回来补齐。\n沟通交流：deyesea@gmail.com\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=315 height=240 src=\"//music.163.com/outchain/player?type=0&id=361201638&auto=1&height=430\"></iframe>\n","source":"about/index.md","raw":"---\ntitle: 关于我的那点事儿\ndate: 2017-02-24 21:40:57\ntags:\ncategories: 自我\nupdated:\n---\n关于我的故事，先听几首歌曲吧，晚点回来补齐。\n沟通交流：deyesea@gmail.com\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=315 height=240 src=\"//music.163.com/outchain/player?type=0&id=361201638&auto=1&height=430\"></iframe>\n","path":"about/index.html","comments":1,"layout":"page","_id":"cjakobkl40003bbfy8d55ic3d","content":"<p>关于我的故事，先听几首歌曲吧，晚点回来补齐。<br>沟通交流：deyesea@gmail.com</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"315\" height=\"240\" src=\"//music.163.com/outchain/player?type=0&id=361201638&auto=1&height=430\"></iframe>\n","site":{"data":{}},"excerpt":"","more":"<p>关于我的故事，先听几首歌曲吧，晚点回来补齐。<br>沟通交流：deyesea@gmail.com</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"315\" height=\"240\" src=\"//music.163.com/outchain/player?type=0&id=361201638&auto=1&height=430\"></iframe>\n"},{"title":"阅读","date":"2017-01-04T15:57:11.000Z","_content":"\n阅读  ","source":"reading/index.md","raw":"---\ntitle: 阅读\ndate: 2017-01-04 23:57:11\n---\n\n阅读  ","updated":"2017-11-29T06:14:20.000Z","path":"reading/index.html","comments":1,"layout":"page","_id":"cjakobkle0007bbfytrltake6","content":"<p>阅读  </p>\n","site":{"data":{}},"excerpt":"","more":"<p>阅读  </p>\n"},{"title":"","date":"2017-02-25T03:57:28.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: \ndate: 2017-02-25 11:57:28\ntype: 'tags'\n---\n","updated":"2017-11-29T06:14:20.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjakobkmr002abbfy6cuucqjs","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Ajax跨域请求方案","date":"2017-01-09T14:26:01.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"#### 1.所谓跨域\n跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。\n另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。\n<!-- more -->\n#### 2.跨域形成\n请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：\n协议跨域，例如从 http 站点访问 https 站点。\n主机跨域，例如从 a.baidu.com 访问 b.baidu.com\n端口跨域，例如从80端口的站点访问8080端口的站点。\n请求域名和直接请求该域名对应的ip之间也算跨域。\n内部判断规则：url首部匹配\n```javascript```\nwindow.location.protocol + window.location.host\n```\n简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。\n#### 3.跨域方案之Jsonp\n谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。\n例如常规下的请求\n```javascript```\nget => http://a.test.com/users\n=>>\n[{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：\n```javascript```\n<script src=\"http://a.test.com/users\"></script>\n```\n显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：\n```javascript```\njsonp([{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n对于js而言，这就是一个普通的函数调用\n```javascript```\njsonp(...params)\n```\n那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。\n```javascript```\nvar jsonp = function(data){\n    //输出json\n    console.dir(data);\n}\n```\njsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。\n```javascript```\n<script src=\"http://a.test.com/users?callback=jsonp\"></script>\n```\n后端得到callback参数时，使用该值包装json数据，否则正常处理。\n需要注意的是，处理jsonp的函数必须在window下，也即\n```javascript```\nwindow.jsonp = function(data){\n    console.dir(data);\n}\n```\n方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。\n知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？\n```javascript```\nvar getJsonp = function(url, success){\n    //声明window下的jsonp函数\n    window.jsonp = function(data){\n        //jsonp函数被执行将data转发到success函数\n        success(data);\n    }\n    var src = '';\n    //判断地址是否带其它参数决定callback怎么拼接\n    if(url.IndexOf('?') != -1){\n        src = url + '&callback=jsonp';\n    }else{\n        src = url + '?callback=jsonp';\n    }\n    //动态创建script标签\n    var script = document.createElement('script');\n    script.type = \"text/javascript\";\n    script.src = src;\n    document.head.appendChild(script);\n}\n//用法\ngetJsonp('http://test.com/users', function(data){\n    console.log('得到jsonp数据：',JSON.stringify(data));\n});\n```\n上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。\n浏览器支持：几乎所有\n#### 4.跨域解决方案之CORS\nCORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。\nCORS使得以下常见场景得到支持：\n使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。\nweb 字体(css 中通过 @font-face 使用跨站字体资源)\n使用 drawImage 绘制 Images/video 画面到 canvas\nCORS有以下三种常见的访问控制场景：\n简单请求\n只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。\n不使用自定义请求头\n这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：\n```javascript```\nGET /resources/public-data/ HTTP/1.1\n...\nOrigin: http://my.com\n```\n此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。\n```javascript```\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\n```\n这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）\n预请求\n预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：\n请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。\n使用自定义请求头\n例：\n```javascript```\nvar request = new XMLHttpRequest();\nvar url = 'http://test.com/users';\nvar body = 'test';\n\nfunction coAccess(){\n  if(request)\n  {\n    request.open('POST', url, true);\n    request.setRequestHeader('X-CUSTOMER-HEADER', '沐心chen');\n    request.setRequestHeader('Content-Type', 'application/xml');\n    request.onreadystatechange = function(state){\n        ...\n    };\n    request.send(body);\n  }\n  ...\n  ```\n上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。\n此时浏览器与后端的交互过程如下：\n```javascript```\n//浏览器预先发起OPTIONS请求\n，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers\nOPTIONS /resources/post-here/ HTTP/1.1\n...\nOrigin: http://my.com\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-CUSTOMER-HEADER\n//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nAccess-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS\nAccess-Control-Allow-Headers: X-CUSTOMER-HEADER\nAccess-Control-Max-Age: 1728000\nVary: Accept-Encoding, Origin\n\n//浏览器判断本次请求被允许，真实发起原先的POST请求\nPOST /resources/post-here/ HTTP/1.1\n...\nX-CUSTOMER-HEADER: 沐心chen\nOrigin: http://my.com\n\n//服务器返回数据\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nVary: Accept-Encoding, Origin\n```\nOPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。\n带凭证的请求\n跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。\n```javascript```\n var request = new XMLHttpRequest();\n var url = 'http://test.com/users';\n\n function coAccess(){\n     if(request)\n     {\n       request.open('GET', url, true);\n       request.withCredentials = true;\n       request.onreadystatechange = function(state){\n           ...\n       };\n       request.send(body);\n     }\n     ...\n```\n我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。\n```javascript```\n //浏览器发起请求，携带cookie信息\n GET /resources/access-control-with-credentials/ HTTP/1.1\n ...\n Origin: http://my.com\n Cookie: rememberMe=沐心chen\n\n //服务端返回，设置了更多cookie\n HTTP/1.1 200 OK\n ...\n Access-Control-Allow-Origin: http://my.com\n Access-Control-Allow-Credentials: true\n Vary: Accept-Encoding, Origin\n Set-Cookie:rememberYou=沐心chen\n ```\n值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用*，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。\n上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 * 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。\n尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。\n浏览器支持：\n```html```\nDestop\tMobile\nIE8+\tAndroid2.1\nChrome4+\tSafari3.2\nfirefox3.5+\t其它\nOpera12+\t..\nSafari4+\t..\n```\n\n（本文完）\n\n","source":"_posts/2017-01-09-前端ajax跨域请求方案.md","raw":"---\ntitle: Ajax跨域请求方案\ndate: 2017-01-09 22:26:01\ntags: Ajax\ncategories: JavaScript\nupdated:\n---\n#### 1.所谓跨域\n跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。\n另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。\n<!-- more -->\n#### 2.跨域形成\n请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：\n协议跨域，例如从 http 站点访问 https 站点。\n主机跨域，例如从 a.baidu.com 访问 b.baidu.com\n端口跨域，例如从80端口的站点访问8080端口的站点。\n请求域名和直接请求该域名对应的ip之间也算跨域。\n内部判断规则：url首部匹配\n```javascript```\nwindow.location.protocol + window.location.host\n```\n简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。\n#### 3.跨域方案之Jsonp\n谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。\n例如常规下的请求\n```javascript```\nget => http://a.test.com/users\n=>>\n[{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：\n```javascript```\n<script src=\"http://a.test.com/users\"></script>\n```\n显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：\n```javascript```\njsonp([{\n    username : '沐心chen',\n    sex : '男',\n    address : '广东深圳'\n},{\n    username : '李彦宏',\n    sex : '男',\n    address : '山西阳泉'\n}]\n```\n对于js而言，这就是一个普通的函数调用\n```javascript```\njsonp(...params)\n```\n那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。\n```javascript```\nvar jsonp = function(data){\n    //输出json\n    console.dir(data);\n}\n```\njsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。\n```javascript```\n<script src=\"http://a.test.com/users?callback=jsonp\"></script>\n```\n后端得到callback参数时，使用该值包装json数据，否则正常处理。\n需要注意的是，处理jsonp的函数必须在window下，也即\n```javascript```\nwindow.jsonp = function(data){\n    console.dir(data);\n}\n```\n方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。\n知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？\n```javascript```\nvar getJsonp = function(url, success){\n    //声明window下的jsonp函数\n    window.jsonp = function(data){\n        //jsonp函数被执行将data转发到success函数\n        success(data);\n    }\n    var src = '';\n    //判断地址是否带其它参数决定callback怎么拼接\n    if(url.IndexOf('?') != -1){\n        src = url + '&callback=jsonp';\n    }else{\n        src = url + '?callback=jsonp';\n    }\n    //动态创建script标签\n    var script = document.createElement('script');\n    script.type = \"text/javascript\";\n    script.src = src;\n    document.head.appendChild(script);\n}\n//用法\ngetJsonp('http://test.com/users', function(data){\n    console.log('得到jsonp数据：',JSON.stringify(data));\n});\n```\n上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。\n浏览器支持：几乎所有\n#### 4.跨域解决方案之CORS\nCORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。\nCORS使得以下常见场景得到支持：\n使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。\nweb 字体(css 中通过 @font-face 使用跨站字体资源)\n使用 drawImage 绘制 Images/video 画面到 canvas\nCORS有以下三种常见的访问控制场景：\n简单请求\n只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。\n不使用自定义请求头\n这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：\n```javascript```\nGET /resources/public-data/ HTTP/1.1\n...\nOrigin: http://my.com\n```\n此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。\n```javascript```\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\n```\n这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）\n预请求\n预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：\n请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。\n使用自定义请求头\n例：\n```javascript```\nvar request = new XMLHttpRequest();\nvar url = 'http://test.com/users';\nvar body = 'test';\n\nfunction coAccess(){\n  if(request)\n  {\n    request.open('POST', url, true);\n    request.setRequestHeader('X-CUSTOMER-HEADER', '沐心chen');\n    request.setRequestHeader('Content-Type', 'application/xml');\n    request.onreadystatechange = function(state){\n        ...\n    };\n    request.send(body);\n  }\n  ...\n  ```\n上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。\n此时浏览器与后端的交互过程如下：\n```javascript```\n//浏览器预先发起OPTIONS请求\n，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers\nOPTIONS /resources/post-here/ HTTP/1.1\n...\nOrigin: http://my.com\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-CUSTOMER-HEADER\n//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nAccess-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS\nAccess-Control-Allow-Headers: X-CUSTOMER-HEADER\nAccess-Control-Max-Age: 1728000\nVary: Accept-Encoding, Origin\n\n//浏览器判断本次请求被允许，真实发起原先的POST请求\nPOST /resources/post-here/ HTTP/1.1\n...\nX-CUSTOMER-HEADER: 沐心chen\nOrigin: http://my.com\n\n//服务器返回数据\nHTTP/1.1 200 OK\n...\nAccess-Control-Allow-Origin: http://my.com\nVary: Accept-Encoding, Origin\n```\nOPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。\n带凭证的请求\n跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。\n```javascript```\n var request = new XMLHttpRequest();\n var url = 'http://test.com/users';\n\n function coAccess(){\n     if(request)\n     {\n       request.open('GET', url, true);\n       request.withCredentials = true;\n       request.onreadystatechange = function(state){\n           ...\n       };\n       request.send(body);\n     }\n     ...\n```\n我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。\n```javascript```\n //浏览器发起请求，携带cookie信息\n GET /resources/access-control-with-credentials/ HTTP/1.1\n ...\n Origin: http://my.com\n Cookie: rememberMe=沐心chen\n\n //服务端返回，设置了更多cookie\n HTTP/1.1 200 OK\n ...\n Access-Control-Allow-Origin: http://my.com\n Access-Control-Allow-Credentials: true\n Vary: Accept-Encoding, Origin\n Set-Cookie:rememberYou=沐心chen\n ```\n值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用*，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。\n上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 * 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。\n尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。\n浏览器支持：\n```html```\nDestop\tMobile\nIE8+\tAndroid2.1\nChrome4+\tSafari3.2\nfirefox3.5+\t其它\nOpera12+\t..\nSafari4+\t..\n```\n\n（本文完）\n\n","slug":"前端ajax跨域请求方案","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobkkt0000bbfyo8307dnx","content":"<h4 id=\"1-所谓跨域\"><a href=\"#1-所谓跨域\" class=\"headerlink\" title=\"1.所谓跨域\"></a>1.所谓跨域</h4><p>跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。<br>另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。<br><a id=\"more\"></a></p>\n<h4 id=\"2-跨域形成\"><a href=\"#2-跨域形成\" class=\"headerlink\" title=\"2.跨域形成\"></a>2.跨域形成</h4><p>请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：<br>协议跨域，例如从 http 站点访问 https 站点。<br>主机跨域，例如从 a.baidu.com 访问 b.baidu.com<br>端口跨域，例如从80端口的站点访问8080端口的站点。<br>请求域名和直接请求该域名对应的ip之间也算跨域。<br>内部判断规则：url首部匹配<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.location.protocol + window.location.host</span><br></pre></td></tr></table></figure></p>\n<p>简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。</p>\n<h4 id=\"3-跨域方案之Jsonp\"><a href=\"#3-跨域方案之Jsonp\" class=\"headerlink\" title=\"3.跨域方案之Jsonp\"></a>3.跨域方案之Jsonp</h4><p>谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。<br>例如常规下的请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get =&gt; http://a.test.com/users</span><br><span class=\"line\">=&gt;&gt;</span><br><span class=\"line\">[&#123;</span><br><span class=\"line\">    username : &apos;沐心chen&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;广东深圳&apos;</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    username : &apos;李彦宏&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;山西阳泉&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;http://a.test.com/users&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp([&#123;</span><br><span class=\"line\">    username : &apos;沐心chen&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;广东深圳&apos;</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    username : &apos;李彦宏&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;山西阳泉&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>对于js而言，这就是一个普通的函数调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp(...params)</span><br></pre></td></tr></table></figure></p>\n<p>那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var jsonp = function(data)&#123;</span><br><span class=\"line\">    //输出json</span><br><span class=\"line\">    console.dir(data);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>jsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;http://a.test.com/users?callback=jsonp&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>后端得到callback参数时，使用该值包装json数据，否则正常处理。<br>需要注意的是，处理jsonp的函数必须在window下，也即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.jsonp = function(data)&#123;</span><br><span class=\"line\">    console.dir(data);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。<br>知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var getJsonp = function(url, success)&#123;</span><br><span class=\"line\">    //声明window下的jsonp函数</span><br><span class=\"line\">    window.jsonp = function(data)&#123;</span><br><span class=\"line\">        //jsonp函数被执行将data转发到success函数</span><br><span class=\"line\">        success(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var src = &apos;&apos;;</span><br><span class=\"line\">    //判断地址是否带其它参数决定callback怎么拼接</span><br><span class=\"line\">    if(url.IndexOf(&apos;?&apos;) != -1)&#123;</span><br><span class=\"line\">        src = url + &apos;&amp;callback=jsonp&apos;;</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        src = url + &apos;?callback=jsonp&apos;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //动态创建script标签</span><br><span class=\"line\">    var script = document.createElement(&apos;script&apos;);</span><br><span class=\"line\">    script.type = &quot;text/javascript&quot;;</span><br><span class=\"line\">    script.src = src;</span><br><span class=\"line\">    document.head.appendChild(script);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//用法</span><br><span class=\"line\">getJsonp(&apos;http://test.com/users&apos;, function(data)&#123;</span><br><span class=\"line\">    console.log(&apos;得到jsonp数据：&apos;,JSON.stringify(data));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。<br>浏览器支持：几乎所有</p>\n<h4 id=\"4-跨域解决方案之CORS\"><a href=\"#4-跨域解决方案之CORS\" class=\"headerlink\" title=\"4.跨域解决方案之CORS\"></a>4.跨域解决方案之CORS</h4><p>CORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。<br>CORS使得以下常见场景得到支持：<br>使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。<br>web 字体(css 中通过 @font-face 使用跨站字体资源)<br>使用 drawImage 绘制 Images/video 画面到 canvas<br>CORS有以下三种常见的访问控制场景：<br>简单请求<br>只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。<br>不使用自定义请求头<br>这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /resources/public-data/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">Origin: http://my.com</span><br></pre></td></tr></table></figure></p>\n<p>此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br></pre></td></tr></table></figure></p>\n<p>这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）<br>预请求<br>预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：<br>请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。<br>使用自定义请求头<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var request = new XMLHttpRequest();</span><br><span class=\"line\">var url = &apos;http://test.com/users&apos;;</span><br><span class=\"line\">var body = &apos;test&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">function coAccess()&#123;</span><br><span class=\"line\">  if(request)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    request.open(&apos;POST&apos;, url, true);</span><br><span class=\"line\">    request.setRequestHeader(&apos;X-CUSTOMER-HEADER&apos;, &apos;沐心chen&apos;);</span><br><span class=\"line\">    request.setRequestHeader(&apos;Content-Type&apos;, &apos;application/xml&apos;);</span><br><span class=\"line\">    request.onreadystatechange = function(state)&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    request.send(body);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br></pre></td></tr></table></figure></p>\n<p>上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。<br>此时浏览器与后端的交互过程如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//浏览器预先发起OPTIONS请求</span><br><span class=\"line\">，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers</span><br><span class=\"line\">OPTIONS /resources/post-here/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">Origin: http://my.com</span><br><span class=\"line\">Access-Control-Request-Method: POST</span><br><span class=\"line\">Access-Control-Request-Headers: X-CUSTOMER-HEADER</span><br><span class=\"line\">//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br><span class=\"line\">Access-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS</span><br><span class=\"line\">Access-Control-Allow-Headers: X-CUSTOMER-HEADER</span><br><span class=\"line\">Access-Control-Max-Age: 1728000</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br><span class=\"line\"></span><br><span class=\"line\">//浏览器判断本次请求被允许，真实发起原先的POST请求</span><br><span class=\"line\">POST /resources/post-here/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">X-CUSTOMER-HEADER: 沐心chen</span><br><span class=\"line\">Origin: http://my.com</span><br><span class=\"line\"></span><br><span class=\"line\">//服务器返回数据</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br></pre></td></tr></table></figure></p>\n<p>OPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。<br>带凭证的请求<br>跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var request = new XMLHttpRequest();</span><br><span class=\"line\">var url = &apos;http://test.com/users&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">function coAccess()&#123;</span><br><span class=\"line\">    if(request)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      request.open(&apos;GET&apos;, url, true);</span><br><span class=\"line\">      request.withCredentials = true;</span><br><span class=\"line\">      request.onreadystatechange = function(state)&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      request.send(body);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure></p>\n<p>我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//浏览器发起请求，携带cookie信息</span><br><span class=\"line\">GET /resources/access-control-with-credentials/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">Origin: http://my.com</span><br><span class=\"line\">Cookie: rememberMe=沐心chen</span><br><span class=\"line\"></span><br><span class=\"line\">//服务端返回，设置了更多cookie</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br><span class=\"line\">Access-Control-Allow-Credentials: true</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br><span class=\"line\">Set-Cookie:rememberYou=沐心chen</span><br></pre></td></tr></table></figure></p>\n<p>值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用<em>，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。<br>上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 </em> 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。<br>尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。<br>浏览器支持：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Destop\tMobile</span><br><span class=\"line\">IE8+\tAndroid2.1</span><br><span class=\"line\">Chrome4+\tSafari3.2</span><br><span class=\"line\">firefox3.5+\t其它</span><br><span class=\"line\">Opera12+\t..</span><br><span class=\"line\">Safari4+\t..</span><br></pre></td></tr></table></figure></p>\n<p>（本文完）</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"1-所谓跨域\"><a href=\"#1-所谓跨域\" class=\"headerlink\" title=\"1.所谓跨域\"></a>1.所谓跨域</h4><p>跨域是一种浏览器同源安全策略，也即浏览器单方面限制脚本的跨域访问。很多人可能误认为资源跨域时无法请求，实质上请求是可以正常发起的（指通常情况下，部分浏览器存在部分特例），后端也可能正常进行了处理，只是在返回时被浏览器所拦截。可以论证这一点的著名案例就是CSRF跨站攻击。<br>另外，所谓跨域都是在讨论浏览器行为，包括各种webview容器，其中犹以 XmlHttpRequest 为主。正是由于javascript跑在浏览器之上，所以ajax的跨域成了痛点。<br>","more":"</p>\n<h4 id=\"2-跨域形成\"><a href=\"#2-跨域形成\" class=\"headerlink\" title=\"2.跨域形成\"></a>2.跨域形成</h4><p>请求的url与当前页面不同即产生跨域，除常理上的站点直接性不同（百度域名下访问谷歌资源），同个站点也可以产生跨域：<br>协议跨域，例如从 http 站点访问 https 站点。<br>主机跨域，例如从 a.baidu.com 访问 b.baidu.com<br>端口跨域，例如从80端口的站点访问8080端口的站点。<br>请求域名和直接请求该域名对应的ip之间也算跨域。<br>内部判断规则：url首部匹配<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.location.protocol + window.location.host</span><br></pre></td></tr></table></figure></p>\n<p>简单性的将协议、主机名和端口号抽出进行对比，不同即跨域，所以也是不会去转化为ip地址的。</p>\n<h4 id=\"3-跨域方案之Jsonp\"><a href=\"#3-跨域方案之Jsonp\" class=\"headerlink\" title=\"3.跨域方案之Jsonp\"></a>3.跨域方案之Jsonp</h4><p>谈起Jsonp在跨域处理方案中也算鼎鼎大名，这是一种非官方的解决方案，源于浏览器允许一些带src属性的标签跨域，例如iframe、script、img等。而Jsonp即是利用了script加载外部脚本的功能。<br>例如常规下的请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get =&gt; http://a.test.com/users</span><br><span class=\"line\">=&gt;&gt;</span><br><span class=\"line\">[&#123;</span><br><span class=\"line\">    username : &apos;沐心chen&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;广东深圳&apos;</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    username : &apos;李彦宏&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;山西阳泉&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>由于浏览器的同源策略被阻止，此时前端使用script脚本去加载：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;http://a.test.com/users&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>显然可以成功请求到，只是单纯的json数据无法使用。此时如果后端介入，返回之前包装成如下形式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp([&#123;</span><br><span class=\"line\">    username : &apos;沐心chen&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;广东深圳&apos;</span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    username : &apos;李彦宏&apos;,</span><br><span class=\"line\">    sex : &apos;男&apos;,</span><br><span class=\"line\">    address : &apos;山西阳泉&apos;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure></p>\n<p>对于js而言，这就是一个普通的函数调用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp(...params)</span><br></pre></td></tr></table></figure></p>\n<p>那么只要前端定义jsonp这个函数，它就会被执行并传入json数据。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var jsonp = function(data)&#123;</span><br><span class=\"line\">    //输出json</span><br><span class=\"line\">    console.dir(data);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>jsonp跨域的流程走完，只是单纯到这一步还不行，因为它将导致后端无法正确处理非jsonp的请求，所以通常会约定一个参数callback，带上回调的函数名。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=&quot;http://a.test.com/users?callback=jsonp&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>\n<p>后端得到callback参数时，使用该值包装json数据，否则正常处理。<br>需要注意的是，处理jsonp的函数必须在window下，也即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">window.jsonp = function(data)&#123;</span><br><span class=\"line\">    console.dir(data);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>方案虽然可行，但也同时意味着jsonp只能发起get请求，对于post就无能为力了。<br>知道了原理，使用起来相对还是麻烦，那么如何用js简单封装一个jsonp方案呢？<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var getJsonp = function(url, success)&#123;</span><br><span class=\"line\">    //声明window下的jsonp函数</span><br><span class=\"line\">    window.jsonp = function(data)&#123;</span><br><span class=\"line\">        //jsonp函数被执行将data转发到success函数</span><br><span class=\"line\">        success(data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var src = &apos;&apos;;</span><br><span class=\"line\">    //判断地址是否带其它参数决定callback怎么拼接</span><br><span class=\"line\">    if(url.IndexOf(&apos;?&apos;) != -1)&#123;</span><br><span class=\"line\">        src = url + &apos;&amp;callback=jsonp&apos;;</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">        src = url + &apos;?callback=jsonp&apos;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //动态创建script标签</span><br><span class=\"line\">    var script = document.createElement(&apos;script&apos;);</span><br><span class=\"line\">    script.type = &quot;text/javascript&quot;;</span><br><span class=\"line\">    script.src = src;</span><br><span class=\"line\">    document.head.appendChild(script);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//用法</span><br><span class=\"line\">getJsonp(&apos;http://test.com/users&apos;, function(data)&#123;</span><br><span class=\"line\">    console.log(&apos;得到jsonp数据：&apos;,JSON.stringify(data));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上面只是一个简单的封装思路，如果需要做的更好可以允许指定callback，还可以在回调函数之后销毁script脚本，这些留给大家去发挥（思考一下，如果每个开发者都统一用callback，你可以跨域访问，别人也可以跨域访问，安全上面起不到更好的保障，与后端协议好一个自定义的参数，将能稍微避免一些，当然，所谓安全大都只是防范君子）。<br>浏览器支持：几乎所有</p>\n<h4 id=\"4-跨域解决方案之CORS\"><a href=\"#4-跨域解决方案之CORS\" class=\"headerlink\" title=\"4.跨域解决方案之CORS\"></a>4.跨域解决方案之CORS</h4><p>CORS，也即 Cross-Origin Resource Sharing（跨域资源共享），它需要现代浏览器的支持，是一种更安全的官方解决方案。<br>CORS使得以下常见场景得到支持：<br>使用 XMLHttpRequest 或 Fetch 发起跨站 HTTP 请求。<br>web 字体(css 中通过 @font-face 使用跨站字体资源)<br>使用 drawImage 绘制 Images/video 画面到 canvas<br>CORS有以下三种常见的访问控制场景：<br>简单请求<br>只使用 GET 、HEAD 或者 POST 发起请求，如果使用 POST ，那么其数据类型( Content-Type )只能是 application/x-www-form-urlencoded、 multipart/form-data 或 text/plain中的一种。<br>不使用自定义请求头<br>这种请求跟正常的ajax请求几乎没有差异，只是浏览器会在请求头中自动添加一个origin属性，内容为本页面地址。例如我们使用 XMLhttprequest 正常发起一个 GET 请求，源站点为my.com，目标站点为test.com，浏览器实际发出的请求头如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /resources/public-data/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">Origin: http://my.com</span><br></pre></td></tr></table></figure></p>\n<p>此时浏览器维持判断，当服务端返回的响应头中，存在跨域访问控制属性并匹配本次请求，则跨域成功（正常接收数据）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br></pre></td></tr></table></figure></p>\n<p>这种跨域请求非常简单，只需要后端在返回的响应头中添加Access-Control-Allow-Origin属性并将被允许的站点填入即可（多个站点逗号隔开，允许所有站点则设为*）<br>预请求<br>预请求不同于简单请求，它首先会发送一个 OPTIONS 请求到目标站点，以查明该请求是否安全可接受，以防止请求对目标站点的数据造成破坏。当请求具备以下条件，就会被当成预请求处理：<br>请求以 GET, HEAD 或者 POST 以外的方法发起请求。或者，使用 POST，但请求数据为  application/x-www-form-urlencoded , multipart/form-data 或者 text/plain 以外的数据类型。比如说，用 POST 发送数据类型为 application/xml 数据的请求。<br>使用自定义请求头<br>例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var request = new XMLHttpRequest();</span><br><span class=\"line\">var url = &apos;http://test.com/users&apos;;</span><br><span class=\"line\">var body = &apos;test&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">function coAccess()&#123;</span><br><span class=\"line\">  if(request)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    request.open(&apos;POST&apos;, url, true);</span><br><span class=\"line\">    request.setRequestHeader(&apos;X-CUSTOMER-HEADER&apos;, &apos;沐心chen&apos;);</span><br><span class=\"line\">    request.setRequestHeader(&apos;Content-Type&apos;, &apos;application/xml&apos;);</span><br><span class=\"line\">    request.onreadystatechange = function(state)&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    request.send(body);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  ...</span><br></pre></td></tr></table></figure></p>\n<p>上面发送了一个 POST 请求，请求数据类型为application/xml，并携带一个自定义请求头X-CUSTOMER_HEADER，符合预请求的规范。<br>此时浏览器与后端的交互过程如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//浏览器预先发起OPTIONS请求</span><br><span class=\"line\">，自动添加Origin、Access-Control-Request-Method和Access-Control-Request-Headers</span><br><span class=\"line\">OPTIONS /resources/post-here/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">Origin: http://my.com</span><br><span class=\"line\">Access-Control-Request-Method: POST</span><br><span class=\"line\">Access-Control-Request-Headers: X-CUSTOMER-HEADER</span><br><span class=\"line\">//后端接收OPTIONS请求，返回响应头中包含Access-Control-Allow-策略和Access-Control-Max-Age时限</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br><span class=\"line\">Access-Control-Allow-Methods: POST, GET, DELETE, UPATE, PATCH, OPTIONS</span><br><span class=\"line\">Access-Control-Allow-Headers: X-CUSTOMER-HEADER</span><br><span class=\"line\">Access-Control-Max-Age: 1728000</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br><span class=\"line\"></span><br><span class=\"line\">//浏览器判断本次请求被允许，真实发起原先的POST请求</span><br><span class=\"line\">POST /resources/post-here/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">X-CUSTOMER-HEADER: 沐心chen</span><br><span class=\"line\">Origin: http://my.com</span><br><span class=\"line\"></span><br><span class=\"line\">//服务器返回数据</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br></pre></td></tr></table></figure></p>\n<p>OPTIONS是一个理论上不应该对服务端数据造成影响的请求方式。响应头Access-Control-Allow-Methods表明服务器可以接受POST, GET, DELETE, UPATE, PATCH, OPTIONS的请求方法,而Access-Control-Max-Age则告诉浏览器本次预请求的有效期为20天，在这段时间内针对该站点的请求都不需要再预先发起OPTIONS请求。<br>带凭证的请求<br>跨站请求一般而言，是不会携带cookie和其它凭证的，但 CORS 允许这样做。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var request = new XMLHttpRequest();</span><br><span class=\"line\">var url = &apos;http://test.com/users&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">function coAccess()&#123;</span><br><span class=\"line\">    if(request)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      request.open(&apos;GET&apos;, url, true);</span><br><span class=\"line\">      request.withCredentials = true;</span><br><span class=\"line\">      request.onreadystatechange = function(state)&#123;</span><br><span class=\"line\">          ...</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      request.send(body);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure></p>\n<p>我们在request中将withCredentials设置为true，使得该请求携带cookie和凭证，此时服务端必须在响应头中声明Access-Control-Allow-Credentials为true，否则响应体将被浏览器忽略。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//浏览器发起请求，携带cookie信息</span><br><span class=\"line\">GET /resources/access-control-with-credentials/ HTTP/1.1</span><br><span class=\"line\">...</span><br><span class=\"line\">Origin: http://my.com</span><br><span class=\"line\">Cookie: rememberMe=沐心chen</span><br><span class=\"line\"></span><br><span class=\"line\">//服务端返回，设置了更多cookie</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">...</span><br><span class=\"line\">Access-Control-Allow-Origin: http://my.com</span><br><span class=\"line\">Access-Control-Allow-Credentials: true</span><br><span class=\"line\">Vary: Accept-Encoding, Origin</span><br><span class=\"line\">Set-Cookie:rememberYou=沐心chen</span><br></pre></td></tr></table></figure></p>\n<p>值得一提的是，带凭证的请求要求服务端具体设置Access-Control-Allow-Origin的值而不允许使用<em>，否则响应也会被浏览器忽略。如果一切正常，跨域访问将同时允许cookie的读和写。<br>上面一直没提的一个响应头属性是 Vary，顺带提及一下，如果我们的跨域方案不需要cookie参与，那么Access-Control-Allow-Origin 是允许设置为 </em> 的，但如果我们具体的去设置它的允许域名，则需要后端在响应头再设置一个 Vary 参数，值为 Accept-Encoding, Origin ，它告诉浏览器，响应是根据请求头里的Origin的值来返回不同的内容的。<br>尽管 CORS 需要现代浏览器的支持，但几乎不用关心这个问题，因为大部分目前仍存活的浏览器都有作出实现，对于前端来说可能最多是设置允许携带凭证，其它的工作就解放到后端了。<br>浏览器支持：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Destop\tMobile</span><br><span class=\"line\">IE8+\tAndroid2.1</span><br><span class=\"line\">Chrome4+\tSafari3.2</span><br><span class=\"line\">firefox3.5+\t其它</span><br><span class=\"line\">Opera12+\t..</span><br><span class=\"line\">Safari4+\t..</span><br></pre></td></tr></table></figure></p>\n<p>（本文完）</p>"},{"title":"GIT基本命令合集","date":"2017-01-14T03:54:49.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"\ngit操作是我们每个coder应该熟练掌握的一项生存技能，\nAnywhere && Anyone...\n好了，闲话少扯，直接开始撸.\n<!-- more -->\n> 每天进步一点点\n\n![](http://www.leyar.me/images/bg2015120901.png)\n##### 新建代码库\n```javascript\n# 在当前目录新建一个Git代码库\n$ git init\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n```\n##### 配置\nGit的设置文件为.gitconfig，它可以在用户住目录下（全局配置），也可以在项目目录下（项目配置）\n```javascript\n# 显示当前的Git配置\n$ git config --list\n# 编辑Git配置文件\n$ git config -e [--global]\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n```\n##### 增加/删除文件\n```javascript\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n# 添加当前目录的所有文件到暂存区\n$ git add .\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n```\n##### 代码提交\n```javascript\n# 提交暂存区到仓库区\n$ git commit -m [message]\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n# 提交时显示所有diff信息\n$ git commit -v\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n```\n##### 分支\n```javascript\n# 列出所有本地分支\n$ git branch\n# 列出所有远程分支\n$ git branch -r\n# 列出所有本地分支和远程分支\n$ git branch -a\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n# 切换到上一个分支\n$ git checkout -\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n# 合并指定分支到当前分支\n$ git merge [branch]\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n# 删除分支\n$ git branch -d [branch-name]\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n```\n##### 标签\n```javascript\n# 列出所有tag\n$ git tag\n# 新建一个tag在当前commit\n$ git tag [tag]\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n# 删除本地tag\n$ git tag -d [tag]\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n# 查看tag信息\n$ git show [tag]\n# 提交指定tag\n$ git push [remote] [tag]\n# 提交所有tag\n$ git push [remote] --tags\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n```\n##### 查看信息\n```javascript\n# 显示有变更的文件\n$ git status\n# 显示当前分支的版本历史\n$ git log\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n# 显示暂存区和工作区的差异\n$ git diff\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n# 显示当前分支的最近几次提交\n$ git reflog\n```\n##### 远程同步\n```javascript\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n# 显示所有远程仓库\n$ git remote -v\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n```\n##### 撤销\n```javascript\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n```\n###### 未完待补充... ^_^\n---\n","source":"_posts/2017-01-14-GIT基本命令合集.md","raw":"---\ntitle: GIT基本命令合集\ndate: 2017-01-14 11:54:49\ntags: Git\ncategories: Tools\nupdated:\n---\n\ngit操作是我们每个coder应该熟练掌握的一项生存技能，\nAnywhere && Anyone...\n好了，闲话少扯，直接开始撸.\n<!-- more -->\n> 每天进步一点点\n\n![](http://www.leyar.me/images/bg2015120901.png)\n##### 新建代码库\n```javascript\n# 在当前目录新建一个Git代码库\n$ git init\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n```\n##### 配置\nGit的设置文件为.gitconfig，它可以在用户住目录下（全局配置），也可以在项目目录下（项目配置）\n```javascript\n# 显示当前的Git配置\n$ git config --list\n# 编辑Git配置文件\n$ git config -e [--global]\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n```\n##### 增加/删除文件\n```javascript\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n# 添加当前目录的所有文件到暂存区\n$ git add .\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n```\n##### 代码提交\n```javascript\n# 提交暂存区到仓库区\n$ git commit -m [message]\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n# 提交时显示所有diff信息\n$ git commit -v\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n```\n##### 分支\n```javascript\n# 列出所有本地分支\n$ git branch\n# 列出所有远程分支\n$ git branch -r\n# 列出所有本地分支和远程分支\n$ git branch -a\n# 新建一个分支，但依然停留在当前分支\n$ git branch [branch-name]\n# 新建一个分支，并切换到该分支\n$ git checkout -b [branch]\n# 新建一个分支，指向指定commit\n$ git branch [branch] [commit]\n# 新建一个分支，与指定的远程分支建立追踪关系\n$ git branch --track [branch] [remote-branch]\n# 切换到指定分支，并更新工作区\n$ git checkout [branch-name]\n# 切换到上一个分支\n$ git checkout -\n# 建立追踪关系，在现有分支与指定的远程分支之间\n$ git branch --set-upstream [branch] [remote-branch]\n# 合并指定分支到当前分支\n$ git merge [branch]\n# 选择一个commit，合并进当前分支\n$ git cherry-pick [commit]\n# 删除分支\n$ git branch -d [branch-name]\n# 删除远程分支\n$ git push origin --delete [branch-name]\n$ git branch -dr [remote/branch]\n```\n##### 标签\n```javascript\n# 列出所有tag\n$ git tag\n# 新建一个tag在当前commit\n$ git tag [tag]\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n# 删除本地tag\n$ git tag -d [tag]\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n# 查看tag信息\n$ git show [tag]\n# 提交指定tag\n$ git push [remote] [tag]\n# 提交所有tag\n$ git push [remote] --tags\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n```\n##### 查看信息\n```javascript\n# 显示有变更的文件\n$ git status\n# 显示当前分支的版本历史\n$ git log\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n# 显示暂存区和工作区的差异\n$ git diff\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n# 显示当前分支的最近几次提交\n$ git reflog\n```\n##### 远程同步\n```javascript\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n# 显示所有远程仓库\n$ git remote -v\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n```\n##### 撤销\n```javascript\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n```\n###### 未完待补充... ^_^\n---\n","slug":"GIT基本命令合集","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobkl20002bbfy9rbnang3","content":"<p>git操作是我们每个coder应该熟练掌握的一项生存技能，<br>Anywhere &amp;&amp; Anyone…<br>好了，闲话少扯，直接开始撸.<br><a id=\"more\"></a></p>\n<blockquote>\n<p>每天进步一点点</p>\n</blockquote>\n<p><img src=\"http://www.leyar.me/images/bg2015120901.png\" alt=\"\"></p>\n<h5 id=\"新建代码库\"><a href=\"#新建代码库\" class=\"headerlink\" title=\"新建代码库\"></a>新建代码库</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在当前目录新建一个Git代码库</span><br><span class=\"line\">$ git init</span><br><span class=\"line\"># 新建一个目录，将其初始化为Git代码库</span><br><span class=\"line\">$ git init [project-name]</span><br><span class=\"line\"># 下载一个项目和它的整个代码历史</span><br><span class=\"line\">$ git clone [url]</span><br></pre></td></tr></table></figure>\n<h5 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h5><p>Git的设置文件为.gitconfig，它可以在用户住目录下（全局配置），也可以在项目目录下（项目配置）<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示当前的Git配置</span><br><span class=\"line\">$ git config --list</span><br><span class=\"line\"># 编辑Git配置文件</span><br><span class=\"line\">$ git config -e [--global]</span><br><span class=\"line\"># 设置提交代码时的用户信息</span><br><span class=\"line\">$ git config [--global] user.name <span class=\"string\">\"[name]\"</span></span><br><span class=\"line\">$ git config [--global] user.email <span class=\"string\">\"[email address]\"</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"增加-删除文件\"><a href=\"#增加-删除文件\" class=\"headerlink\" title=\"增加/删除文件\"></a>增加/删除文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加指定文件到暂存区</span><br><span class=\"line\">$ git add [file1] [file2] ...</span><br><span class=\"line\"># 添加指定目录到暂存区，包括子目录</span><br><span class=\"line\">$ git add [dir]</span><br><span class=\"line\"># 添加当前目录的所有文件到暂存区</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"># 添加每个变化前，都会要求确认</span><br><span class=\"line\"># 对于同一个文件的多处变化，可以实现分次提交</span><br><span class=\"line\">$ git add -p</span><br><span class=\"line\"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class=\"line\">$ git rm [file1] [file2] ...</span><br><span class=\"line\"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class=\"line\">$ git rm --cached [file]</span><br><span class=\"line\"># 改名文件，并且将这个改名放入暂存区</span><br><span class=\"line\">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>\n<h5 id=\"代码提交\"><a href=\"#代码提交\" class=\"headerlink\" title=\"代码提交\"></a>代码提交</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 提交暂存区到仓库区</span><br><span class=\"line\">$ git commit -m [message]</span><br><span class=\"line\"># 提交暂存区的指定文件到仓库区</span><br><span class=\"line\">$ git commit [file1] [file2] ... -m [message]</span><br><span class=\"line\"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class=\"line\">$ git commit -a</span><br><span class=\"line\"># 提交时显示所有diff信息</span><br><span class=\"line\">$ git commit -v</span><br><span class=\"line\"># 使用一次新的commit，替代上一次提交</span><br><span class=\"line\"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class=\"line\">$ git commit --amend -m [message]</span><br><span class=\"line\"># 重做上一次commit，并包括指定文件的新变化</span><br><span class=\"line\">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n<h5 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有本地分支</span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"># 列出所有远程分支</span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"># 列出所有本地分支和远程分支</span><br><span class=\"line\">$ git branch -a</span><br><span class=\"line\"># 新建一个分支，但依然停留在当前分支</span><br><span class=\"line\">$ git branch [branch-name]</span><br><span class=\"line\"># 新建一个分支，并切换到该分支</span><br><span class=\"line\">$ git checkout -b [branch]</span><br><span class=\"line\"># 新建一个分支，指向指定commit</span><br><span class=\"line\">$ git branch [branch] [commit]</span><br><span class=\"line\"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class=\"line\">$ git branch --track [branch] [remote-branch]</span><br><span class=\"line\"># 切换到指定分支，并更新工作区</span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\"># 切换到上一个分支</span><br><span class=\"line\">$ git checkout -</span><br><span class=\"line\"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class=\"line\">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class=\"line\"># 合并指定分支到当前分支</span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"># 选择一个commit，合并进当前分支</span><br><span class=\"line\">$ git cherry-pick [commit]</span><br><span class=\"line\"># 删除分支</span><br><span class=\"line\">$ git branch -d [branch-name]</span><br><span class=\"line\"># 删除远程分支</span><br><span class=\"line\">$ git push origin --<span class=\"keyword\">delete</span> [branch-name]</span><br><span class=\"line\">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>\n<h5 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有tag</span><br><span class=\"line\">$ git tag</span><br><span class=\"line\"># 新建一个tag在当前commit</span><br><span class=\"line\">$ git tag [tag]</span><br><span class=\"line\"># 新建一个tag在指定commit</span><br><span class=\"line\">$ git tag [tag] [commit]</span><br><span class=\"line\"># 删除本地tag</span><br><span class=\"line\">$ git tag -d [tag]</span><br><span class=\"line\"># 删除远程tag</span><br><span class=\"line\">$ git push origin :refs/tags/[tagName]</span><br><span class=\"line\"># 查看tag信息</span><br><span class=\"line\">$ git show [tag]</span><br><span class=\"line\"># 提交指定tag</span><br><span class=\"line\">$ git push [remote] [tag]</span><br><span class=\"line\"># 提交所有tag</span><br><span class=\"line\">$ git push [remote] --tags</span><br><span class=\"line\"># 新建一个分支，指向某个tag</span><br><span class=\"line\">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示有变更的文件</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"># 显示当前分支的版本历史</span><br><span class=\"line\">$ git log</span><br><span class=\"line\"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class=\"line\">$ git log --stat</span><br><span class=\"line\"># 搜索提交历史，根据关键词</span><br><span class=\"line\">$ git log -S [keyword]</span><br><span class=\"line\"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class=\"line\">$ git log [tag] HEAD --pretty=format:%s</span><br><span class=\"line\"># 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件</span><br><span class=\"line\">$ git log [tag] HEAD --grep feature</span><br><span class=\"line\"># 显示某个文件的版本历史，包括文件改名</span><br><span class=\"line\">$ git log --follow [file]</span><br><span class=\"line\">$ git whatchanged [file]</span><br><span class=\"line\"># 显示指定文件相关的每一次diff</span><br><span class=\"line\">$ git log -p [file]</span><br><span class=\"line\"># 显示过去5次提交</span><br><span class=\"line\">$ git log <span class=\"number\">-5</span> --pretty --oneline</span><br><span class=\"line\"># 显示所有提交过的用户，按提交次数排序</span><br><span class=\"line\">$ git shortlog -sn</span><br><span class=\"line\"># 显示指定文件是什么人在什么时间修改过</span><br><span class=\"line\">$ git blame [file]</span><br><span class=\"line\"># 显示暂存区和工作区的差异</span><br><span class=\"line\">$ git diff</span><br><span class=\"line\"># 显示暂存区和上一个commit的差异</span><br><span class=\"line\">$ git diff --cached [file]</span><br><span class=\"line\"># 显示工作区与当前分支最新commit之间的差异</span><br><span class=\"line\">$ git diff HEAD</span><br><span class=\"line\"># 显示两次提交之间的差异</span><br><span class=\"line\">$ git diff [first-branch]...[second-branch]</span><br><span class=\"line\"># 显示今天你写了多少行代码</span><br><span class=\"line\">$ git diff --shortstat <span class=\"string\">\"@&#123;0 day ago&#125;\"</span></span><br><span class=\"line\"># 显示某次提交的元数据和内容变化</span><br><span class=\"line\">$ git show [commit]</span><br><span class=\"line\"># 显示某次提交发生变化的文件</span><br><span class=\"line\">$ git show --name-only [commit]</span><br><span class=\"line\"># 显示某次提交时，某个文件的内容</span><br><span class=\"line\">$ git show [commit]:[filename]</span><br><span class=\"line\"># 显示当前分支的最近几次提交</span><br><span class=\"line\">$ git reflog</span><br></pre></td></tr></table></figure>\n<h5 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载远程仓库的所有变动</span><br><span class=\"line\">$ git fetch [remote]</span><br><span class=\"line\"># 显示所有远程仓库</span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\"># 显示某个远程仓库的信息</span><br><span class=\"line\">$ git remote show [remote]</span><br><span class=\"line\"># 增加一个新的远程仓库，并命名</span><br><span class=\"line\">$ git remote add [shortname] [url]</span><br><span class=\"line\"># 取回远程仓库的变化，并与本地分支合并</span><br><span class=\"line\">$ git pull [remote] [branch]</span><br><span class=\"line\"># 上传本地指定分支到远程仓库</span><br><span class=\"line\">$ git push [remote] [branch]</span><br><span class=\"line\"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class=\"line\">$ git push [remote] --force</span><br><span class=\"line\"># 推送所有分支到远程仓库</span><br><span class=\"line\">$ git push [remote] --all</span><br></pre></td></tr></table></figure>\n<h5 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 恢复暂存区的指定文件到工作区</span><br><span class=\"line\">$ git checkout [file]</span><br><span class=\"line\"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class=\"line\">$ git checkout [commit] [file]</span><br><span class=\"line\"># 恢复暂存区的所有文件到工作区</span><br><span class=\"line\">$ git checkout .</span><br><span class=\"line\"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class=\"line\">$ git reset [file]</span><br><span class=\"line\"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class=\"line\">$ git reset --hard</span><br><span class=\"line\"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class=\"line\">$ git reset [commit]</span><br><span class=\"line\"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class=\"line\">$ git reset --hard [commit]</span><br><span class=\"line\"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class=\"line\">$ git reset --keep [commit]</span><br><span class=\"line\"># 新建一个commit，用来撤销指定commit</span><br><span class=\"line\"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class=\"line\">$ git revert [commit]</span><br><span class=\"line\"># 暂时将未提交的变化移除，稍后再移入</span><br><span class=\"line\">$ git stash</span><br><span class=\"line\">$ git stash pop</span><br></pre></td></tr></table></figure>\n<h6 id=\"未完待补充…\"><a href=\"#未完待补充…\" class=\"headerlink\" title=\"未完待补充… ^_^\"></a>未完待补充… ^_^</h6><hr>\n","site":{"data":{}},"excerpt":"<p>git操作是我们每个coder应该熟练掌握的一项生存技能，<br>Anywhere &amp;&amp; Anyone…<br>好了，闲话少扯，直接开始撸.<br>","more":"</p>\n<blockquote>\n<p>每天进步一点点</p>\n</blockquote>\n<p><img src=\"http://www.leyar.me/images/bg2015120901.png\" alt=\"\"></p>\n<h5 id=\"新建代码库\"><a href=\"#新建代码库\" class=\"headerlink\" title=\"新建代码库\"></a>新建代码库</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在当前目录新建一个Git代码库</span><br><span class=\"line\">$ git init</span><br><span class=\"line\"># 新建一个目录，将其初始化为Git代码库</span><br><span class=\"line\">$ git init [project-name]</span><br><span class=\"line\"># 下载一个项目和它的整个代码历史</span><br><span class=\"line\">$ git clone [url]</span><br></pre></td></tr></table></figure>\n<h5 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h5><p>Git的设置文件为.gitconfig，它可以在用户住目录下（全局配置），也可以在项目目录下（项目配置）<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示当前的Git配置</span><br><span class=\"line\">$ git config --list</span><br><span class=\"line\"># 编辑Git配置文件</span><br><span class=\"line\">$ git config -e [--global]</span><br><span class=\"line\"># 设置提交代码时的用户信息</span><br><span class=\"line\">$ git config [--global] user.name <span class=\"string\">\"[name]\"</span></span><br><span class=\"line\">$ git config [--global] user.email <span class=\"string\">\"[email address]\"</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"增加-删除文件\"><a href=\"#增加-删除文件\" class=\"headerlink\" title=\"增加/删除文件\"></a>增加/删除文件</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 添加指定文件到暂存区</span><br><span class=\"line\">$ git add [file1] [file2] ...</span><br><span class=\"line\"># 添加指定目录到暂存区，包括子目录</span><br><span class=\"line\">$ git add [dir]</span><br><span class=\"line\"># 添加当前目录的所有文件到暂存区</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"># 添加每个变化前，都会要求确认</span><br><span class=\"line\"># 对于同一个文件的多处变化，可以实现分次提交</span><br><span class=\"line\">$ git add -p</span><br><span class=\"line\"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class=\"line\">$ git rm [file1] [file2] ...</span><br><span class=\"line\"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class=\"line\">$ git rm --cached [file]</span><br><span class=\"line\"># 改名文件，并且将这个改名放入暂存区</span><br><span class=\"line\">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>\n<h5 id=\"代码提交\"><a href=\"#代码提交\" class=\"headerlink\" title=\"代码提交\"></a>代码提交</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 提交暂存区到仓库区</span><br><span class=\"line\">$ git commit -m [message]</span><br><span class=\"line\"># 提交暂存区的指定文件到仓库区</span><br><span class=\"line\">$ git commit [file1] [file2] ... -m [message]</span><br><span class=\"line\"># 提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class=\"line\">$ git commit -a</span><br><span class=\"line\"># 提交时显示所有diff信息</span><br><span class=\"line\">$ git commit -v</span><br><span class=\"line\"># 使用一次新的commit，替代上一次提交</span><br><span class=\"line\"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span><br><span class=\"line\">$ git commit --amend -m [message]</span><br><span class=\"line\"># 重做上一次commit，并包括指定文件的新变化</span><br><span class=\"line\">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n<h5 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有本地分支</span><br><span class=\"line\">$ git branch</span><br><span class=\"line\"># 列出所有远程分支</span><br><span class=\"line\">$ git branch -r</span><br><span class=\"line\"># 列出所有本地分支和远程分支</span><br><span class=\"line\">$ git branch -a</span><br><span class=\"line\"># 新建一个分支，但依然停留在当前分支</span><br><span class=\"line\">$ git branch [branch-name]</span><br><span class=\"line\"># 新建一个分支，并切换到该分支</span><br><span class=\"line\">$ git checkout -b [branch]</span><br><span class=\"line\"># 新建一个分支，指向指定commit</span><br><span class=\"line\">$ git branch [branch] [commit]</span><br><span class=\"line\"># 新建一个分支，与指定的远程分支建立追踪关系</span><br><span class=\"line\">$ git branch --track [branch] [remote-branch]</span><br><span class=\"line\"># 切换到指定分支，并更新工作区</span><br><span class=\"line\">$ git checkout [branch-name]</span><br><span class=\"line\"># 切换到上一个分支</span><br><span class=\"line\">$ git checkout -</span><br><span class=\"line\"># 建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class=\"line\">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class=\"line\"># 合并指定分支到当前分支</span><br><span class=\"line\">$ git merge [branch]</span><br><span class=\"line\"># 选择一个commit，合并进当前分支</span><br><span class=\"line\">$ git cherry-pick [commit]</span><br><span class=\"line\"># 删除分支</span><br><span class=\"line\">$ git branch -d [branch-name]</span><br><span class=\"line\"># 删除远程分支</span><br><span class=\"line\">$ git push origin --<span class=\"keyword\">delete</span> [branch-name]</span><br><span class=\"line\">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>\n<h5 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出所有tag</span><br><span class=\"line\">$ git tag</span><br><span class=\"line\"># 新建一个tag在当前commit</span><br><span class=\"line\">$ git tag [tag]</span><br><span class=\"line\"># 新建一个tag在指定commit</span><br><span class=\"line\">$ git tag [tag] [commit]</span><br><span class=\"line\"># 删除本地tag</span><br><span class=\"line\">$ git tag -d [tag]</span><br><span class=\"line\"># 删除远程tag</span><br><span class=\"line\">$ git push origin :refs/tags/[tagName]</span><br><span class=\"line\"># 查看tag信息</span><br><span class=\"line\">$ git show [tag]</span><br><span class=\"line\"># 提交指定tag</span><br><span class=\"line\">$ git push [remote] [tag]</span><br><span class=\"line\"># 提交所有tag</span><br><span class=\"line\">$ git push [remote] --tags</span><br><span class=\"line\"># 新建一个分支，指向某个tag</span><br><span class=\"line\">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>\n<h5 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 显示有变更的文件</span><br><span class=\"line\">$ git status</span><br><span class=\"line\"># 显示当前分支的版本历史</span><br><span class=\"line\">$ git log</span><br><span class=\"line\"># 显示commit历史，以及每次commit发生变更的文件</span><br><span class=\"line\">$ git log --stat</span><br><span class=\"line\"># 搜索提交历史，根据关键词</span><br><span class=\"line\">$ git log -S [keyword]</span><br><span class=\"line\"># 显示某个commit之后的所有变动，每个commit占据一行</span><br><span class=\"line\">$ git log [tag] HEAD --pretty=format:%s</span><br><span class=\"line\"># 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件</span><br><span class=\"line\">$ git log [tag] HEAD --grep feature</span><br><span class=\"line\"># 显示某个文件的版本历史，包括文件改名</span><br><span class=\"line\">$ git log --follow [file]</span><br><span class=\"line\">$ git whatchanged [file]</span><br><span class=\"line\"># 显示指定文件相关的每一次diff</span><br><span class=\"line\">$ git log -p [file]</span><br><span class=\"line\"># 显示过去5次提交</span><br><span class=\"line\">$ git log <span class=\"number\">-5</span> --pretty --oneline</span><br><span class=\"line\"># 显示所有提交过的用户，按提交次数排序</span><br><span class=\"line\">$ git shortlog -sn</span><br><span class=\"line\"># 显示指定文件是什么人在什么时间修改过</span><br><span class=\"line\">$ git blame [file]</span><br><span class=\"line\"># 显示暂存区和工作区的差异</span><br><span class=\"line\">$ git diff</span><br><span class=\"line\"># 显示暂存区和上一个commit的差异</span><br><span class=\"line\">$ git diff --cached [file]</span><br><span class=\"line\"># 显示工作区与当前分支最新commit之间的差异</span><br><span class=\"line\">$ git diff HEAD</span><br><span class=\"line\"># 显示两次提交之间的差异</span><br><span class=\"line\">$ git diff [first-branch]...[second-branch]</span><br><span class=\"line\"># 显示今天你写了多少行代码</span><br><span class=\"line\">$ git diff --shortstat <span class=\"string\">\"@&#123;0 day ago&#125;\"</span></span><br><span class=\"line\"># 显示某次提交的元数据和内容变化</span><br><span class=\"line\">$ git show [commit]</span><br><span class=\"line\"># 显示某次提交发生变化的文件</span><br><span class=\"line\">$ git show --name-only [commit]</span><br><span class=\"line\"># 显示某次提交时，某个文件的内容</span><br><span class=\"line\">$ git show [commit]:[filename]</span><br><span class=\"line\"># 显示当前分支的最近几次提交</span><br><span class=\"line\">$ git reflog</span><br></pre></td></tr></table></figure>\n<h5 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 下载远程仓库的所有变动</span><br><span class=\"line\">$ git fetch [remote]</span><br><span class=\"line\"># 显示所有远程仓库</span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\"># 显示某个远程仓库的信息</span><br><span class=\"line\">$ git remote show [remote]</span><br><span class=\"line\"># 增加一个新的远程仓库，并命名</span><br><span class=\"line\">$ git remote add [shortname] [url]</span><br><span class=\"line\"># 取回远程仓库的变化，并与本地分支合并</span><br><span class=\"line\">$ git pull [remote] [branch]</span><br><span class=\"line\"># 上传本地指定分支到远程仓库</span><br><span class=\"line\">$ git push [remote] [branch]</span><br><span class=\"line\"># 强行推送当前分支到远程仓库，即使有冲突</span><br><span class=\"line\">$ git push [remote] --force</span><br><span class=\"line\"># 推送所有分支到远程仓库</span><br><span class=\"line\">$ git push [remote] --all</span><br></pre></td></tr></table></figure>\n<h5 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 恢复暂存区的指定文件到工作区</span><br><span class=\"line\">$ git checkout [file]</span><br><span class=\"line\"># 恢复某个commit的指定文件到暂存区和工作区</span><br><span class=\"line\">$ git checkout [commit] [file]</span><br><span class=\"line\"># 恢复暂存区的所有文件到工作区</span><br><span class=\"line\">$ git checkout .</span><br><span class=\"line\"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span><br><span class=\"line\">$ git reset [file]</span><br><span class=\"line\"># 重置暂存区与工作区，与上一次commit保持一致</span><br><span class=\"line\">$ git reset --hard</span><br><span class=\"line\"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span><br><span class=\"line\">$ git reset [commit]</span><br><span class=\"line\"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span><br><span class=\"line\">$ git reset --hard [commit]</span><br><span class=\"line\"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span><br><span class=\"line\">$ git reset --keep [commit]</span><br><span class=\"line\"># 新建一个commit，用来撤销指定commit</span><br><span class=\"line\"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span><br><span class=\"line\">$ git revert [commit]</span><br><span class=\"line\"># 暂时将未提交的变化移除，稍后再移入</span><br><span class=\"line\">$ git stash</span><br><span class=\"line\">$ git stash pop</span><br></pre></td></tr></table></figure>\n<h6 id=\"未完待补充…\"><a href=\"#未完待补充…\" class=\"headerlink\" title=\"未完待补充… ^_^\"></a>未完待补充… ^_^</h6><hr>"},{"title":"哆啦A梦","date":"2017-01-20T02:01:30.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"使用CSS3属性来画出一个哆啦A梦;\n下面是代码的简单实现，以及用到的一些属性介绍。\n<!-- more -->\n##### 图片结构拆分\n我们大致的把这个胖子分成两部分，head和body，当然也把双脚也加上。\n```html\n<div class=\"fat_pet\">\n  <!-- head part -->\n  <header class=\"pet_head\">\n    <!-- eyes -->\n    <div class=\"left_eye\"></div>\n    <div class=\"right_eye\"></div>\n    <!-- mustache -->\n    <div class=\"left_mustache\"></div>\n    <div class=\"right_mustache\"></div>\n    <!-- mouth -->\n    <div class=\"mouth\"></div>\n  </header>\n  <!-- pet_collar -->\n  <div class=\"pet_collar\">\n    <div class=\"pet_bell\">\n      <div class=\"pet_bell_wig\"></div>\n    </div>\n  </div>\n  <!-- pet_body -->\n  <section class=\"pet_body\">\n    <!-- pet_belly -->\n    <div class=\"pet_belly\"></div>\n    <!-- pet_waist -->\n    <div class=\"pet_waist\"></div>\n    <!-- pet_arms -->\n    <div class=\"pet_arms\">\n      <div class=\"left_arm\"></div>\n      <div class=\"right_arm\"></div>\n    </div>\n  </section>\n  <!-- pet_footer -->\n  <div class=\"pet_footer\">\n    <div class=\"left_foot\"></div>\n    <div class=\"right_foot\"></div>\n  </div>\n</div>\n```\n我们先给整个身体一个站立的空间，命名为\"fat_pet\"。\n##### 脑袋\n大脑袋要给点特殊的配置，比如CSS3的 after,before...等这些伪元素.伪元素的语法是这样子的：\n```javascript\nselector:pseudo-element {property:value;}\n```\n常见的伪元素以及例子：\n* eg:1  first-line p 元素的第一行文本\n```javascript\np:first-line\n  {\n  color:#ff0000;\n  font-variant:small-caps;\n  }\n// \"first-line\" 伪元素只能用于块级元素。\n// 块级元素？DIV P ...\n// 行内元素？span img ...\n// 区别是\n// 应用于 \"first-line\" 伪元素属性：font color background line-height word-spacing(字间距) letter-spacing(字母间距)\n```\n* eg:2 :first-letter 向文本的首字母设置特殊样式\n```javascript\np:first-letter\n  {\n  color:#ff0000;\n  font-size:20px;\n  }\n// \"first-letter\" 伪元素只能用于块级元素。\n//属性可应用于 \"first-letter\" 伪元素：font color background margin padding border line-height\n```\n* eg:3  `:before` 伪元素可以在元素的内容前面插入新内容。\n在元素内容的最前面插入生成内容。默认地，这个伪元素是行内元素，不过可以使用属性 display 改变这一点。这个点在我们这个例子里会用到，稍微重点聊一下：\ncontent 属性与 :before 及 :after 伪元素配合使用，来插入生成内容(PS:本次应用的是content插入无内容的行内元素来进行线条的绘制)\n点击这里查看：[关于content的一篇文章](http://www.zhangxinxu.com/wordpress/2010/04/css-content%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8/)\n----\n说点相关的还有伪类，对应的语法：\n```javascript\nselector : pseudo-class {property: value}\n```\n应用常见是我们的a元素：\n```javascript\na:link {color: #FF0000}\t\t/* 未访问的链接 */\na:visited {color: #00FF00}\t/* 已访问的链接 */\na:hover {color: #FF00FF}\t/* 鼠标移动到链接上 */\na:active {color: #0000FF}\t/* 选定的链接 */\n```\n顺序一定要是l-v-h-a，否则可能不生效；记忆的方法两个单词：`l`-o-`v`-e，`ha`-t-e。\n伪类可以与 CSS 类配合使用：\n```javascript\na.red : visited {color: #FF0000}\n<a class=\"red\" href=\"css_syntax.asp\">CSS Syntax</a>\n//链接被访问过，那么它将显示为红色。\n```\n另外还有伪类比如:first-child ，简单举几个例子：\n* eg:1,选择器匹配作为任何元素的第一个子元素的 p 元素：\n\n  ```html\n    <html>\n    <head>\n    <style type=\"text/css\">\n    p:first-child {\n      color: red;\n      }\n    </style>\n    </head>\n\n    <body>\n    <p>some text</p>\n    <p>some text</p>\n    </body>\n    </html>\n    ```\n* eg:2 选择器匹配所有 p 元素中的第一个 i 元素：\n\n    ```html\n    <html>\n    <head>\n    <style type=\"text/css\">\n    p > i:first-child {\n      font-weight:bold;\n      }\n    </style>\n    </head>\n\n    <body>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    </body>\n    </html>\n    ```\n* eg：3选择器匹配所有作为元素的第一个子元素的 p 元素中的所有 i 元素：\n\n    ```html\n    <html>\n    <head>\n    <style type=\"text/css\">\n    p:first-child i {\n      color:blue;\n      }\n    </style>\n    </head>\n\n    <body>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    </body>\n    </html>\n    ```\n此外还有 :focus元素获得焦点时向元素添加特殊的样式等。\n下面是大脑袋的html部分：\n```html\n<!-- head part -->\n<header class=\"pet_head\">\n  <!-- eyes -->\n  <div class=\"left_eye\"></div>\n  <div class=\"right_eye\"></div>\n  <!-- mustache  -->\n  <div class=\"left_mustache\"></div>\n  <div class=\"right_mustache\"></div>\n  <!-- mouth -->\n  <div class=\"mouth\"></div>\n</header>\n```\n开始实现的css：\n1.脑袋跟眼睛和鼻子\n```css\n/* pet_head */\n.pet_head{\n  margin: 0 auto;\n  width: 300px;\n  height: 300px;\n  border-radius: 50%;\n  border: 2px solid #000;\n  position: relative;\n  background: linear-gradient(45deg,#095469,#095469,#0EAFD9,#0EAFD9,#0EAFD9,#0EB7E2,#0BBCE8, #82DEF7,#82DEF7)\n}\n/*\n这里大家看到了跟以往看到的一点点不同，background\n一般我们用这个属性添加背景图、背景色等，这里我们用到的是css3的一个线性渐变属性：\nCSS3 Gradient 分为 linear-gradient（线性渐变）和 radial-gradient（径向渐变）;\n[linear-gradient介绍](http://blog.csdn.net/she_rryn/article/details/50454153);\n注意在不同浏览器下的兼容性;\n*/\n.pet_head::after{\n  position: absolute;\n  bottom: 6px;\n  left: 25px;\n  width: 250px;\n  height: 200px;\n  border-radius: 50%;\n  border: 2px solid #000;\n  content: '';\n  background: #fff;\n}\n.pet_head .left_eye,.pet_head .right_eye{\n  width: 60px;\n  height: 78px;\n  position: absolute;\n  top: 40px;\n  z-index: 1;\n  background: #fff;\n  border: 2px solid #000;\n  border-radius: 46%;\n}\n.pet_head .left_eye{\n  left: 84px;\n}\n.pet_head .left_eye::before,\n.pet_head .right_eye::before{\n  content: '';\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  bottom: 18px;\n  background: #000;\n  border-radius: 50%;\n}\n.pet_head .left_eye::before{\n  right: 10px;\n}\n.pet_head .right_eye{\n  right: 90px;\n}\n.pet_head .right_eye::before{\n  left: 10px;\n}\n.pet_head .left_eye::after{\n  content: '';\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  top: 68px;\n  left: 46px;\n  background: red;\n  border: 2px solid #000;\n  border-radius: 50%;\n}\n```\n2.同时两边的胡子：\n```css\n/* mustache */\n.pet_head .left_mustache,.pet_head .right_mustache{\n  position: absolute;\n  bottom: 130px;\n  width: 60px;\n  height: 2px;\n  background: #000;\n  z-index: 1;\n}\n.pet_head .left_mustache{\n  left: 58px;\n}\n.pet_head .left_mustache::before,\n.pet_head .left_mustache::after,\n.pet_head .right_mustache::before,\n.pet_head .right_mustache::after{\n  content: '';\n  width: 60px;\n  height: 2px;\n  position: absolute;\n  left: 0px;\n  background: #000;\n  z-index: 1;\n}\n.pet_head .left_mustache::before{\n  bottom: 10px;\n  transform-origin: right;\n  transform: rotate(30deg);/*顺时针*/\n}\n/*\n这里有个transform属性\ntransform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转(rotate)、缩放(scale)、移动(translateX)或倾斜(skewY)。\n[transform](http://www.w3school.com.cn/cssref/pr_transform.asp);\n*/\n.pet_head .left_mustache::after{\n  bottom: -10px;\n  transform-origin: right;\n  transform: rotate(-30deg);\n}\n/*右侧胡须处理*/\n.pet_head .right_mustache{\n  right: 58px;\n}\n.pet_head .right_mustache::before{\n  top: 10px;\n  transform-origin: left;\n  transform: rotate(30deg);\n}\n.pet_head .right_mustache::after{\n  top: -10px;\n  transform-origin: left;\n  transform: rotate(-30deg);\n}\n```\n3.嘴巴跟笑脸\n```css\n/* mouth */\n.pet_head .mouth{\n  width: 2px;\n  height: 118px;\n  background: #000;\n  position: absolute;\n  bottom: 45px;\n  left: 146px;\n  z-index: 1;\n}\n.pet_head .mouth::after{\n  content: '';\n  width: 150px;\n  height: 80px;\n  position: absolute;\n  bottom: -2px;\n  left: -75px;\n  z-index: 1;\n  border-bottom: 2px solid #000;\n  border-radius: 50%;\n}\n```\n##### 铃铛\n```html\n<div class=\"pet_collar\">\n  <div class=\"pet_bell\">\n    <div class=\"pet_bell_wig\"></div>\n  </div>\n</div>\n```\n上面是实现红色的领带跟小铃铛的html代码。来看我们对应的css部分\n```css\n/* collar */\n.pet_collar{\n      position: relative;\n      width: 280px;\n      height: 24px;\n      background: red;\n      margin: -28px  auto 0px auto;\n      border: 2px solid #000;\n      border-radius: 10px;\n      z-index: 5;\n}\n.pet_bell{\n      position: absolute;\n      top: 15px;\n      left: 120px;\n      width: 40px;\n      height: 40px;\n      background: #CBC10A;\n      border-radius: 50%;\n      border: 2px solid #000;\n}\n.pet_bell::before,.pet_bell::after{\n      content: '';\n      background: #000;\n      width: 38px;\n      height: 2px;\n      position: absolute;\n      top: 10px;\n}\n.pet_bell::after{\n      width: 40px;\n      top: 14px;\n}\n.pet_bell_wig{\n      position: absolute;\n      bottom: 8px;\n      left: 12px;\n      background: #000;\n      width: 16px;\n      height: 12px;\n      border-radius: 50%;\n}\n.pet_bell_wig::after{\n      content: '';\n      background: #000;\n      width: 4px;\n      height: 10px;\n      position: absolute;\n      bottom: -8px;\n      left: 6px;\n}\n```\n##### 身体部分\n肚子部分我们分成了这么几个部分：蓝胖子的大肚子，一双肥胖的双手，两条大粗腿跟一双44尺码的脚。\n```html\n<!-- pet_body -->\n<section class=\"pet_body\">\n  <!-- pet_belly -->\n  <div class=\"pet_belly\"></div>\n  <!-- pet_waist -->\n  <div class=\"pet_waist\"></div>\n  <!-- pet_arms -->\n  <div class=\"pet_arms\">\n    <div class=\"left_arm\"></div>\n    <div class=\"right_arm\"></div>\n  </div>\n</section>\n```\n下面在进一步细分:\n\n###### 肚子\n\n```html\n<!-- pet_belly -->\n<div class=\"pet_belly\"></div>\n```\n```css\n/*先给个父元素相对定位，方便我们把蓝胖子的肚子、双手、膝盖放到合适的位置*/\n/* pet_body */\n.pet_body{\n  position: relative;\n  width: 240px;\n  height: 200px;\n  margin: 0 auto;\n}\n/*肚子*/\n.pet_belly{\n      width: 240px;\n      height: 180px;\n      background: #fff;\n      margin: 0 auto;\n      border: 2px solid #000;\n      border-radius: 48%;\n      position: absolute;\n      top: -10px;\n      z-index: 4;\n}\n/*使用before after*/\n.pet_belly::before{\n      content: '';\n      width: 130px;\n      height: 130px;\n      border: 2px solid #000;\n      border-radius: 50%;\n      position: absolute;\n      top: 10px;\n      left: 55px;\n      border-top-color: transparent;\n      border-right-color: transparent;\n      transform: rotate(-45deg);\n}\n.pet_belly::after{\n      content: '';\n      width: 134px;\n      height: 2px;\n      background: #000;\n      position: absolute;\n      top: 76px;\n      left: 55px;\n}\n```\n\n###### 左右手\n```html\n<!-- pet_arms -->\n<div class=\"pet_arms\">\n  <div class=\"left_arm\"></div>\n  <div class=\"right_arm\"></div>\n</div>\n```\n```css\n/* pet_arms */\n/*同样的两只手同时画  给出大体位置*/\n.pet_arms{\n      position: absolute;\n      top: 0;\n      left: -20px;\n      background: linear-gradient(85deg,#0C90B3,#0C90B3,#0EAFD9,#0DBAE5,#0DBAE5);\n      width: 280px;\n      height: 60px;\n}\n.left_arm,.right_arm{\n      width: 100px;\n      height: 50px;\n      background: #0C90B3;\n      position: absolute;\n      border: 2px solid #000;\n      z-index: 1;\n}\n/*拆分*/\n.left_arm{\n      left: -60px;\n      top: 20px;\n      border-right: none;\n      transform: rotate(-45deg);\n}\n.right_arm{\n      right: -60px;\n      top: 20px;\n      background: #0DBAE5;\n      border-left: none;\n      transform: rotate(45deg);\n}\n.right_arm::before{\n      left: 84px;\n      bottom: -14px;\n}\n/*两个手掌*/\n.left_arm::before,.right_arm::before{\n      content: '';\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      border: 2px solid #000;\n      background: #fff;\n      position: absolute;\n}\n.left_arm::before{\n      right: 84px;\n      bottom: -14px;\n}\n\n```\n\n###### 膝盖\n```html\n<!-- pet_waist -->\n<div class=\"pet_waist\"></div>\n```\n```css\n/* pet_waist */\n.pet_waist{\n      position: absolute;\n      top: 45px;\n      height: 180px;\n      width: 276px;\n      margin-left: -20px;\n      background: linear-gradient(45deg,#0C90B3,#0C90B3,#0C90B3,#0EAFD9,#0EB7E2,#0BBCE8);\n      border-left: 2px solid #000;\n      border-right: 2px solid #000;\n      border-bottom: 2px solid #000;\n      z-index: 3;\n}\n```\n\n###### 双脚\n```html\n<!-- pet_footer -->\n<div class=\"pet_footer\">\n  <div class=\"left_foot\"></div>\n  <div class=\"right_foot\"></div>\n</div>\n```\n```css\n/* pet_footer */\n.pet_footer{\n      position: relative;\n      top: 22px;\n      width: 300px;\n      margin: 0 auto;\n      z-index: 5;\n}\n.left_foot,.right_foot{\n      width: 146px;\n      height: 40px;\n      background: #fff;\n      border: 2px solid #000;\n      border-radius: 40px;\n      position: absolute;\n}\n.right_foot{\n      left: 146px;\n      margin-left: 10px;\n}\n```\n最后，少点东西：\n```css\n/*使用伪元素after或者before好让蓝胖子的腿没那么粗*/\n.pet_waist::after{\n      content: '';\n      width: 30px;\n      height: 30px;\n      background: #fff;\n      border: 2px solid #000;\n      border-radius: 50%;\n      border-top: none;\n      border-right: none;\n      transform: rotate(135deg);\n      position: absolute;\n      bottom: -15px;\n      left: 50%;\n      margin-left: -15px;\n}\n```\n##### Tips\n这次涉及到的此时CSS3的知识点有：\n>  before,after --> 纯css3小demo演示 ⬇️\n>  content:\"\";\n>  background:linear-gradient();\n>  transform:rotate();\n\n[更多css3小demo](https://github.com/eyeA/Demo/tree/gh-pages/css/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8D%95%E4%B8%AA%E5%B1%95%E7%A4%BA)\n\n（本文完）\n\n","source":"_posts/2017-01-17-哆啦A梦.md","raw":"---\ntitle: 哆啦A梦\ndate: 2017-01-20 10:01:30\ntags: CSS\ncategories: CSS\nupdated:\n---\n使用CSS3属性来画出一个哆啦A梦;\n下面是代码的简单实现，以及用到的一些属性介绍。\n<!-- more -->\n##### 图片结构拆分\n我们大致的把这个胖子分成两部分，head和body，当然也把双脚也加上。\n```html\n<div class=\"fat_pet\">\n  <!-- head part -->\n  <header class=\"pet_head\">\n    <!-- eyes -->\n    <div class=\"left_eye\"></div>\n    <div class=\"right_eye\"></div>\n    <!-- mustache -->\n    <div class=\"left_mustache\"></div>\n    <div class=\"right_mustache\"></div>\n    <!-- mouth -->\n    <div class=\"mouth\"></div>\n  </header>\n  <!-- pet_collar -->\n  <div class=\"pet_collar\">\n    <div class=\"pet_bell\">\n      <div class=\"pet_bell_wig\"></div>\n    </div>\n  </div>\n  <!-- pet_body -->\n  <section class=\"pet_body\">\n    <!-- pet_belly -->\n    <div class=\"pet_belly\"></div>\n    <!-- pet_waist -->\n    <div class=\"pet_waist\"></div>\n    <!-- pet_arms -->\n    <div class=\"pet_arms\">\n      <div class=\"left_arm\"></div>\n      <div class=\"right_arm\"></div>\n    </div>\n  </section>\n  <!-- pet_footer -->\n  <div class=\"pet_footer\">\n    <div class=\"left_foot\"></div>\n    <div class=\"right_foot\"></div>\n  </div>\n</div>\n```\n我们先给整个身体一个站立的空间，命名为\"fat_pet\"。\n##### 脑袋\n大脑袋要给点特殊的配置，比如CSS3的 after,before...等这些伪元素.伪元素的语法是这样子的：\n```javascript\nselector:pseudo-element {property:value;}\n```\n常见的伪元素以及例子：\n* eg:1  first-line p 元素的第一行文本\n```javascript\np:first-line\n  {\n  color:#ff0000;\n  font-variant:small-caps;\n  }\n// \"first-line\" 伪元素只能用于块级元素。\n// 块级元素？DIV P ...\n// 行内元素？span img ...\n// 区别是\n// 应用于 \"first-line\" 伪元素属性：font color background line-height word-spacing(字间距) letter-spacing(字母间距)\n```\n* eg:2 :first-letter 向文本的首字母设置特殊样式\n```javascript\np:first-letter\n  {\n  color:#ff0000;\n  font-size:20px;\n  }\n// \"first-letter\" 伪元素只能用于块级元素。\n//属性可应用于 \"first-letter\" 伪元素：font color background margin padding border line-height\n```\n* eg:3  `:before` 伪元素可以在元素的内容前面插入新内容。\n在元素内容的最前面插入生成内容。默认地，这个伪元素是行内元素，不过可以使用属性 display 改变这一点。这个点在我们这个例子里会用到，稍微重点聊一下：\ncontent 属性与 :before 及 :after 伪元素配合使用，来插入生成内容(PS:本次应用的是content插入无内容的行内元素来进行线条的绘制)\n点击这里查看：[关于content的一篇文章](http://www.zhangxinxu.com/wordpress/2010/04/css-content%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8/)\n----\n说点相关的还有伪类，对应的语法：\n```javascript\nselector : pseudo-class {property: value}\n```\n应用常见是我们的a元素：\n```javascript\na:link {color: #FF0000}\t\t/* 未访问的链接 */\na:visited {color: #00FF00}\t/* 已访问的链接 */\na:hover {color: #FF00FF}\t/* 鼠标移动到链接上 */\na:active {color: #0000FF}\t/* 选定的链接 */\n```\n顺序一定要是l-v-h-a，否则可能不生效；记忆的方法两个单词：`l`-o-`v`-e，`ha`-t-e。\n伪类可以与 CSS 类配合使用：\n```javascript\na.red : visited {color: #FF0000}\n<a class=\"red\" href=\"css_syntax.asp\">CSS Syntax</a>\n//链接被访问过，那么它将显示为红色。\n```\n另外还有伪类比如:first-child ，简单举几个例子：\n* eg:1,选择器匹配作为任何元素的第一个子元素的 p 元素：\n\n  ```html\n    <html>\n    <head>\n    <style type=\"text/css\">\n    p:first-child {\n      color: red;\n      }\n    </style>\n    </head>\n\n    <body>\n    <p>some text</p>\n    <p>some text</p>\n    </body>\n    </html>\n    ```\n* eg:2 选择器匹配所有 p 元素中的第一个 i 元素：\n\n    ```html\n    <html>\n    <head>\n    <style type=\"text/css\">\n    p > i:first-child {\n      font-weight:bold;\n      }\n    </style>\n    </head>\n\n    <body>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    </body>\n    </html>\n    ```\n* eg：3选择器匹配所有作为元素的第一个子元素的 p 元素中的所有 i 元素：\n\n    ```html\n    <html>\n    <head>\n    <style type=\"text/css\">\n    p:first-child i {\n      color:blue;\n      }\n    </style>\n    </head>\n\n    <body>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    <p>some <i>text</i>. some <i>text</i>.</p>\n    </body>\n    </html>\n    ```\n此外还有 :focus元素获得焦点时向元素添加特殊的样式等。\n下面是大脑袋的html部分：\n```html\n<!-- head part -->\n<header class=\"pet_head\">\n  <!-- eyes -->\n  <div class=\"left_eye\"></div>\n  <div class=\"right_eye\"></div>\n  <!-- mustache  -->\n  <div class=\"left_mustache\"></div>\n  <div class=\"right_mustache\"></div>\n  <!-- mouth -->\n  <div class=\"mouth\"></div>\n</header>\n```\n开始实现的css：\n1.脑袋跟眼睛和鼻子\n```css\n/* pet_head */\n.pet_head{\n  margin: 0 auto;\n  width: 300px;\n  height: 300px;\n  border-radius: 50%;\n  border: 2px solid #000;\n  position: relative;\n  background: linear-gradient(45deg,#095469,#095469,#0EAFD9,#0EAFD9,#0EAFD9,#0EB7E2,#0BBCE8, #82DEF7,#82DEF7)\n}\n/*\n这里大家看到了跟以往看到的一点点不同，background\n一般我们用这个属性添加背景图、背景色等，这里我们用到的是css3的一个线性渐变属性：\nCSS3 Gradient 分为 linear-gradient（线性渐变）和 radial-gradient（径向渐变）;\n[linear-gradient介绍](http://blog.csdn.net/she_rryn/article/details/50454153);\n注意在不同浏览器下的兼容性;\n*/\n.pet_head::after{\n  position: absolute;\n  bottom: 6px;\n  left: 25px;\n  width: 250px;\n  height: 200px;\n  border-radius: 50%;\n  border: 2px solid #000;\n  content: '';\n  background: #fff;\n}\n.pet_head .left_eye,.pet_head .right_eye{\n  width: 60px;\n  height: 78px;\n  position: absolute;\n  top: 40px;\n  z-index: 1;\n  background: #fff;\n  border: 2px solid #000;\n  border-radius: 46%;\n}\n.pet_head .left_eye{\n  left: 84px;\n}\n.pet_head .left_eye::before,\n.pet_head .right_eye::before{\n  content: '';\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  bottom: 18px;\n  background: #000;\n  border-radius: 50%;\n}\n.pet_head .left_eye::before{\n  right: 10px;\n}\n.pet_head .right_eye{\n  right: 90px;\n}\n.pet_head .right_eye::before{\n  left: 10px;\n}\n.pet_head .left_eye::after{\n  content: '';\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  top: 68px;\n  left: 46px;\n  background: red;\n  border: 2px solid #000;\n  border-radius: 50%;\n}\n```\n2.同时两边的胡子：\n```css\n/* mustache */\n.pet_head .left_mustache,.pet_head .right_mustache{\n  position: absolute;\n  bottom: 130px;\n  width: 60px;\n  height: 2px;\n  background: #000;\n  z-index: 1;\n}\n.pet_head .left_mustache{\n  left: 58px;\n}\n.pet_head .left_mustache::before,\n.pet_head .left_mustache::after,\n.pet_head .right_mustache::before,\n.pet_head .right_mustache::after{\n  content: '';\n  width: 60px;\n  height: 2px;\n  position: absolute;\n  left: 0px;\n  background: #000;\n  z-index: 1;\n}\n.pet_head .left_mustache::before{\n  bottom: 10px;\n  transform-origin: right;\n  transform: rotate(30deg);/*顺时针*/\n}\n/*\n这里有个transform属性\ntransform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转(rotate)、缩放(scale)、移动(translateX)或倾斜(skewY)。\n[transform](http://www.w3school.com.cn/cssref/pr_transform.asp);\n*/\n.pet_head .left_mustache::after{\n  bottom: -10px;\n  transform-origin: right;\n  transform: rotate(-30deg);\n}\n/*右侧胡须处理*/\n.pet_head .right_mustache{\n  right: 58px;\n}\n.pet_head .right_mustache::before{\n  top: 10px;\n  transform-origin: left;\n  transform: rotate(30deg);\n}\n.pet_head .right_mustache::after{\n  top: -10px;\n  transform-origin: left;\n  transform: rotate(-30deg);\n}\n```\n3.嘴巴跟笑脸\n```css\n/* mouth */\n.pet_head .mouth{\n  width: 2px;\n  height: 118px;\n  background: #000;\n  position: absolute;\n  bottom: 45px;\n  left: 146px;\n  z-index: 1;\n}\n.pet_head .mouth::after{\n  content: '';\n  width: 150px;\n  height: 80px;\n  position: absolute;\n  bottom: -2px;\n  left: -75px;\n  z-index: 1;\n  border-bottom: 2px solid #000;\n  border-radius: 50%;\n}\n```\n##### 铃铛\n```html\n<div class=\"pet_collar\">\n  <div class=\"pet_bell\">\n    <div class=\"pet_bell_wig\"></div>\n  </div>\n</div>\n```\n上面是实现红色的领带跟小铃铛的html代码。来看我们对应的css部分\n```css\n/* collar */\n.pet_collar{\n      position: relative;\n      width: 280px;\n      height: 24px;\n      background: red;\n      margin: -28px  auto 0px auto;\n      border: 2px solid #000;\n      border-radius: 10px;\n      z-index: 5;\n}\n.pet_bell{\n      position: absolute;\n      top: 15px;\n      left: 120px;\n      width: 40px;\n      height: 40px;\n      background: #CBC10A;\n      border-radius: 50%;\n      border: 2px solid #000;\n}\n.pet_bell::before,.pet_bell::after{\n      content: '';\n      background: #000;\n      width: 38px;\n      height: 2px;\n      position: absolute;\n      top: 10px;\n}\n.pet_bell::after{\n      width: 40px;\n      top: 14px;\n}\n.pet_bell_wig{\n      position: absolute;\n      bottom: 8px;\n      left: 12px;\n      background: #000;\n      width: 16px;\n      height: 12px;\n      border-radius: 50%;\n}\n.pet_bell_wig::after{\n      content: '';\n      background: #000;\n      width: 4px;\n      height: 10px;\n      position: absolute;\n      bottom: -8px;\n      left: 6px;\n}\n```\n##### 身体部分\n肚子部分我们分成了这么几个部分：蓝胖子的大肚子，一双肥胖的双手，两条大粗腿跟一双44尺码的脚。\n```html\n<!-- pet_body -->\n<section class=\"pet_body\">\n  <!-- pet_belly -->\n  <div class=\"pet_belly\"></div>\n  <!-- pet_waist -->\n  <div class=\"pet_waist\"></div>\n  <!-- pet_arms -->\n  <div class=\"pet_arms\">\n    <div class=\"left_arm\"></div>\n    <div class=\"right_arm\"></div>\n  </div>\n</section>\n```\n下面在进一步细分:\n\n###### 肚子\n\n```html\n<!-- pet_belly -->\n<div class=\"pet_belly\"></div>\n```\n```css\n/*先给个父元素相对定位，方便我们把蓝胖子的肚子、双手、膝盖放到合适的位置*/\n/* pet_body */\n.pet_body{\n  position: relative;\n  width: 240px;\n  height: 200px;\n  margin: 0 auto;\n}\n/*肚子*/\n.pet_belly{\n      width: 240px;\n      height: 180px;\n      background: #fff;\n      margin: 0 auto;\n      border: 2px solid #000;\n      border-radius: 48%;\n      position: absolute;\n      top: -10px;\n      z-index: 4;\n}\n/*使用before after*/\n.pet_belly::before{\n      content: '';\n      width: 130px;\n      height: 130px;\n      border: 2px solid #000;\n      border-radius: 50%;\n      position: absolute;\n      top: 10px;\n      left: 55px;\n      border-top-color: transparent;\n      border-right-color: transparent;\n      transform: rotate(-45deg);\n}\n.pet_belly::after{\n      content: '';\n      width: 134px;\n      height: 2px;\n      background: #000;\n      position: absolute;\n      top: 76px;\n      left: 55px;\n}\n```\n\n###### 左右手\n```html\n<!-- pet_arms -->\n<div class=\"pet_arms\">\n  <div class=\"left_arm\"></div>\n  <div class=\"right_arm\"></div>\n</div>\n```\n```css\n/* pet_arms */\n/*同样的两只手同时画  给出大体位置*/\n.pet_arms{\n      position: absolute;\n      top: 0;\n      left: -20px;\n      background: linear-gradient(85deg,#0C90B3,#0C90B3,#0EAFD9,#0DBAE5,#0DBAE5);\n      width: 280px;\n      height: 60px;\n}\n.left_arm,.right_arm{\n      width: 100px;\n      height: 50px;\n      background: #0C90B3;\n      position: absolute;\n      border: 2px solid #000;\n      z-index: 1;\n}\n/*拆分*/\n.left_arm{\n      left: -60px;\n      top: 20px;\n      border-right: none;\n      transform: rotate(-45deg);\n}\n.right_arm{\n      right: -60px;\n      top: 20px;\n      background: #0DBAE5;\n      border-left: none;\n      transform: rotate(45deg);\n}\n.right_arm::before{\n      left: 84px;\n      bottom: -14px;\n}\n/*两个手掌*/\n.left_arm::before,.right_arm::before{\n      content: '';\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      border: 2px solid #000;\n      background: #fff;\n      position: absolute;\n}\n.left_arm::before{\n      right: 84px;\n      bottom: -14px;\n}\n\n```\n\n###### 膝盖\n```html\n<!-- pet_waist -->\n<div class=\"pet_waist\"></div>\n```\n```css\n/* pet_waist */\n.pet_waist{\n      position: absolute;\n      top: 45px;\n      height: 180px;\n      width: 276px;\n      margin-left: -20px;\n      background: linear-gradient(45deg,#0C90B3,#0C90B3,#0C90B3,#0EAFD9,#0EB7E2,#0BBCE8);\n      border-left: 2px solid #000;\n      border-right: 2px solid #000;\n      border-bottom: 2px solid #000;\n      z-index: 3;\n}\n```\n\n###### 双脚\n```html\n<!-- pet_footer -->\n<div class=\"pet_footer\">\n  <div class=\"left_foot\"></div>\n  <div class=\"right_foot\"></div>\n</div>\n```\n```css\n/* pet_footer */\n.pet_footer{\n      position: relative;\n      top: 22px;\n      width: 300px;\n      margin: 0 auto;\n      z-index: 5;\n}\n.left_foot,.right_foot{\n      width: 146px;\n      height: 40px;\n      background: #fff;\n      border: 2px solid #000;\n      border-radius: 40px;\n      position: absolute;\n}\n.right_foot{\n      left: 146px;\n      margin-left: 10px;\n}\n```\n最后，少点东西：\n```css\n/*使用伪元素after或者before好让蓝胖子的腿没那么粗*/\n.pet_waist::after{\n      content: '';\n      width: 30px;\n      height: 30px;\n      background: #fff;\n      border: 2px solid #000;\n      border-radius: 50%;\n      border-top: none;\n      border-right: none;\n      transform: rotate(135deg);\n      position: absolute;\n      bottom: -15px;\n      left: 50%;\n      margin-left: -15px;\n}\n```\n##### Tips\n这次涉及到的此时CSS3的知识点有：\n>  before,after --> 纯css3小demo演示 ⬇️\n>  content:\"\";\n>  background:linear-gradient();\n>  transform:rotate();\n\n[更多css3小demo](https://github.com/eyeA/Demo/tree/gh-pages/css/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8D%95%E4%B8%AA%E5%B1%95%E7%A4%BA)\n\n（本文完）\n\n","slug":"哆啦A梦","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklc0006bbfyqfow9uuf","content":"<p>使用CSS3属性来画出一个哆啦A梦;<br>下面是代码的简单实现，以及用到的一些属性介绍。<br><a id=\"more\"></a></p>\n<h5 id=\"图片结构拆分\"><a href=\"#图片结构拆分\" class=\"headerlink\" title=\"图片结构拆分\"></a>图片结构拆分</h5><p>我们大致的把这个胖子分成两部分，head和body，当然也把双脚也加上。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fat_pet\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- head part --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_head\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- eyes --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mustache --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mouth --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mouth\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_collar --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_collar\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell_wig\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_body --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_body\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- pet_belly --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_belly\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- pet_waist --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_waist\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- pet_arms --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_arms\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_footer --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_footer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>我们先给整个身体一个站立的空间，命名为”fat_pet”。</p>\n<h5 id=\"脑袋\"><a href=\"#脑袋\" class=\"headerlink\" title=\"脑袋\"></a>脑袋</h5><p>大脑袋要给点特殊的配置，比如CSS3的 after,before…等这些伪元素.伪元素的语法是这样子的：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector:pseudo-element &#123;<span class=\"attr\">property</span>:value;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>常见的伪元素以及例子：</p>\n<ul>\n<li><p>eg:1  first-line p 元素的第一行文本</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p:first-line</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  color:#ff0000;</span><br><span class=\"line\">  font-variant:small-caps;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// \"first-line\" 伪元素只能用于块级元素。</span></span><br><span class=\"line\"><span class=\"comment\">// 块级元素？DIV P ...</span></span><br><span class=\"line\"><span class=\"comment\">// 行内元素？span img ...</span></span><br><span class=\"line\"><span class=\"comment\">// 区别是</span></span><br><span class=\"line\"><span class=\"comment\">// 应用于 \"first-line\" 伪元素属性：font color background line-height word-spacing(字间距) letter-spacing(字母间距)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg:2 :first-letter 向文本的首字母设置特殊样式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p:first-letter</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  color:#ff0000;</span><br><span class=\"line\">  font-size:<span class=\"number\">20</span>px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// \"first-letter\" 伪元素只能用于块级元素。</span></span><br><span class=\"line\"><span class=\"comment\">//属性可应用于 \"first-letter\" 伪元素：font color background margin padding border line-height</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg:3  <code>:before</code> 伪元素可以在元素的内容前面插入新内容。<br>在元素内容的最前面插入生成内容。默认地，这个伪元素是行内元素，不过可以使用属性 display 改变这一点。这个点在我们这个例子里会用到，稍微重点聊一下：<br>content 属性与 :before 及 :after 伪元素配合使用，来插入生成内容(PS:本次应用的是content插入无内容的行内元素来进行线条的绘制)<br>点击这里查看：<a href=\"http://www.zhangxinxu.com/wordpress/2010/04/css-content%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8/\" target=\"_blank\" rel=\"noopener\">关于content的一篇文章</a></p>\n</li>\n</ul>\n<hr>\n<p>说点相关的还有伪类，对应的语法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector : pseudo-<span class=\"class\"><span class=\"keyword\">class</span> </span>&#123;property: value&#125;</span><br></pre></td></tr></table></figure></p>\n<p>应用常见是我们的a元素：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:link &#123;color: #FF0000&#125;\t\t/* 未访问的链接 */</span><br><span class=\"line\">a:visited &#123;color: #00FF00&#125;\t/* 已访问的链接 */</span><br><span class=\"line\">a:hover &#123;color: #FF00FF&#125;\t/* 鼠标移动到链接上 */</span><br><span class=\"line\">a:active &#123;color: #0000FF&#125;\t/* 选定的链接 */</span><br></pre></td></tr></table></figure></p>\n<p>顺序一定要是l-v-h-a，否则可能不生效；记忆的方法两个单词：<code>l</code>-o-<code>v</code>-e，<code>ha</code>-t-e。<br>伪类可以与 CSS 类配合使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a.red : visited &#123;color: #FF0000&#125;</span><br><span class=\"line\">&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"red\"</span> href=<span class=\"string\">\"css_syntax.asp\"</span>&gt;CSS Syntax&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/链接被访问过，那么它将显示为红色。</span></span><br></pre></td></tr></table></figure></p>\n<p>另外还有伪类比如:first-child ，简单举几个例子：</p>\n<ul>\n<li><p>eg:1,选择器匹配作为任何元素的第一个子元素的 p 元素：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">p:first-child &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  color: red;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg:2 选择器匹配所有 p 元素中的第一个 i 元素：</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">p &gt; i:first-child &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  font-weight:bold;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg：3选择器匹配所有作为元素的第一个子元素的 p 元素中的所有 i 元素：</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">p:first-child i &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  color:blue;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此外还有 :focus元素获得焦点时向元素添加特殊的样式等。<br>下面是大脑袋的html部分：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- head part --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_head\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- eyes --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- mustache  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- mouth --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mouth\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>开始实现的css：<br>1.脑袋跟眼睛和鼻子<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_head */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(45deg,#095469,#095469,#0EAFD9,#0EAFD9,#0EAFD9,#0EB7E2,#0BBCE8, #82DEF7,#82DEF7)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这里大家看到了跟以往看到的一点点不同，background</span></span><br><span class=\"line\"><span class=\"comment\">一般我们用这个属性添加背景图、背景色等，这里我们用到的是css3的一个线性渐变属性：</span></span><br><span class=\"line\"><span class=\"comment\">CSS3 Gradient 分为 linear-gradient（线性渐变）和 radial-gradient（径向渐变）;</span></span><br><span class=\"line\"><span class=\"comment\">[linear-gradient介绍](http://blog.csdn.net/she_rryn/article/details/50454153);</span></span><br><span class=\"line\"><span class=\"comment\">注意在不同浏览器下的兼容性;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span>,<span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">78px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">46%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">84px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span><span class=\"selector-pseudo\">::before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">90px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">68px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">46px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.同时两边的胡子：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* mustache */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span>,<span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">58px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::after</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);<span class=\"comment\">/*顺时针*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这里有个transform属性</span></span><br><span class=\"line\"><span class=\"comment\">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转(rotate)、缩放(scale)、移动(translateX)或倾斜(skewY)。</span></span><br><span class=\"line\"><span class=\"comment\">[transform](http://www.w3school.com.cn/cssref/pr_transform.asp);</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*右侧胡须处理*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">58px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-30deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.嘴巴跟笑脸<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* mouth */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.mouth</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">118px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">146px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.mouth</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">75px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"铃铛\"><a href=\"#铃铛\" class=\"headerlink\" title=\"铃铛\"></a>铃铛</h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_collar\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell_wig\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面是实现红色的领带跟小铃铛的html代码。来看我们对应的css部分<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* collar */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_collar</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">280px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: -<span class=\"number\">28px</span>  auto <span class=\"number\">0px</span> auto;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#CBC10A</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell</span><span class=\"selector-pseudo\">::before</span>,<span class=\"selector-class\">.pet_bell</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">38px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell_wig</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell_wig</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">8px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"身体部分\"><a href=\"#身体部分\" class=\"headerlink\" title=\"身体部分\"></a>身体部分</h5><p>肚子部分我们分成了这么几个部分：蓝胖子的大肚子，一双肥胖的双手，两条大粗腿跟一双44尺码的脚。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_body --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_body\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_belly --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_belly\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_waist --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_waist\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_arms --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_arms\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>下面在进一步细分:</p>\n<h6 id=\"肚子\"><a href=\"#肚子\" class=\"headerlink\" title=\"肚子\"></a>肚子</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_belly --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_belly\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*先给个父元素相对定位，方便我们把蓝胖子的肚子、双手、膝盖放到合适的位置*/</span></span><br><span class=\"line\"><span class=\"comment\">/* pet_body */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_body</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">240px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*肚子*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_belly</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">240px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">180px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">48%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*使用before after*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_belly</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">55px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-top-color</span>: transparent;</span><br><span class=\"line\">      <span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_belly</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">134px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">76px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">55px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"左右手\"><a href=\"#左右手\" class=\"headerlink\" title=\"左右手\"></a>左右手</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_arms --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_arms\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_arms */</span></span><br><span class=\"line\"><span class=\"comment\">/*同样的两只手同时画  给出大体位置*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_arms</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(85deg,#0C90B3,#0C90B3,#0EAFD9,#0DBAE5,#0DBAE5);</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">280px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span>,<span class=\"selector-class\">.right_arm</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#0C90B3</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*拆分*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">60px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right_arm</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: -<span class=\"number\">60px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#0DBAE5</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-left</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right_arm</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">84px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*两个手掌*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span><span class=\"selector-pseudo\">::before</span>,<span class=\"selector-class\">.right_arm</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">84px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"膝盖\"><a href=\"#膝盖\" class=\"headerlink\" title=\"膝盖\"></a>膝盖</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_waist --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_waist\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_waist */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_waist</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">180px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">276px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(45deg,#0C90B3,#0C90B3,#0C90B3,#0EAFD9,#0EB7E2,#0BBCE8);</span><br><span class=\"line\">      <span class=\"attribute\">border-left</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"双脚\"><a href=\"#双脚\" class=\"headerlink\" title=\"双脚\"></a>双脚</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_footer --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_footer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_footer */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_footer</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.left_foot</span>,<span class=\"selector-class\">.right_foot</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">146px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right_foot</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">146px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后，少点东西：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*使用伪元素after或者before好让蓝胖子的腿没那么粗*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_waist</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-top</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(135deg);</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h5><p>这次涉及到的此时CSS3的知识点有：</p>\n<blockquote>\n<p> before,after –&gt; 纯css3小demo演示 ⬇️<br> content:””;<br> background:linear-gradient();<br> transform:rotate();</p>\n</blockquote>\n<p><a href=\"https://github.com/eyeA/Demo/tree/gh-pages/css/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8D%95%E4%B8%AA%E5%B1%95%E7%A4%BA\" target=\"_blank\" rel=\"noopener\">更多css3小demo</a></p>\n<p>（本文完）</p>\n","site":{"data":{}},"excerpt":"<p>使用CSS3属性来画出一个哆啦A梦;<br>下面是代码的简单实现，以及用到的一些属性介绍。<br>","more":"</p>\n<h5 id=\"图片结构拆分\"><a href=\"#图片结构拆分\" class=\"headerlink\" title=\"图片结构拆分\"></a>图片结构拆分</h5><p>我们大致的把这个胖子分成两部分，head和body，当然也把双脚也加上。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fat_pet\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- head part --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_head\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- eyes --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mustache --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mouth --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mouth\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_collar --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_collar\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell_wig\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_body --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_body\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- pet_belly --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_belly\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- pet_waist --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_waist\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- pet_arms --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_arms\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_footer --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_footer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>我们先给整个身体一个站立的空间，命名为”fat_pet”。</p>\n<h5 id=\"脑袋\"><a href=\"#脑袋\" class=\"headerlink\" title=\"脑袋\"></a>脑袋</h5><p>大脑袋要给点特殊的配置，比如CSS3的 after,before…等这些伪元素.伪元素的语法是这样子的：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector:pseudo-element &#123;<span class=\"attr\">property</span>:value;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>常见的伪元素以及例子：</p>\n<ul>\n<li><p>eg:1  first-line p 元素的第一行文本</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p:first-line</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  color:#ff0000;</span><br><span class=\"line\">  font-variant:small-caps;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// \"first-line\" 伪元素只能用于块级元素。</span></span><br><span class=\"line\"><span class=\"comment\">// 块级元素？DIV P ...</span></span><br><span class=\"line\"><span class=\"comment\">// 行内元素？span img ...</span></span><br><span class=\"line\"><span class=\"comment\">// 区别是</span></span><br><span class=\"line\"><span class=\"comment\">// 应用于 \"first-line\" 伪元素属性：font color background line-height word-spacing(字间距) letter-spacing(字母间距)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg:2 :first-letter 向文本的首字母设置特殊样式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p:first-letter</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  color:#ff0000;</span><br><span class=\"line\">  font-size:<span class=\"number\">20</span>px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// \"first-letter\" 伪元素只能用于块级元素。</span></span><br><span class=\"line\"><span class=\"comment\">//属性可应用于 \"first-letter\" 伪元素：font color background margin padding border line-height</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg:3  <code>:before</code> 伪元素可以在元素的内容前面插入新内容。<br>在元素内容的最前面插入生成内容。默认地，这个伪元素是行内元素，不过可以使用属性 display 改变这一点。这个点在我们这个例子里会用到，稍微重点聊一下：<br>content 属性与 :before 及 :after 伪元素配合使用，来插入生成内容(PS:本次应用的是content插入无内容的行内元素来进行线条的绘制)<br>点击这里查看：<a href=\"http://www.zhangxinxu.com/wordpress/2010/04/css-content%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF%E4%BB%A5%E5%8F%8A%E5%BA%94%E7%94%A8/\" target=\"_blank\" rel=\"noopener\">关于content的一篇文章</a></p>\n</li>\n</ul>\n<hr>\n<p>说点相关的还有伪类，对应的语法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selector : pseudo-<span class=\"class\"><span class=\"keyword\">class</span> </span>&#123;property: value&#125;</span><br></pre></td></tr></table></figure></p>\n<p>应用常见是我们的a元素：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:link &#123;color: #FF0000&#125;\t\t/* 未访问的链接 */</span><br><span class=\"line\">a:visited &#123;color: #00FF00&#125;\t/* 已访问的链接 */</span><br><span class=\"line\">a:hover &#123;color: #FF00FF&#125;\t/* 鼠标移动到链接上 */</span><br><span class=\"line\">a:active &#123;color: #0000FF&#125;\t/* 选定的链接 */</span><br></pre></td></tr></table></figure></p>\n<p>顺序一定要是l-v-h-a，否则可能不生效；记忆的方法两个单词：<code>l</code>-o-<code>v</code>-e，<code>ha</code>-t-e。<br>伪类可以与 CSS 类配合使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a.red : visited &#123;color: #FF0000&#125;</span><br><span class=\"line\">&lt;a <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"red\"</span> href=<span class=\"string\">\"css_syntax.asp\"</span>&gt;CSS Syntax&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/链接被访问过，那么它将显示为红色。</span></span><br></pre></td></tr></table></figure></p>\n<p>另外还有伪类比如:first-child ，简单举几个例子：</p>\n<ul>\n<li><p>eg:1,选择器匹配作为任何元素的第一个子元素的 p 元素：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">p:first-child &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  color: red;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg:2 选择器匹配所有 p 元素中的第一个 i 元素：</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">p &gt; i:first-child &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  font-weight:bold;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>eg：3选择器匹配所有作为元素的第一个子元素的 p 元素中的所有 i 元素：</p>\n  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">p:first-child i &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">  color:blue;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>. some <span class=\"tag\">&lt;<span class=\"name\">i</span>&gt;</span>text<span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>此外还有 :focus元素获得焦点时向元素添加特殊的样式等。<br>下面是大脑袋的html部分：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- head part --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_head\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- eyes --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- mustache  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_mustache\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- mouth --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"mouth\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>开始实现的css：<br>1.脑袋跟眼睛和鼻子<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_head */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(45deg,#095469,#095469,#0EAFD9,#0EAFD9,#0EAFD9,#0EB7E2,#0BBCE8, #82DEF7,#82DEF7)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这里大家看到了跟以往看到的一点点不同，background</span></span><br><span class=\"line\"><span class=\"comment\">一般我们用这个属性添加背景图、背景色等，这里我们用到的是css3的一个线性渐变属性：</span></span><br><span class=\"line\"><span class=\"comment\">CSS3 Gradient 分为 linear-gradient（线性渐变）和 radial-gradient（径向渐变）;</span></span><br><span class=\"line\"><span class=\"comment\">[linear-gradient介绍](http://blog.csdn.net/she_rryn/article/details/50454153);</span></span><br><span class=\"line\"><span class=\"comment\">注意在不同浏览器下的兼容性;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span>,<span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">78px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">46%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">84px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span><span class=\"selector-pseudo\">::before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">18px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">90px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_eye</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_eye</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">25px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">68px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">46px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>2.同时两边的胡子：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* mustache */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span>,<span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">58px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::after</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::before</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);<span class=\"comment\">/*顺时针*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这里有个transform属性</span></span><br><span class=\"line\"><span class=\"comment\">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转(rotate)、缩放(scale)、移动(translateX)或倾斜(skewY)。</span></span><br><span class=\"line\"><span class=\"comment\">[transform](http://www.w3school.com.cn/cssref/pr_transform.asp);</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.left_mustache</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*右侧胡须处理*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">58px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(30deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.right_mustache</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">transform-origin</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-30deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>3.嘴巴跟笑脸<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* mouth */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.mouth</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">118px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">146px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_head</span> <span class=\"selector-class\">.mouth</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: -<span class=\"number\">2px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: -<span class=\"number\">75px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"铃铛\"><a href=\"#铃铛\" class=\"headerlink\" title=\"铃铛\"></a>铃铛</h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_collar\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_bell_wig\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面是实现红色的领带跟小铃铛的html代码。来看我们对应的css部分<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* collar */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_collar</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">280px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">24px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: -<span class=\"number\">28px</span>  auto <span class=\"number\">0px</span> auto;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">120px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#CBC10A</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell</span><span class=\"selector-pseudo\">::before</span>,<span class=\"selector-class\">.pet_bell</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">38px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell_wig</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: <span class=\"number\">8px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_bell_wig</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">4px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">8px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">6px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"身体部分\"><a href=\"#身体部分\" class=\"headerlink\" title=\"身体部分\"></a>身体部分</h5><p>肚子部分我们分成了这么几个部分：蓝胖子的大肚子，一双肥胖的双手，两条大粗腿跟一双44尺码的脚。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_body --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_body\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_belly --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_belly\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_waist --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_waist\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- pet_arms --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_arms\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>下面在进一步细分:</p>\n<h6 id=\"肚子\"><a href=\"#肚子\" class=\"headerlink\" title=\"肚子\"></a>肚子</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_belly --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_belly\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*先给个父元素相对定位，方便我们把蓝胖子的肚子、双手、膝盖放到合适的位置*/</span></span><br><span class=\"line\"><span class=\"comment\">/* pet_body */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_body</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">240px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*肚子*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_belly</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">240px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">180px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">48%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: -<span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*使用before after*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_belly</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">130px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">55px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-top-color</span>: transparent;</span><br><span class=\"line\">      <span class=\"attribute\">border-right-color</span>: transparent;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.pet_belly</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">134px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">76px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">55px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"左右手\"><a href=\"#左右手\" class=\"headerlink\" title=\"左右手\"></a>左右手</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_arms --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_arms\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_arm\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_arms */</span></span><br><span class=\"line\"><span class=\"comment\">/*同样的两只手同时画  给出大体位置*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_arms</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(85deg,#0C90B3,#0C90B3,#0EAFD9,#0DBAE5,#0DBAE5);</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">280px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span>,<span class=\"selector-class\">.right_arm</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">50px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#0C90B3</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*拆分*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">60px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(-45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right_arm</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: -<span class=\"number\">60px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#0DBAE5</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-left</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(45deg);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right_arm</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">84px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*两个手掌*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span><span class=\"selector-pseudo\">::before</span>,<span class=\"selector-class\">.right_arm</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">80px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.left_arm</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">84px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"膝盖\"><a href=\"#膝盖\" class=\"headerlink\" title=\"膝盖\"></a>膝盖</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_waist --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_waist\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_waist */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_waist</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">45px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">180px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">276px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: -<span class=\"number\">20px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(45deg,#0C90B3,#0C90B3,#0C90B3,#0EAFD9,#0EB7E2,#0BBCE8);</span><br><span class=\"line\">      <span class=\"attribute\">border-left</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-bottom</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h6 id=\"双脚\"><a href=\"#双脚\" class=\"headerlink\" title=\"双脚\"></a>双脚</h6><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- pet_footer --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pet_footer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"left_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"right_foot\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* pet_footer */</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_footer</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">22px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.left_foot</span>,<span class=\"selector-class\">.right_foot</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">146px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">40px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.right_foot</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">146px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后，少点东西：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*使用伪元素after或者before好让蓝胖子的腿没那么粗*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.pet_waist</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#000</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-radius</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">border-top</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">border-right</span>: none;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotate</span>(135deg);</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: -<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h5><p>这次涉及到的此时CSS3的知识点有：</p>\n<blockquote>\n<p> before,after –&gt; 纯css3小demo演示 ⬇️<br> content:””;<br> background:linear-gradient();<br> transform:rotate();</p>\n</blockquote>\n<p><a href=\"https://github.com/eyeA/Demo/tree/gh-pages/css/%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8D%95%E4%B8%AA%E5%B1%95%E7%A4%BA\" target=\"_blank\" rel=\"noopener\">更多css3小demo</a></p>\n<p>（本文完）</p>"},{"title":"知识付费随笔（一）","date":"2017-02-28T07:20:05.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"> 最近经常在耳朵边环绕的词语就是：知识付费，内容创业。\n\n<!-- more -->\n\n很小的时候，我们就接触诸如“知识就是财富”、“知识就是生产力”这样的那样的知识，告诉我们只要掌握了科学文化知识，就能过上幸福美满的小康生活。\n是的，或许有很多人跟我一样，发现我们从小学到大学，所学到的所谓知识，从步入社会之后，发现很严重的“脱节”！我们在小埋怨之后，还不得不面对现实进行反思：我考取的工信部认证的设计师资格，我考过的英语6级，我学到的那些历史，挑灯夜战的CAD作图，黑眼圈来完成的毕业论文，心惊胆战的答辩。。。这些到底，到底跟现在我的工作有一分钱的关系吗？还不如那些早早进入社会拼搏的小伙伴们生活的滋润，还不如那些专注网络游戏的大神们挣的钱多，还不如。。。是的，还有一波“还不如”，写不完的不如，道不尽的苦水。心高气傲的我们刚开始总是会觉得自己高人一等，但是在打开窗户，呼吸到精彩的外面世界的空气之后，发现，如果继续一如既往，如果不寻求改变的机会，真的就废了。\n屋漏偏逢连夜雨，从去年开始到今年伊始，经济变得沉闷，市场变得很浑浊，商业还是那么浮躁，还好我相信，总有一些人需要良好的秩序跟环境，总是需要一些来自北极的冰块来镇静下这片燥热的土地。\n说到知识付费，我最先了解的是著名评论人keso发帖跟马总跟帖的截图，微信要加快推出付费订阅的功能，然后开始了解到，从2016到今天，行/分答、知乎live、喜马拉雅、吴晓波频道、钛媒体、36氪等先后推出各自不同内容的付费产品，再到最近本人也跟风的加入的付费圈子，有了一些实质性的体会。\n\n诚如所见，付费迎来了春天，很多的内容收割者获得了不菲的收入，让我看到了人们对知识、对内容的渴求欲望，也引起了我对知识付费的思考。\n付费形式能够走起来，有几点原因：\n  1.海量的信息时代，缺少的是高质量的内容。种类繁多的搜索方式，app入口，短信推送。。。接收信息的入口增多，时间的碎片化使得我们对这些铺天盖地而来的信息获取渠道产生了注意力分散，信息的冗余，不能简单高效的获取到真正我们需要的信息资源。我们都知道时间的宝贵性，如果你上半年有能力去买房，但是还在观望，四方打听，迟迟不肯下手，当忙完空余，蓦然回首，年底便是成倍的成本增加，去年某个城市就是如此。成本的增加源于我们对信息获取能力的匮乏，排除个人因素，单是各种无效分析评论和噱头性质的文章让很多人存在着一些侥幸心理，然而，我把这些归于无效信息的严重泛滥，我们在比较，分析时候，不仅来自个人过去经历，更多的是想要与时俱进，从各大网站，各个APP,订阅，杂志媒体等各方面去分析，比较，但处于这些对象的先天自私属性，处于经营，效益等方面的考虑，提供了很多重复，不同程度的信息给我们，最终的导致是无法去精准的的判断和验证某个想法的正确性，导致一些追悔莫及的失误。当然，这只是众多例子中一朵小浪花。\n  2.知识作为了新的商品入口，知识的提供者更是。人是生产内容的主题，当时间作为一个新的经济维度的时候，知识和时间的糅合，便让付费随后呼之欲出。\n  理想的方式是订阅者通过付费订阅能够获得自己需要的知识，技能指导，理论讲解，而知识内容的提供者能够从中获取物质上的收益，个人能力的总结和拓展，提问本身更加促进提供者在有限的时间里对自身能力水平的提高，同时又张大了人脉圈。优质回答有促进了内容提供者在订阅者圈子的口碑，获得潜在的宣传和推广，从而吸引更多的人加入圈子。当然，这是理想的生态模式。\n\n知识的商业化，其实是一直都存在着的。比如版权，专利。知识的的确确提高了生产力，促进了社会的发展。对知识本身的获取和利用，和我们对生产资料的使用观应该等同的。经济发展，我们讲究可持续的良性健康的发展道路。姑且拿豆腐来举例:它爸爸是黄豆，从进入泥土那一刻，便开始吸收雨露营养，发芽沐浴接触阳光和流动的空气，到授粉结果，勉强划为第一个阶段的话，这就是知识的吸收和成长的阶段，从肥沃土壤中和滋润的空气里获取到的营养，用来生根，发芽，生长，开花和结果，这是储备阶段；第二个阶段，便是 \"变现\"，嫩青绿的黄豆是烧烤摊上的一顿美味，晒干的豆粒可以作为种子，也可以做成各种各样的食物：黄豆酱，豆腐。我们再拿豆腐来说，磨制豆腐过程中，可以拿出一部分作为豆浆作为早餐，一部分作为嫩豆腐，时间久点的做成口感不同的老豆腐，剩下的豆腐渣和秸秆可以是猪牛羊的饲料，也可以化作春泥更护花。诺，你看到了，多么自然的体会。人和知识结合时间作为一个整体来对待，也是同样经历。成长阶段不断地从周围获取营养物质，成长自身，等到丰满羽翼的时候，积累到了一定的储备，那就应该拿出来创造价值。\n\n\n片面的说，在近期内，就足够让一拨人走上小康，因为这个时代，你如果想要赚点外快，其实并不难。前提是，你真有一技之长。\n\n知识付费，反映了一定程度的社会诉求：通过交换，买卖双方都能得到自己想要的东西。知识付费提高了知识的生产动力，在商业化的道路上将会有一段泥泞的道路要走，如果有一类人执意要走的话。现实永远是复杂的，理念永远是美好的。\n\n（本文完）\n","source":"_posts/2017-02-28-知识付费.md","raw":"---\ntitle: 知识付费随笔（一）\ndate: 2017-02-28 15:20:05\ntags: ['知识付费、变现','知识共享']\ncategories: 热点思考\nupdated:\n---\n> 最近经常在耳朵边环绕的词语就是：知识付费，内容创业。\n\n<!-- more -->\n\n很小的时候，我们就接触诸如“知识就是财富”、“知识就是生产力”这样的那样的知识，告诉我们只要掌握了科学文化知识，就能过上幸福美满的小康生活。\n是的，或许有很多人跟我一样，发现我们从小学到大学，所学到的所谓知识，从步入社会之后，发现很严重的“脱节”！我们在小埋怨之后，还不得不面对现实进行反思：我考取的工信部认证的设计师资格，我考过的英语6级，我学到的那些历史，挑灯夜战的CAD作图，黑眼圈来完成的毕业论文，心惊胆战的答辩。。。这些到底，到底跟现在我的工作有一分钱的关系吗？还不如那些早早进入社会拼搏的小伙伴们生活的滋润，还不如那些专注网络游戏的大神们挣的钱多，还不如。。。是的，还有一波“还不如”，写不完的不如，道不尽的苦水。心高气傲的我们刚开始总是会觉得自己高人一等，但是在打开窗户，呼吸到精彩的外面世界的空气之后，发现，如果继续一如既往，如果不寻求改变的机会，真的就废了。\n屋漏偏逢连夜雨，从去年开始到今年伊始，经济变得沉闷，市场变得很浑浊，商业还是那么浮躁，还好我相信，总有一些人需要良好的秩序跟环境，总是需要一些来自北极的冰块来镇静下这片燥热的土地。\n说到知识付费，我最先了解的是著名评论人keso发帖跟马总跟帖的截图，微信要加快推出付费订阅的功能，然后开始了解到，从2016到今天，行/分答、知乎live、喜马拉雅、吴晓波频道、钛媒体、36氪等先后推出各自不同内容的付费产品，再到最近本人也跟风的加入的付费圈子，有了一些实质性的体会。\n\n诚如所见，付费迎来了春天，很多的内容收割者获得了不菲的收入，让我看到了人们对知识、对内容的渴求欲望，也引起了我对知识付费的思考。\n付费形式能够走起来，有几点原因：\n  1.海量的信息时代，缺少的是高质量的内容。种类繁多的搜索方式，app入口，短信推送。。。接收信息的入口增多，时间的碎片化使得我们对这些铺天盖地而来的信息获取渠道产生了注意力分散，信息的冗余，不能简单高效的获取到真正我们需要的信息资源。我们都知道时间的宝贵性，如果你上半年有能力去买房，但是还在观望，四方打听，迟迟不肯下手，当忙完空余，蓦然回首，年底便是成倍的成本增加，去年某个城市就是如此。成本的增加源于我们对信息获取能力的匮乏，排除个人因素，单是各种无效分析评论和噱头性质的文章让很多人存在着一些侥幸心理，然而，我把这些归于无效信息的严重泛滥，我们在比较，分析时候，不仅来自个人过去经历，更多的是想要与时俱进，从各大网站，各个APP,订阅，杂志媒体等各方面去分析，比较，但处于这些对象的先天自私属性，处于经营，效益等方面的考虑，提供了很多重复，不同程度的信息给我们，最终的导致是无法去精准的的判断和验证某个想法的正确性，导致一些追悔莫及的失误。当然，这只是众多例子中一朵小浪花。\n  2.知识作为了新的商品入口，知识的提供者更是。人是生产内容的主题，当时间作为一个新的经济维度的时候，知识和时间的糅合，便让付费随后呼之欲出。\n  理想的方式是订阅者通过付费订阅能够获得自己需要的知识，技能指导，理论讲解，而知识内容的提供者能够从中获取物质上的收益，个人能力的总结和拓展，提问本身更加促进提供者在有限的时间里对自身能力水平的提高，同时又张大了人脉圈。优质回答有促进了内容提供者在订阅者圈子的口碑，获得潜在的宣传和推广，从而吸引更多的人加入圈子。当然，这是理想的生态模式。\n\n知识的商业化，其实是一直都存在着的。比如版权，专利。知识的的确确提高了生产力，促进了社会的发展。对知识本身的获取和利用，和我们对生产资料的使用观应该等同的。经济发展，我们讲究可持续的良性健康的发展道路。姑且拿豆腐来举例:它爸爸是黄豆，从进入泥土那一刻，便开始吸收雨露营养，发芽沐浴接触阳光和流动的空气，到授粉结果，勉强划为第一个阶段的话，这就是知识的吸收和成长的阶段，从肥沃土壤中和滋润的空气里获取到的营养，用来生根，发芽，生长，开花和结果，这是储备阶段；第二个阶段，便是 \"变现\"，嫩青绿的黄豆是烧烤摊上的一顿美味，晒干的豆粒可以作为种子，也可以做成各种各样的食物：黄豆酱，豆腐。我们再拿豆腐来说，磨制豆腐过程中，可以拿出一部分作为豆浆作为早餐，一部分作为嫩豆腐，时间久点的做成口感不同的老豆腐，剩下的豆腐渣和秸秆可以是猪牛羊的饲料，也可以化作春泥更护花。诺，你看到了，多么自然的体会。人和知识结合时间作为一个整体来对待，也是同样经历。成长阶段不断地从周围获取营养物质，成长自身，等到丰满羽翼的时候，积累到了一定的储备，那就应该拿出来创造价值。\n\n\n片面的说，在近期内，就足够让一拨人走上小康，因为这个时代，你如果想要赚点外快，其实并不难。前提是，你真有一技之长。\n\n知识付费，反映了一定程度的社会诉求：通过交换，买卖双方都能得到自己想要的东西。知识付费提高了知识的生产动力，在商业化的道路上将会有一段泥泞的道路要走，如果有一类人执意要走的话。现实永远是复杂的，理念永远是美好的。\n\n（本文完）\n","slug":"知识付费","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklh0008bbfyge0aqsca","content":"<blockquote>\n<p>最近经常在耳朵边环绕的词语就是：知识付费，内容创业。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>很小的时候，我们就接触诸如“知识就是财富”、“知识就是生产力”这样的那样的知识，告诉我们只要掌握了科学文化知识，就能过上幸福美满的小康生活。<br>是的，或许有很多人跟我一样，发现我们从小学到大学，所学到的所谓知识，从步入社会之后，发现很严重的“脱节”！我们在小埋怨之后，还不得不面对现实进行反思：我考取的工信部认证的设计师资格，我考过的英语6级，我学到的那些历史，挑灯夜战的CAD作图，黑眼圈来完成的毕业论文，心惊胆战的答辩。。。这些到底，到底跟现在我的工作有一分钱的关系吗？还不如那些早早进入社会拼搏的小伙伴们生活的滋润，还不如那些专注网络游戏的大神们挣的钱多，还不如。。。是的，还有一波“还不如”，写不完的不如，道不尽的苦水。心高气傲的我们刚开始总是会觉得自己高人一等，但是在打开窗户，呼吸到精彩的外面世界的空气之后，发现，如果继续一如既往，如果不寻求改变的机会，真的就废了。<br>屋漏偏逢连夜雨，从去年开始到今年伊始，经济变得沉闷，市场变得很浑浊，商业还是那么浮躁，还好我相信，总有一些人需要良好的秩序跟环境，总是需要一些来自北极的冰块来镇静下这片燥热的土地。<br>说到知识付费，我最先了解的是著名评论人keso发帖跟马总跟帖的截图，微信要加快推出付费订阅的功能，然后开始了解到，从2016到今天，行/分答、知乎live、喜马拉雅、吴晓波频道、钛媒体、36氪等先后推出各自不同内容的付费产品，再到最近本人也跟风的加入的付费圈子，有了一些实质性的体会。</p>\n<p>诚如所见，付费迎来了春天，很多的内容收割者获得了不菲的收入，让我看到了人们对知识、对内容的渴求欲望，也引起了我对知识付费的思考。<br>付费形式能够走起来，有几点原因：<br>  1.海量的信息时代，缺少的是高质量的内容。种类繁多的搜索方式，app入口，短信推送。。。接收信息的入口增多，时间的碎片化使得我们对这些铺天盖地而来的信息获取渠道产生了注意力分散，信息的冗余，不能简单高效的获取到真正我们需要的信息资源。我们都知道时间的宝贵性，如果你上半年有能力去买房，但是还在观望，四方打听，迟迟不肯下手，当忙完空余，蓦然回首，年底便是成倍的成本增加，去年某个城市就是如此。成本的增加源于我们对信息获取能力的匮乏，排除个人因素，单是各种无效分析评论和噱头性质的文章让很多人存在着一些侥幸心理，然而，我把这些归于无效信息的严重泛滥，我们在比较，分析时候，不仅来自个人过去经历，更多的是想要与时俱进，从各大网站，各个APP,订阅，杂志媒体等各方面去分析，比较，但处于这些对象的先天自私属性，处于经营，效益等方面的考虑，提供了很多重复，不同程度的信息给我们，最终的导致是无法去精准的的判断和验证某个想法的正确性，导致一些追悔莫及的失误。当然，这只是众多例子中一朵小浪花。<br>  2.知识作为了新的商品入口，知识的提供者更是。人是生产内容的主题，当时间作为一个新的经济维度的时候，知识和时间的糅合，便让付费随后呼之欲出。<br>  理想的方式是订阅者通过付费订阅能够获得自己需要的知识，技能指导，理论讲解，而知识内容的提供者能够从中获取物质上的收益，个人能力的总结和拓展，提问本身更加促进提供者在有限的时间里对自身能力水平的提高，同时又张大了人脉圈。优质回答有促进了内容提供者在订阅者圈子的口碑，获得潜在的宣传和推广，从而吸引更多的人加入圈子。当然，这是理想的生态模式。</p>\n<p>知识的商业化，其实是一直都存在着的。比如版权，专利。知识的的确确提高了生产力，促进了社会的发展。对知识本身的获取和利用，和我们对生产资料的使用观应该等同的。经济发展，我们讲究可持续的良性健康的发展道路。姑且拿豆腐来举例:它爸爸是黄豆，从进入泥土那一刻，便开始吸收雨露营养，发芽沐浴接触阳光和流动的空气，到授粉结果，勉强划为第一个阶段的话，这就是知识的吸收和成长的阶段，从肥沃土壤中和滋润的空气里获取到的营养，用来生根，发芽，生长，开花和结果，这是储备阶段；第二个阶段，便是 “变现”，嫩青绿的黄豆是烧烤摊上的一顿美味，晒干的豆粒可以作为种子，也可以做成各种各样的食物：黄豆酱，豆腐。我们再拿豆腐来说，磨制豆腐过程中，可以拿出一部分作为豆浆作为早餐，一部分作为嫩豆腐，时间久点的做成口感不同的老豆腐，剩下的豆腐渣和秸秆可以是猪牛羊的饲料，也可以化作春泥更护花。诺，你看到了，多么自然的体会。人和知识结合时间作为一个整体来对待，也是同样经历。成长阶段不断地从周围获取营养物质，成长自身，等到丰满羽翼的时候，积累到了一定的储备，那就应该拿出来创造价值。</p>\n<p>片面的说，在近期内，就足够让一拨人走上小康，因为这个时代，你如果想要赚点外快，其实并不难。前提是，你真有一技之长。</p>\n<p>知识付费，反映了一定程度的社会诉求：通过交换，买卖双方都能得到自己想要的东西。知识付费提高了知识的生产动力，在商业化的道路上将会有一段泥泞的道路要走，如果有一类人执意要走的话。现实永远是复杂的，理念永远是美好的。</p>\n<p>（本文完）</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>最近经常在耳朵边环绕的词语就是：知识付费，内容创业。</p>\n</blockquote>","more":"<p>很小的时候，我们就接触诸如“知识就是财富”、“知识就是生产力”这样的那样的知识，告诉我们只要掌握了科学文化知识，就能过上幸福美满的小康生活。<br>是的，或许有很多人跟我一样，发现我们从小学到大学，所学到的所谓知识，从步入社会之后，发现很严重的“脱节”！我们在小埋怨之后，还不得不面对现实进行反思：我考取的工信部认证的设计师资格，我考过的英语6级，我学到的那些历史，挑灯夜战的CAD作图，黑眼圈来完成的毕业论文，心惊胆战的答辩。。。这些到底，到底跟现在我的工作有一分钱的关系吗？还不如那些早早进入社会拼搏的小伙伴们生活的滋润，还不如那些专注网络游戏的大神们挣的钱多，还不如。。。是的，还有一波“还不如”，写不完的不如，道不尽的苦水。心高气傲的我们刚开始总是会觉得自己高人一等，但是在打开窗户，呼吸到精彩的外面世界的空气之后，发现，如果继续一如既往，如果不寻求改变的机会，真的就废了。<br>屋漏偏逢连夜雨，从去年开始到今年伊始，经济变得沉闷，市场变得很浑浊，商业还是那么浮躁，还好我相信，总有一些人需要良好的秩序跟环境，总是需要一些来自北极的冰块来镇静下这片燥热的土地。<br>说到知识付费，我最先了解的是著名评论人keso发帖跟马总跟帖的截图，微信要加快推出付费订阅的功能，然后开始了解到，从2016到今天，行/分答、知乎live、喜马拉雅、吴晓波频道、钛媒体、36氪等先后推出各自不同内容的付费产品，再到最近本人也跟风的加入的付费圈子，有了一些实质性的体会。</p>\n<p>诚如所见，付费迎来了春天，很多的内容收割者获得了不菲的收入，让我看到了人们对知识、对内容的渴求欲望，也引起了我对知识付费的思考。<br>付费形式能够走起来，有几点原因：<br>  1.海量的信息时代，缺少的是高质量的内容。种类繁多的搜索方式，app入口，短信推送。。。接收信息的入口增多，时间的碎片化使得我们对这些铺天盖地而来的信息获取渠道产生了注意力分散，信息的冗余，不能简单高效的获取到真正我们需要的信息资源。我们都知道时间的宝贵性，如果你上半年有能力去买房，但是还在观望，四方打听，迟迟不肯下手，当忙完空余，蓦然回首，年底便是成倍的成本增加，去年某个城市就是如此。成本的增加源于我们对信息获取能力的匮乏，排除个人因素，单是各种无效分析评论和噱头性质的文章让很多人存在着一些侥幸心理，然而，我把这些归于无效信息的严重泛滥，我们在比较，分析时候，不仅来自个人过去经历，更多的是想要与时俱进，从各大网站，各个APP,订阅，杂志媒体等各方面去分析，比较，但处于这些对象的先天自私属性，处于经营，效益等方面的考虑，提供了很多重复，不同程度的信息给我们，最终的导致是无法去精准的的判断和验证某个想法的正确性，导致一些追悔莫及的失误。当然，这只是众多例子中一朵小浪花。<br>  2.知识作为了新的商品入口，知识的提供者更是。人是生产内容的主题，当时间作为一个新的经济维度的时候，知识和时间的糅合，便让付费随后呼之欲出。<br>  理想的方式是订阅者通过付费订阅能够获得自己需要的知识，技能指导，理论讲解，而知识内容的提供者能够从中获取物质上的收益，个人能力的总结和拓展，提问本身更加促进提供者在有限的时间里对自身能力水平的提高，同时又张大了人脉圈。优质回答有促进了内容提供者在订阅者圈子的口碑，获得潜在的宣传和推广，从而吸引更多的人加入圈子。当然，这是理想的生态模式。</p>\n<p>知识的商业化，其实是一直都存在着的。比如版权，专利。知识的的确确提高了生产力，促进了社会的发展。对知识本身的获取和利用，和我们对生产资料的使用观应该等同的。经济发展，我们讲究可持续的良性健康的发展道路。姑且拿豆腐来举例:它爸爸是黄豆，从进入泥土那一刻，便开始吸收雨露营养，发芽沐浴接触阳光和流动的空气，到授粉结果，勉强划为第一个阶段的话，这就是知识的吸收和成长的阶段，从肥沃土壤中和滋润的空气里获取到的营养，用来生根，发芽，生长，开花和结果，这是储备阶段；第二个阶段，便是 “变现”，嫩青绿的黄豆是烧烤摊上的一顿美味，晒干的豆粒可以作为种子，也可以做成各种各样的食物：黄豆酱，豆腐。我们再拿豆腐来说，磨制豆腐过程中，可以拿出一部分作为豆浆作为早餐，一部分作为嫩豆腐，时间久点的做成口感不同的老豆腐，剩下的豆腐渣和秸秆可以是猪牛羊的饲料，也可以化作春泥更护花。诺，你看到了，多么自然的体会。人和知识结合时间作为一个整体来对待，也是同样经历。成长阶段不断地从周围获取营养物质，成长自身，等到丰满羽翼的时候，积累到了一定的储备，那就应该拿出来创造价值。</p>\n<p>片面的说，在近期内，就足够让一拨人走上小康，因为这个时代，你如果想要赚点外快，其实并不难。前提是，你真有一技之长。</p>\n<p>知识付费，反映了一定程度的社会诉求：通过交换，买卖双方都能得到自己想要的东西。知识付费提高了知识的生产动力，在商业化的道路上将会有一段泥泞的道路要走，如果有一类人执意要走的话。现实永远是复杂的，理念永远是美好的。</p>\n<p>（本文完）</p>"},{"title":"透明立方体","date":"2017-03-21T14:39:42.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"css探索之路是永无止境，并且充满乐趣的。\n今天我们来做一个透明的立方体，以及简单的介绍用到的css属性。\n<!-- more -->\n### 前言\n为了便于对比，这里做了两组。提前预报一下，我们用到的属性有 __backface-visibility__ , __perspective__ , __perspective-origin__ , __transform-style__ , __transform__。一定要考虑到 <strong>兼容性</strong>。\n\n<small>ps:这里建议先看下css文档，然后再回过来看这篇文章，最好脑补或者写一遍，体会更深一些。</small>\n\n这里假设大家明白或者已经初步了解了上面的提示内容，简单的对上面的进行说明：\n* __backface-visibility__ 定义当元素不面向屏幕时是否可见，有两个值：visible 和 hidden；\n* __perspective__ 设置从何处查看一个元素的角度，该属性只影响 3D 转换元素，设置值的单位是像素px，表示元素距离视图的距离，应用在舞台元素上；\n* __perspective-origin__ 属性定义 3D 元素所基于的 X 轴和 Y 轴。默认值为中间位置，50% 50%；X轴向右为正，Y轴向下为正；\n* __transform-style__  指定嵌套元素是怎样在三维空间中呈现。两个值plat和preserve-3d，后者表示3D透视。这个一般应用在舞台元素上；\n\n### 上代码\nhtml部分的代码：\n```html\n<div class=\"test-container\">\n  <div class=\"test-cube\">\n    <div class=\"test-face test-front\">1</div>\n    <div class=\"test-face test-back\">2</div>\n\t<div class=\"test-face test-top\">3</div>\n\t<div class=\"test-face test-bot\">4</div>\n\t<div class=\"test-face test-left\">5</div>\n\t<div class=\"test-face test-right\">6</div>\n  </div>\n</div>\n```\ncss部分的代码：\n```css\n.test-container{\n\twidth: 150px;\n\theight: 150px;\n\tmargin: 75px auto;\n}\n\n.test-cube{\n\twidth: 100%;\n\theight: 100%;\n\tbackface-visibility: visible;\n\t--webkit-backface-visibility: visible;\n\tperspective: 300px;\n\t-webkit-perspective: 300px;\n\tperspective-origin: 150% 150%;\n\t--webkit-perspective-origin: 100% 100%;\n\ttransform-style: preserve-3d;\n\t--webkit-transform-style: preserve-3d;\n}\n.test-face{\n\twidth: 100px;\n\theight: 100px;\n\tline-height: 100px;\n\ttext-align: center;\n\tfont-size: 60px;\n\tcolor: white;\n\tposition: absolute;\n}\n/*单个页面*/\n.test-front{\n    background: rgba(0, 0, 0, 0.3);\n\ttransform: translateZ(50px);\n\t-webkit-transform: translateZ(50px);\n}\n.test-back{  \n\tbackground: rgba(0, 255, 0, 1);\n\tcolor: black;\n    transform: rotateY(180deg) translateZ(50px);\n    -webkit-transform: rotateY(180deg) translateZ(50px);\n}\n\n.test-top{\n    background: rgba(196, 196, 0, 0.7);\n    transform: rotateX(90deg) translateZ(50px);\n    -webkit-transform: rotateX(90deg) translateZ(50px);\n}\n.test-bot{\n    background: rgba(196, 0, 196, 0.7);\n\ttransform: rotateX(90deg) translateZ(-50px);\n\t-webkit-transform: rotateX(90deg) translateZ(-50px);\n}\n\n.test-left{\n   background: rgba(0, 0, 196, 0.7);\n   transform: rotateY(-90deg) translateZ(50px);\n   -webkit-transform: rotateY(-90deg) translateZ(50px);\n}\n.test-right{\n   background: rgba(196, 0, 0, 0.7);\n   transform: rotateY(90deg) translateZ(50px);\n   -webkit-transform: rotateY(90deg) translateZ(50px);\t\n}\n```\n\n再次强调需要注意的几个点：\n* __perspective__ 、 __perspective-origin__ 、 __transform-style__ 定义在舞台元素上；\n* __transform__ 定义在具体元素对象上；\n* 空间想象力可以多练习下，先翻转后平移跟先平移后翻转，基准对象是不一样的，所以表现也会有差异的。\n\n<strong>end</strong>\n\n","source":"_posts/2017-03-21-透明立方体.md","raw":"---\ntitle: 透明立方体\ndate: 2017-03-21 22:39:42\ntags: CSS\ncategories: CSS\nupdated:\n---\ncss探索之路是永无止境，并且充满乐趣的。\n今天我们来做一个透明的立方体，以及简单的介绍用到的css属性。\n<!-- more -->\n### 前言\n为了便于对比，这里做了两组。提前预报一下，我们用到的属性有 __backface-visibility__ , __perspective__ , __perspective-origin__ , __transform-style__ , __transform__。一定要考虑到 <strong>兼容性</strong>。\n\n<small>ps:这里建议先看下css文档，然后再回过来看这篇文章，最好脑补或者写一遍，体会更深一些。</small>\n\n这里假设大家明白或者已经初步了解了上面的提示内容，简单的对上面的进行说明：\n* __backface-visibility__ 定义当元素不面向屏幕时是否可见，有两个值：visible 和 hidden；\n* __perspective__ 设置从何处查看一个元素的角度，该属性只影响 3D 转换元素，设置值的单位是像素px，表示元素距离视图的距离，应用在舞台元素上；\n* __perspective-origin__ 属性定义 3D 元素所基于的 X 轴和 Y 轴。默认值为中间位置，50% 50%；X轴向右为正，Y轴向下为正；\n* __transform-style__  指定嵌套元素是怎样在三维空间中呈现。两个值plat和preserve-3d，后者表示3D透视。这个一般应用在舞台元素上；\n\n### 上代码\nhtml部分的代码：\n```html\n<div class=\"test-container\">\n  <div class=\"test-cube\">\n    <div class=\"test-face test-front\">1</div>\n    <div class=\"test-face test-back\">2</div>\n\t<div class=\"test-face test-top\">3</div>\n\t<div class=\"test-face test-bot\">4</div>\n\t<div class=\"test-face test-left\">5</div>\n\t<div class=\"test-face test-right\">6</div>\n  </div>\n</div>\n```\ncss部分的代码：\n```css\n.test-container{\n\twidth: 150px;\n\theight: 150px;\n\tmargin: 75px auto;\n}\n\n.test-cube{\n\twidth: 100%;\n\theight: 100%;\n\tbackface-visibility: visible;\n\t--webkit-backface-visibility: visible;\n\tperspective: 300px;\n\t-webkit-perspective: 300px;\n\tperspective-origin: 150% 150%;\n\t--webkit-perspective-origin: 100% 100%;\n\ttransform-style: preserve-3d;\n\t--webkit-transform-style: preserve-3d;\n}\n.test-face{\n\twidth: 100px;\n\theight: 100px;\n\tline-height: 100px;\n\ttext-align: center;\n\tfont-size: 60px;\n\tcolor: white;\n\tposition: absolute;\n}\n/*单个页面*/\n.test-front{\n    background: rgba(0, 0, 0, 0.3);\n\ttransform: translateZ(50px);\n\t-webkit-transform: translateZ(50px);\n}\n.test-back{  \n\tbackground: rgba(0, 255, 0, 1);\n\tcolor: black;\n    transform: rotateY(180deg) translateZ(50px);\n    -webkit-transform: rotateY(180deg) translateZ(50px);\n}\n\n.test-top{\n    background: rgba(196, 196, 0, 0.7);\n    transform: rotateX(90deg) translateZ(50px);\n    -webkit-transform: rotateX(90deg) translateZ(50px);\n}\n.test-bot{\n    background: rgba(196, 0, 196, 0.7);\n\ttransform: rotateX(90deg) translateZ(-50px);\n\t-webkit-transform: rotateX(90deg) translateZ(-50px);\n}\n\n.test-left{\n   background: rgba(0, 0, 196, 0.7);\n   transform: rotateY(-90deg) translateZ(50px);\n   -webkit-transform: rotateY(-90deg) translateZ(50px);\n}\n.test-right{\n   background: rgba(196, 0, 0, 0.7);\n   transform: rotateY(90deg) translateZ(50px);\n   -webkit-transform: rotateY(90deg) translateZ(50px);\t\n}\n```\n\n再次强调需要注意的几个点：\n* __perspective__ 、 __perspective-origin__ 、 __transform-style__ 定义在舞台元素上；\n* __transform__ 定义在具体元素对象上；\n* 空间想象力可以多练习下，先翻转后平移跟先平移后翻转，基准对象是不一样的，所以表现也会有差异的。\n\n<strong>end</strong>\n\n","slug":"透明立方体","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobkli0009bbfyjetr3yw1","content":"<p>css探索之路是永无止境，并且充满乐趣的。<br>今天我们来做一个透明的立方体，以及简单的介绍用到的css属性。<br><a id=\"more\"></a></p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>为了便于对比，这里做了两组。提前预报一下，我们用到的属性有 <strong>backface-visibility</strong> , <strong>perspective</strong> , <strong>perspective-origin</strong> , <strong>transform-style</strong> , <strong>transform</strong>。一定要考虑到 <strong>兼容性</strong>。</p>\n<p><small>ps:这里建议先看下css文档，然后再回过来看这篇文章，最好脑补或者写一遍，体会更深一些。</small></p>\n<p>这里假设大家明白或者已经初步了解了上面的提示内容，简单的对上面的进行说明：</p>\n<ul>\n<li><strong>backface-visibility</strong> 定义当元素不面向屏幕时是否可见，有两个值：visible 和 hidden；</li>\n<li><strong>perspective</strong> 设置从何处查看一个元素的角度，该属性只影响 3D 转换元素，设置值的单位是像素px，表示元素距离视图的距离，应用在舞台元素上；</li>\n<li><strong>perspective-origin</strong> 属性定义 3D 元素所基于的 X 轴和 Y 轴。默认值为中间位置，50% 50%；X轴向右为正，Y轴向下为正；</li>\n<li><strong>transform-style</strong>  指定嵌套元素是怎样在三维空间中呈现。两个值plat和preserve-3d，后者表示3D透视。这个一般应用在舞台元素上；</li>\n</ul>\n<h3 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h3><p>html部分的代码：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-cube\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-front\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-back\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-top\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-bot\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-left\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-right\"</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>css部分的代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test-container</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">75px</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.test-cube</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">backface-visibility</span>: visible;</span><br><span class=\"line\">\t<span class=\"attribute\">--webkit-backface-visibility</span>: visible;</span><br><span class=\"line\">\t<span class=\"attribute\">perspective</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">-webkit-perspective</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">perspective-origin</span>: <span class=\"number\">150%</span> <span class=\"number\">150%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">--webkit-perspective-origin</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">transform-style</span>: preserve-<span class=\"number\">3</span>d;</span><br><span class=\"line\">\t<span class=\"attribute\">--webkit-transform-style</span>: preserve-<span class=\"number\">3</span>d;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-face</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">line-height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*单个页面*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.test-front</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0.3);</span><br><span class=\"line\">\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-back</span>&#123;  </span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0, 255, 0, 1);</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(180deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateY</span>(180deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.test-top</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(196, 196, 0, 0.7);</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-bot</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(196, 0, 196, 0.7);</span><br><span class=\"line\">\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(-50px);</span><br><span class=\"line\">\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(-50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.test-left</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0, 0, 196, 0.7);</span><br><span class=\"line\">   <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(-90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">   <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateY</span>(-90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-right</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(196, 0, 0, 0.7);</span><br><span class=\"line\">   <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">   <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateY</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>再次强调需要注意的几个点：</p>\n<ul>\n<li><strong>perspective</strong> 、 <strong>perspective-origin</strong> 、 <strong>transform-style</strong> 定义在舞台元素上；</li>\n<li><strong>transform</strong> 定义在具体元素对象上；</li>\n<li>空间想象力可以多练习下，先翻转后平移跟先平移后翻转，基准对象是不一样的，所以表现也会有差异的。</li>\n</ul>\n<p><strong>end</strong></p>\n","site":{"data":{}},"excerpt":"<p>css探索之路是永无止境，并且充满乐趣的。<br>今天我们来做一个透明的立方体，以及简单的介绍用到的css属性。<br>","more":"</p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>为了便于对比，这里做了两组。提前预报一下，我们用到的属性有 <strong>backface-visibility</strong> , <strong>perspective</strong> , <strong>perspective-origin</strong> , <strong>transform-style</strong> , <strong>transform</strong>。一定要考虑到 <strong>兼容性</strong>。</p>\n<p><small>ps:这里建议先看下css文档，然后再回过来看这篇文章，最好脑补或者写一遍，体会更深一些。</small></p>\n<p>这里假设大家明白或者已经初步了解了上面的提示内容，简单的对上面的进行说明：</p>\n<ul>\n<li><strong>backface-visibility</strong> 定义当元素不面向屏幕时是否可见，有两个值：visible 和 hidden；</li>\n<li><strong>perspective</strong> 设置从何处查看一个元素的角度，该属性只影响 3D 转换元素，设置值的单位是像素px，表示元素距离视图的距离，应用在舞台元素上；</li>\n<li><strong>perspective-origin</strong> 属性定义 3D 元素所基于的 X 轴和 Y 轴。默认值为中间位置，50% 50%；X轴向右为正，Y轴向下为正；</li>\n<li><strong>transform-style</strong>  指定嵌套元素是怎样在三维空间中呈现。两个值plat和preserve-3d，后者表示3D透视。这个一般应用在舞台元素上；</li>\n</ul>\n<h3 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h3><p>html部分的代码：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-container\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-cube\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-front\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-back\"</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-top\"</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-bot\"</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-left\"</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"test-face test-right\"</span>&gt;</span>6<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>css部分的代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.test-container</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">150px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">75px</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.test-cube</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">backface-visibility</span>: visible;</span><br><span class=\"line\">\t<span class=\"attribute\">--webkit-backface-visibility</span>: visible;</span><br><span class=\"line\">\t<span class=\"attribute\">perspective</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">-webkit-perspective</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">perspective-origin</span>: <span class=\"number\">150%</span> <span class=\"number\">150%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">--webkit-perspective-origin</span>: <span class=\"number\">100%</span> <span class=\"number\">100%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">transform-style</span>: preserve-<span class=\"number\">3</span>d;</span><br><span class=\"line\">\t<span class=\"attribute\">--webkit-transform-style</span>: preserve-<span class=\"number\">3</span>d;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-face</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">line-height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">\t<span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*单个页面*/</span></span><br><span class=\"line\"><span class=\"selector-class\">.test-front</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0.3);</span><br><span class=\"line\">\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-back</span>&#123;  </span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0, 255, 0, 1);</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(180deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateY</span>(180deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.test-top</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(196, 196, 0, 0.7);</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-bot</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(196, 0, 196, 0.7);</span><br><span class=\"line\">\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(-50px);</span><br><span class=\"line\">\t<span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateX</span>(90deg) <span class=\"built_in\">translateZ</span>(-50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.test-left</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(0, 0, 196, 0.7);</span><br><span class=\"line\">   <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(-90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">   <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateY</span>(-90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test-right</span>&#123;</span><br><span class=\"line\">   <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(196, 0, 0, 0.7);</span><br><span class=\"line\">   <span class=\"attribute\">transform</span>: <span class=\"built_in\">rotateY</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);</span><br><span class=\"line\">   <span class=\"attribute\">-webkit-transform</span>: <span class=\"built_in\">rotateY</span>(90deg) <span class=\"built_in\">translateZ</span>(50px);\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>再次强调需要注意的几个点：</p>\n<ul>\n<li><strong>perspective</strong> 、 <strong>perspective-origin</strong> 、 <strong>transform-style</strong> 定义在舞台元素上；</li>\n<li><strong>transform</strong> 定义在具体元素对象上；</li>\n<li>空间想象力可以多练习下，先翻转后平移跟先平移后翻转，基准对象是不一样的，所以表现也会有差异的。</li>\n</ul>\n<p><strong>end</strong></p>"},{"title":"VR之A-FRAME接触1","date":"2017-03-21T06:12:48.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"VR（Virtual Reality）是利用电脑模拟产生一个三维空间的虚拟世界，提供用户关于视觉等感官的模拟，让用户感觉仿佛身历其境，可以及时、没有限制地观察三维空间内的事物。用户进行位置移动时，电脑可以立即进行复杂的运算，将精确的三维世界视频传回产生临场感。—— 维基百科\n\n<!-- more -->\nwebVR草案：\n  > WebVR 是早期和实验性的 JavaScript API，它提供了访问如 Oculus Rift 和 Google Cardboard 等 VR 设备功能的 API。\n\n目前笔者接触过的方案,基本上近期内是离不开__Three.js__ ,对于没有接触过它又想要体验一把webVR技术的（比如我）,无疑是有点难度的。\n有需求的地方，一定会有满足该需求的解决方案。显然，[MozVR 团队](https://mozvr.com/#team) 在这方面做得不错，他们开发了A-Frame框架，[案例和文档](https://aframe.io/) 也是比较完善的,通过这个开源的框架构建的VR场景能够兼容PC、Mobile、Oculus Rift和HTC Vive，这个框架能够使我们能够快速的通过简单的html标签以及属性和JavaScript，让迫不及待的我们能够迅速体验到这一酷炫的技术，很赞！\n\n先睹为快，看下简单的 [Hello World](http://codepen.io/mozvr/pen/BjygdO/) \n```javascript\n<script src=\"https://aframe.io/releases/0.5.0/aframe.min.js\"></script>\n\n<a-scene>\n  <a-sphere position=\"0 1.25 -5\" radius=\"1.25\" color=\"#EF2D5E\"></a-sphere>\n  <a-box position=\"-1 0.5 -3\" rotation=\"0 45 0\" width=\"1\" height=\"1\" depth=\"1\" color=\"#4CC3D9\"></a-box>\n  <a-cylinder position=\"1 0.75 -3\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"></a-cylinder>\n  <a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"></a-plane>\n  <a-sky color=\"#ECECEC\"></a-sky>\n</a-scene>\n```\n简单的js文件引入，标签的建立，就可以实现简单的案例。\n当然，更多的 [Demos](https://aframe.io/) 演示，还有他们的 [Blog](https://aframe.io/blog/) , 少不了Github [Awesome A-Frame](https://github.com/aframevr/awesome-aframe) .\n\n如果只是这样完事，那我就没必要搞这个文章了。昨晚到今天上午，萌萌呼呼的总结了点关于 __VR体验环境__ 的搭建。下面步入本文的正题。\n\ne神我最近常用的是mac，于是就啥也没想，一股脑子的就直奔主题，从Mozlia的a-frame文档，追到Oculus Rift(其实追到这里就应该有所察觉了，奈何英文渣，挨个来读介绍 QAQ)。是的，我已经下载了 [FirefoxNightly](https://www.mozilla.org/zh-CN/firefox/channel/desktop/#nightly) ,不知道是哪里的原因，访问Mozlia出奇的慢，google翻的速度还行，70M的dmg愣是耗了一大会儿·(如果需要，联系我，文档下载两不误)。\n\n一边看文档跟实例，当然这也在 W-A-S-D和上下左右键，空格键结合来体验那些demo，当时我在想着这些用 __css__ 和 __javascript__ ，即不依赖 Three.js 引入或者是 Aframe.js 就能实现。。你知道的，就去试着做demo，用来一部分css的动画属性。\n\n没有对比就没有伤害，我果断抛弃了热乎乎刚写的代码，看文档跟体验去了--\n\n我想说的一句是，当你对一个技术点特别感兴趣的时候，一定不要头脑发热，就好比遇到心仪的女孩子，不要猴急的表白许诺。好好看看文档，比如这一行：\n  Unfortunately, Mac and Linux are not supported with the Oculus Rift and cannot be used for viewing WebVR content.\n当时我看到的时候，我已经被VR迷住了，对，就是傻劲，我计划的是把步骤走一遍，然后mac上装个windows系统(没错，Crazy...),要么就是用下 Docker ... 当时就是这样想的。\n\n第二天早早的到了公司，开始谷歌关于A-Frame的现状。Oculus Rift和HTC Vive Pre都相继公布了推荐PC配置，但引起大家好奇的一点就是这些配置都是针对Windows系统电脑的，难道就没有适合苹果Mac电脑的配置吗？Oculus创始人帕莫尔·勒基（Palmer Luckey）表示：苹果电脑的配置太烂了，没法支持VR头盔对PC性能的要求！ 帕莫尔·勒基解释说：“这主要是因为苹果并没有将高端GPU列为优先考虑的配置。你可以花6000美元买一台搭载顶级AMD Fire Pro D700处理器的Mac Pro，但它还是没有达到我们的推荐配置要求。如果他们像以前一样配置更高端的GPU，我们将很乐于为Mac提供支持。但是现在，还没有一台Mac电脑能够支持它，即便我们在软件方面为它提供支持，也没有能够运行大多数VR软件的Mac电脑。”\n\n人家说的确实没错，苹果电脑采用的显卡性能都不是很理想，在MacBook系列中，也只有顶配的MacBookPro才有独立显卡。目前的VR产品对PC的图形处理有着苛刻的要求，最低显卡都是GTX 970级别的，所以苹果用户没法在第一时间体验到Oculus Rift和HTC Vive了。\n\n消息是16年3月的。后来据说有个外置显卡的众筹项目，但是最后众筹失败。今年3月份，开发商Cindori推出一款名为VR Desktop for Mac的应用，使得MacOS也可以支持Oculus Rift，20刀，而且仅仅是只能支持 Oculus Rift。没办法，硬件限制，不能真正的支持 VR .\n\n问题来了，我这低配的mac能跑起来吗？ 笑话。\n\n果断的，我从书桌底层把布满灰尘的HP笔记本拿出来，这台哥们确实很单纯，重新装的win7，什么都没有。\n\n于是梯子(现在没有梯子就看不到那些花花世界了)，Git(重要性不言而喻)，Nodejs(这个在这里目前不是必须的，习惯了)，还有win版本的FirefoxNightly，Chromium，我着重去了 [Oculus](https://www.oculus.com) 注册账号，看了下外设，顺便某东某猫上看了下价格。。。\n\n额，重点在 [这里](https://secure.oculus.com/my/rift/) 了, __Getting Started__ part部分，正如你所看到的:\n  1. Compatibility tool - Make sure your PC is Oculus ready.\n\n  2. Rift Setup Tool - Download Rift’s setup tool to get started in virtual reality.\n\n  3. Getting Started Guide - We’ll help you download the Oculus software, unbox your Rift, and personalize it.\n\n  4. User Guide - Now that your Rift is all set up, you can download, purchase, and manage games and apps, both in Rift and on your computer’s desktop.\n\n  5. Setup Videos - These videos show you how to setup your Rift.\n\n上面的第一点是确保当前PC支持 Oculus Rift，第二点可以理解为VR外设驱动了。两个都是需要墙外去下载的。期间会需要你下载Micsoft的两个补丁(自行百度或者找我要),另外你需要邮箱来注册Oclus账号，因为后续结合设备来配置下参数的。\n\n在VR配套设施具备后，有这么几个你可能想要体验的：\n[sketchfab](https://sketchfab.com/)   [vizor](http://vizor.io/)   [Slack](https://webvr.rocks/slack) \n[beloola](https://www.beloola.com/)   [chromeexperiments](http://vr.chromeexperiments.com/)\n\n最后，想多余一句，如果是 i5 2.7GHz 和6100 1536 MB的mac话，还是换台win机吧，很烫。\n\n（本文完）\n","source":"_posts/2017-03-21-VR之A-FRAME接触1.md","raw":"---\ntitle: VR之A-FRAME接触1\ndate: 2017-03-21 14:12:48\ntags: ['VR','A-FRAME']\ncategories: VR\nupdated:\n---\nVR（Virtual Reality）是利用电脑模拟产生一个三维空间的虚拟世界，提供用户关于视觉等感官的模拟，让用户感觉仿佛身历其境，可以及时、没有限制地观察三维空间内的事物。用户进行位置移动时，电脑可以立即进行复杂的运算，将精确的三维世界视频传回产生临场感。—— 维基百科\n\n<!-- more -->\nwebVR草案：\n  > WebVR 是早期和实验性的 JavaScript API，它提供了访问如 Oculus Rift 和 Google Cardboard 等 VR 设备功能的 API。\n\n目前笔者接触过的方案,基本上近期内是离不开__Three.js__ ,对于没有接触过它又想要体验一把webVR技术的（比如我）,无疑是有点难度的。\n有需求的地方，一定会有满足该需求的解决方案。显然，[MozVR 团队](https://mozvr.com/#team) 在这方面做得不错，他们开发了A-Frame框架，[案例和文档](https://aframe.io/) 也是比较完善的,通过这个开源的框架构建的VR场景能够兼容PC、Mobile、Oculus Rift和HTC Vive，这个框架能够使我们能够快速的通过简单的html标签以及属性和JavaScript，让迫不及待的我们能够迅速体验到这一酷炫的技术，很赞！\n\n先睹为快，看下简单的 [Hello World](http://codepen.io/mozvr/pen/BjygdO/) \n```javascript\n<script src=\"https://aframe.io/releases/0.5.0/aframe.min.js\"></script>\n\n<a-scene>\n  <a-sphere position=\"0 1.25 -5\" radius=\"1.25\" color=\"#EF2D5E\"></a-sphere>\n  <a-box position=\"-1 0.5 -3\" rotation=\"0 45 0\" width=\"1\" height=\"1\" depth=\"1\" color=\"#4CC3D9\"></a-box>\n  <a-cylinder position=\"1 0.75 -3\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"></a-cylinder>\n  <a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"></a-plane>\n  <a-sky color=\"#ECECEC\"></a-sky>\n</a-scene>\n```\n简单的js文件引入，标签的建立，就可以实现简单的案例。\n当然，更多的 [Demos](https://aframe.io/) 演示，还有他们的 [Blog](https://aframe.io/blog/) , 少不了Github [Awesome A-Frame](https://github.com/aframevr/awesome-aframe) .\n\n如果只是这样完事，那我就没必要搞这个文章了。昨晚到今天上午，萌萌呼呼的总结了点关于 __VR体验环境__ 的搭建。下面步入本文的正题。\n\ne神我最近常用的是mac，于是就啥也没想，一股脑子的就直奔主题，从Mozlia的a-frame文档，追到Oculus Rift(其实追到这里就应该有所察觉了，奈何英文渣，挨个来读介绍 QAQ)。是的，我已经下载了 [FirefoxNightly](https://www.mozilla.org/zh-CN/firefox/channel/desktop/#nightly) ,不知道是哪里的原因，访问Mozlia出奇的慢，google翻的速度还行，70M的dmg愣是耗了一大会儿·(如果需要，联系我，文档下载两不误)。\n\n一边看文档跟实例，当然这也在 W-A-S-D和上下左右键，空格键结合来体验那些demo，当时我在想着这些用 __css__ 和 __javascript__ ，即不依赖 Three.js 引入或者是 Aframe.js 就能实现。。你知道的，就去试着做demo，用来一部分css的动画属性。\n\n没有对比就没有伤害，我果断抛弃了热乎乎刚写的代码，看文档跟体验去了--\n\n我想说的一句是，当你对一个技术点特别感兴趣的时候，一定不要头脑发热，就好比遇到心仪的女孩子，不要猴急的表白许诺。好好看看文档，比如这一行：\n  Unfortunately, Mac and Linux are not supported with the Oculus Rift and cannot be used for viewing WebVR content.\n当时我看到的时候，我已经被VR迷住了，对，就是傻劲，我计划的是把步骤走一遍，然后mac上装个windows系统(没错，Crazy...),要么就是用下 Docker ... 当时就是这样想的。\n\n第二天早早的到了公司，开始谷歌关于A-Frame的现状。Oculus Rift和HTC Vive Pre都相继公布了推荐PC配置，但引起大家好奇的一点就是这些配置都是针对Windows系统电脑的，难道就没有适合苹果Mac电脑的配置吗？Oculus创始人帕莫尔·勒基（Palmer Luckey）表示：苹果电脑的配置太烂了，没法支持VR头盔对PC性能的要求！ 帕莫尔·勒基解释说：“这主要是因为苹果并没有将高端GPU列为优先考虑的配置。你可以花6000美元买一台搭载顶级AMD Fire Pro D700处理器的Mac Pro，但它还是没有达到我们的推荐配置要求。如果他们像以前一样配置更高端的GPU，我们将很乐于为Mac提供支持。但是现在，还没有一台Mac电脑能够支持它，即便我们在软件方面为它提供支持，也没有能够运行大多数VR软件的Mac电脑。”\n\n人家说的确实没错，苹果电脑采用的显卡性能都不是很理想，在MacBook系列中，也只有顶配的MacBookPro才有独立显卡。目前的VR产品对PC的图形处理有着苛刻的要求，最低显卡都是GTX 970级别的，所以苹果用户没法在第一时间体验到Oculus Rift和HTC Vive了。\n\n消息是16年3月的。后来据说有个外置显卡的众筹项目，但是最后众筹失败。今年3月份，开发商Cindori推出一款名为VR Desktop for Mac的应用，使得MacOS也可以支持Oculus Rift，20刀，而且仅仅是只能支持 Oculus Rift。没办法，硬件限制，不能真正的支持 VR .\n\n问题来了，我这低配的mac能跑起来吗？ 笑话。\n\n果断的，我从书桌底层把布满灰尘的HP笔记本拿出来，这台哥们确实很单纯，重新装的win7，什么都没有。\n\n于是梯子(现在没有梯子就看不到那些花花世界了)，Git(重要性不言而喻)，Nodejs(这个在这里目前不是必须的，习惯了)，还有win版本的FirefoxNightly，Chromium，我着重去了 [Oculus](https://www.oculus.com) 注册账号，看了下外设，顺便某东某猫上看了下价格。。。\n\n额，重点在 [这里](https://secure.oculus.com/my/rift/) 了, __Getting Started__ part部分，正如你所看到的:\n  1. Compatibility tool - Make sure your PC is Oculus ready.\n\n  2. Rift Setup Tool - Download Rift’s setup tool to get started in virtual reality.\n\n  3. Getting Started Guide - We’ll help you download the Oculus software, unbox your Rift, and personalize it.\n\n  4. User Guide - Now that your Rift is all set up, you can download, purchase, and manage games and apps, both in Rift and on your computer’s desktop.\n\n  5. Setup Videos - These videos show you how to setup your Rift.\n\n上面的第一点是确保当前PC支持 Oculus Rift，第二点可以理解为VR外设驱动了。两个都是需要墙外去下载的。期间会需要你下载Micsoft的两个补丁(自行百度或者找我要),另外你需要邮箱来注册Oclus账号，因为后续结合设备来配置下参数的。\n\n在VR配套设施具备后，有这么几个你可能想要体验的：\n[sketchfab](https://sketchfab.com/)   [vizor](http://vizor.io/)   [Slack](https://webvr.rocks/slack) \n[beloola](https://www.beloola.com/)   [chromeexperiments](http://vr.chromeexperiments.com/)\n\n最后，想多余一句，如果是 i5 2.7GHz 和6100 1536 MB的mac话，还是换台win机吧，很烫。\n\n（本文完）\n","slug":"VR之A-FRAME接触1","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklk000dbbfybd8chmx5","content":"<p>VR（Virtual Reality）是利用电脑模拟产生一个三维空间的虚拟世界，提供用户关于视觉等感官的模拟，让用户感觉仿佛身历其境，可以及时、没有限制地观察三维空间内的事物。用户进行位置移动时，电脑可以立即进行复杂的运算，将精确的三维世界视频传回产生临场感。—— 维基百科</p>\n<a id=\"more\"></a>\n<p>webVR草案：</p>\n<blockquote>\n<p>WebVR 是早期和实验性的 JavaScript API，它提供了访问如 Oculus Rift 和 Google Cardboard 等 VR 设备功能的 API。</p>\n</blockquote>\n<p>目前笔者接触过的方案,基本上近期内是离不开<strong>Three.js</strong> ,对于没有接触过它又想要体验一把webVR技术的（比如我）,无疑是有点难度的。<br>有需求的地方，一定会有满足该需求的解决方案。显然，<a href=\"https://mozvr.com/#team\" target=\"_blank\" rel=\"noopener\">MozVR 团队</a> 在这方面做得不错，他们开发了A-Frame框架，<a href=\"https://aframe.io/\" target=\"_blank\" rel=\"noopener\">案例和文档</a> 也是比较完善的,通过这个开源的框架构建的VR场景能够兼容PC、Mobile、Oculus Rift和HTC Vive，这个框架能够使我们能够快速的通过简单的html标签以及属性和JavaScript，让迫不及待的我们能够迅速体验到这一酷炫的技术，很赞！</p>\n<p>先睹为快，看下简单的 <a href=\"http://codepen.io/mozvr/pen/BjygdO/\" target=\"_blank\" rel=\"noopener\">Hello World</a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"https://aframe.io/releases/0.5.0/aframe.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;a-scene&gt;</span><br><span class=\"line\">  &lt;a-sphere position=<span class=\"string\">\"0 1.25 -5\"</span> radius=<span class=\"string\">\"1.25\"</span> color=<span class=\"string\">\"#EF2D5E\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a-sphere</span>&gt;</span></span></span><br><span class=\"line\">  &lt;a-box position=\"-1 0.5 -3\" rotation=\"0 45 0\" width=\"1\" height=\"1\" depth=\"1\" color=\"#4CC3D9\"&gt;&lt;/a-box&gt;</span><br><span class=\"line\">  &lt;a-cylinder position=\"1 0.75 -3\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"&gt;&lt;/a-cylinder&gt;</span><br><span class=\"line\">  &lt;a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"&gt;&lt;/a-plane&gt;</span><br><span class=\"line\">  &lt;a-sky color=\"#ECECEC\"&gt;&lt;/a-sky&gt;</span><br><span class=\"line\">&lt;/a-scene&gt;</span><br></pre></td></tr></table></figure></p>\n<p>简单的js文件引入，标签的建立，就可以实现简单的案例。<br>当然，更多的 <a href=\"https://aframe.io/\" target=\"_blank\" rel=\"noopener\">Demos</a> 演示，还有他们的 <a href=\"https://aframe.io/blog/\" target=\"_blank\" rel=\"noopener\">Blog</a> , 少不了Github <a href=\"https://github.com/aframevr/awesome-aframe\" target=\"_blank\" rel=\"noopener\">Awesome A-Frame</a> .</p>\n<p>如果只是这样完事，那我就没必要搞这个文章了。昨晚到今天上午，萌萌呼呼的总结了点关于 <strong>VR体验环境</strong> 的搭建。下面步入本文的正题。</p>\n<p>e神我最近常用的是mac，于是就啥也没想，一股脑子的就直奔主题，从Mozlia的a-frame文档，追到Oculus Rift(其实追到这里就应该有所察觉了，奈何英文渣，挨个来读介绍 QAQ)。是的，我已经下载了 <a href=\"https://www.mozilla.org/zh-CN/firefox/channel/desktop/#nightly\" target=\"_blank\" rel=\"noopener\">FirefoxNightly</a> ,不知道是哪里的原因，访问Mozlia出奇的慢，google翻的速度还行，70M的dmg愣是耗了一大会儿·(如果需要，联系我，文档下载两不误)。</p>\n<p>一边看文档跟实例，当然这也在 W-A-S-D和上下左右键，空格键结合来体验那些demo，当时我在想着这些用 <strong>css</strong> 和 <strong>javascript</strong> ，即不依赖 Three.js 引入或者是 Aframe.js 就能实现。。你知道的，就去试着做demo，用来一部分css的动画属性。</p>\n<p>没有对比就没有伤害，我果断抛弃了热乎乎刚写的代码，看文档跟体验去了–</p>\n<p>我想说的一句是，当你对一个技术点特别感兴趣的时候，一定不要头脑发热，就好比遇到心仪的女孩子，不要猴急的表白许诺。好好看看文档，比如这一行：<br>  Unfortunately, Mac and Linux are not supported with the Oculus Rift and cannot be used for viewing WebVR content.<br>当时我看到的时候，我已经被VR迷住了，对，就是傻劲，我计划的是把步骤走一遍，然后mac上装个windows系统(没错，Crazy…),要么就是用下 Docker … 当时就是这样想的。</p>\n<p>第二天早早的到了公司，开始谷歌关于A-Frame的现状。Oculus Rift和HTC Vive Pre都相继公布了推荐PC配置，但引起大家好奇的一点就是这些配置都是针对Windows系统电脑的，难道就没有适合苹果Mac电脑的配置吗？Oculus创始人帕莫尔·勒基（Palmer Luckey）表示：苹果电脑的配置太烂了，没法支持VR头盔对PC性能的要求！ 帕莫尔·勒基解释说：“这主要是因为苹果并没有将高端GPU列为优先考虑的配置。你可以花6000美元买一台搭载顶级AMD Fire Pro D700处理器的Mac Pro，但它还是没有达到我们的推荐配置要求。如果他们像以前一样配置更高端的GPU，我们将很乐于为Mac提供支持。但是现在，还没有一台Mac电脑能够支持它，即便我们在软件方面为它提供支持，也没有能够运行大多数VR软件的Mac电脑。”</p>\n<p>人家说的确实没错，苹果电脑采用的显卡性能都不是很理想，在MacBook系列中，也只有顶配的MacBookPro才有独立显卡。目前的VR产品对PC的图形处理有着苛刻的要求，最低显卡都是GTX 970级别的，所以苹果用户没法在第一时间体验到Oculus Rift和HTC Vive了。</p>\n<p>消息是16年3月的。后来据说有个外置显卡的众筹项目，但是最后众筹失败。今年3月份，开发商Cindori推出一款名为VR Desktop for Mac的应用，使得MacOS也可以支持Oculus Rift，20刀，而且仅仅是只能支持 Oculus Rift。没办法，硬件限制，不能真正的支持 VR .</p>\n<p>问题来了，我这低配的mac能跑起来吗？ 笑话。</p>\n<p>果断的，我从书桌底层把布满灰尘的HP笔记本拿出来，这台哥们确实很单纯，重新装的win7，什么都没有。</p>\n<p>于是梯子(现在没有梯子就看不到那些花花世界了)，Git(重要性不言而喻)，Nodejs(这个在这里目前不是必须的，习惯了)，还有win版本的FirefoxNightly，Chromium，我着重去了 <a href=\"https://www.oculus.com\" target=\"_blank\" rel=\"noopener\">Oculus</a> 注册账号，看了下外设，顺便某东某猫上看了下价格。。。</p>\n<p>额，重点在 <a href=\"https://secure.oculus.com/my/rift/\" target=\"_blank\" rel=\"noopener\">这里</a> 了, <strong>Getting Started</strong> part部分，正如你所看到的:</p>\n<ol>\n<li><p>Compatibility tool - Make sure your PC is Oculus ready.</p>\n</li>\n<li><p>Rift Setup Tool - Download Rift’s setup tool to get started in virtual reality.</p>\n</li>\n<li><p>Getting Started Guide - We’ll help you download the Oculus software, unbox your Rift, and personalize it.</p>\n</li>\n<li><p>User Guide - Now that your Rift is all set up, you can download, purchase, and manage games and apps, both in Rift and on your computer’s desktop.</p>\n</li>\n<li><p>Setup Videos - These videos show you how to setup your Rift.</p>\n</li>\n</ol>\n<p>上面的第一点是确保当前PC支持 Oculus Rift，第二点可以理解为VR外设驱动了。两个都是需要墙外去下载的。期间会需要你下载Micsoft的两个补丁(自行百度或者找我要),另外你需要邮箱来注册Oclus账号，因为后续结合设备来配置下参数的。</p>\n<p>在VR配套设施具备后，有这么几个你可能想要体验的：<br><a href=\"https://sketchfab.com/\" target=\"_blank\" rel=\"noopener\">sketchfab</a>   <a href=\"http://vizor.io/\" target=\"_blank\" rel=\"noopener\">vizor</a>   <a href=\"https://webvr.rocks/slack\" target=\"_blank\" rel=\"noopener\">Slack</a><br><a href=\"https://www.beloola.com/\" target=\"_blank\" rel=\"noopener\">beloola</a>   <a href=\"http://vr.chromeexperiments.com/\" target=\"_blank\" rel=\"noopener\">chromeexperiments</a></p>\n<p>最后，想多余一句，如果是 i5 2.7GHz 和6100 1536 MB的mac话，还是换台win机吧，很烫。</p>\n<p>（本文完）</p>\n","site":{"data":{}},"excerpt":"<p>VR（Virtual Reality）是利用电脑模拟产生一个三维空间的虚拟世界，提供用户关于视觉等感官的模拟，让用户感觉仿佛身历其境，可以及时、没有限制地观察三维空间内的事物。用户进行位置移动时，电脑可以立即进行复杂的运算，将精确的三维世界视频传回产生临场感。—— 维基百科</p>","more":"<p>webVR草案：</p>\n<blockquote>\n<p>WebVR 是早期和实验性的 JavaScript API，它提供了访问如 Oculus Rift 和 Google Cardboard 等 VR 设备功能的 API。</p>\n</blockquote>\n<p>目前笔者接触过的方案,基本上近期内是离不开<strong>Three.js</strong> ,对于没有接触过它又想要体验一把webVR技术的（比如我）,无疑是有点难度的。<br>有需求的地方，一定会有满足该需求的解决方案。显然，<a href=\"https://mozvr.com/#team\" target=\"_blank\" rel=\"noopener\">MozVR 团队</a> 在这方面做得不错，他们开发了A-Frame框架，<a href=\"https://aframe.io/\" target=\"_blank\" rel=\"noopener\">案例和文档</a> 也是比较完善的,通过这个开源的框架构建的VR场景能够兼容PC、Mobile、Oculus Rift和HTC Vive，这个框架能够使我们能够快速的通过简单的html标签以及属性和JavaScript，让迫不及待的我们能够迅速体验到这一酷炫的技术，很赞！</p>\n<p>先睹为快，看下简单的 <a href=\"http://codepen.io/mozvr/pen/BjygdO/\" target=\"_blank\" rel=\"noopener\">Hello World</a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"https://aframe.io/releases/0.5.0/aframe.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;a-scene&gt;</span><br><span class=\"line\">  &lt;a-sphere position=<span class=\"string\">\"0 1.25 -5\"</span> radius=<span class=\"string\">\"1.25\"</span> color=<span class=\"string\">\"#EF2D5E\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">a-sphere</span>&gt;</span></span></span><br><span class=\"line\">  &lt;a-box position=\"-1 0.5 -3\" rotation=\"0 45 0\" width=\"1\" height=\"1\" depth=\"1\" color=\"#4CC3D9\"&gt;&lt;/a-box&gt;</span><br><span class=\"line\">  &lt;a-cylinder position=\"1 0.75 -3\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\"&gt;&lt;/a-cylinder&gt;</span><br><span class=\"line\">  &lt;a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\"&gt;&lt;/a-plane&gt;</span><br><span class=\"line\">  &lt;a-sky color=\"#ECECEC\"&gt;&lt;/a-sky&gt;</span><br><span class=\"line\">&lt;/a-scene&gt;</span><br></pre></td></tr></table></figure></p>\n<p>简单的js文件引入，标签的建立，就可以实现简单的案例。<br>当然，更多的 <a href=\"https://aframe.io/\" target=\"_blank\" rel=\"noopener\">Demos</a> 演示，还有他们的 <a href=\"https://aframe.io/blog/\" target=\"_blank\" rel=\"noopener\">Blog</a> , 少不了Github <a href=\"https://github.com/aframevr/awesome-aframe\" target=\"_blank\" rel=\"noopener\">Awesome A-Frame</a> .</p>\n<p>如果只是这样完事，那我就没必要搞这个文章了。昨晚到今天上午，萌萌呼呼的总结了点关于 <strong>VR体验环境</strong> 的搭建。下面步入本文的正题。</p>\n<p>e神我最近常用的是mac，于是就啥也没想，一股脑子的就直奔主题，从Mozlia的a-frame文档，追到Oculus Rift(其实追到这里就应该有所察觉了，奈何英文渣，挨个来读介绍 QAQ)。是的，我已经下载了 <a href=\"https://www.mozilla.org/zh-CN/firefox/channel/desktop/#nightly\" target=\"_blank\" rel=\"noopener\">FirefoxNightly</a> ,不知道是哪里的原因，访问Mozlia出奇的慢，google翻的速度还行，70M的dmg愣是耗了一大会儿·(如果需要，联系我，文档下载两不误)。</p>\n<p>一边看文档跟实例，当然这也在 W-A-S-D和上下左右键，空格键结合来体验那些demo，当时我在想着这些用 <strong>css</strong> 和 <strong>javascript</strong> ，即不依赖 Three.js 引入或者是 Aframe.js 就能实现。。你知道的，就去试着做demo，用来一部分css的动画属性。</p>\n<p>没有对比就没有伤害，我果断抛弃了热乎乎刚写的代码，看文档跟体验去了–</p>\n<p>我想说的一句是，当你对一个技术点特别感兴趣的时候，一定不要头脑发热，就好比遇到心仪的女孩子，不要猴急的表白许诺。好好看看文档，比如这一行：<br>  Unfortunately, Mac and Linux are not supported with the Oculus Rift and cannot be used for viewing WebVR content.<br>当时我看到的时候，我已经被VR迷住了，对，就是傻劲，我计划的是把步骤走一遍，然后mac上装个windows系统(没错，Crazy…),要么就是用下 Docker … 当时就是这样想的。</p>\n<p>第二天早早的到了公司，开始谷歌关于A-Frame的现状。Oculus Rift和HTC Vive Pre都相继公布了推荐PC配置，但引起大家好奇的一点就是这些配置都是针对Windows系统电脑的，难道就没有适合苹果Mac电脑的配置吗？Oculus创始人帕莫尔·勒基（Palmer Luckey）表示：苹果电脑的配置太烂了，没法支持VR头盔对PC性能的要求！ 帕莫尔·勒基解释说：“这主要是因为苹果并没有将高端GPU列为优先考虑的配置。你可以花6000美元买一台搭载顶级AMD Fire Pro D700处理器的Mac Pro，但它还是没有达到我们的推荐配置要求。如果他们像以前一样配置更高端的GPU，我们将很乐于为Mac提供支持。但是现在，还没有一台Mac电脑能够支持它，即便我们在软件方面为它提供支持，也没有能够运行大多数VR软件的Mac电脑。”</p>\n<p>人家说的确实没错，苹果电脑采用的显卡性能都不是很理想，在MacBook系列中，也只有顶配的MacBookPro才有独立显卡。目前的VR产品对PC的图形处理有着苛刻的要求，最低显卡都是GTX 970级别的，所以苹果用户没法在第一时间体验到Oculus Rift和HTC Vive了。</p>\n<p>消息是16年3月的。后来据说有个外置显卡的众筹项目，但是最后众筹失败。今年3月份，开发商Cindori推出一款名为VR Desktop for Mac的应用，使得MacOS也可以支持Oculus Rift，20刀，而且仅仅是只能支持 Oculus Rift。没办法，硬件限制，不能真正的支持 VR .</p>\n<p>问题来了，我这低配的mac能跑起来吗？ 笑话。</p>\n<p>果断的，我从书桌底层把布满灰尘的HP笔记本拿出来，这台哥们确实很单纯，重新装的win7，什么都没有。</p>\n<p>于是梯子(现在没有梯子就看不到那些花花世界了)，Git(重要性不言而喻)，Nodejs(这个在这里目前不是必须的，习惯了)，还有win版本的FirefoxNightly，Chromium，我着重去了 <a href=\"https://www.oculus.com\" target=\"_blank\" rel=\"noopener\">Oculus</a> 注册账号，看了下外设，顺便某东某猫上看了下价格。。。</p>\n<p>额，重点在 <a href=\"https://secure.oculus.com/my/rift/\" target=\"_blank\" rel=\"noopener\">这里</a> 了, <strong>Getting Started</strong> part部分，正如你所看到的:</p>\n<ol>\n<li><p>Compatibility tool - Make sure your PC is Oculus ready.</p>\n</li>\n<li><p>Rift Setup Tool - Download Rift’s setup tool to get started in virtual reality.</p>\n</li>\n<li><p>Getting Started Guide - We’ll help you download the Oculus software, unbox your Rift, and personalize it.</p>\n</li>\n<li><p>User Guide - Now that your Rift is all set up, you can download, purchase, and manage games and apps, both in Rift and on your computer’s desktop.</p>\n</li>\n<li><p>Setup Videos - These videos show you how to setup your Rift.</p>\n</li>\n</ol>\n<p>上面的第一点是确保当前PC支持 Oculus Rift，第二点可以理解为VR外设驱动了。两个都是需要墙外去下载的。期间会需要你下载Micsoft的两个补丁(自行百度或者找我要),另外你需要邮箱来注册Oclus账号，因为后续结合设备来配置下参数的。</p>\n<p>在VR配套设施具备后，有这么几个你可能想要体验的：<br><a href=\"https://sketchfab.com/\" target=\"_blank\" rel=\"noopener\">sketchfab</a>   <a href=\"http://vizor.io/\" target=\"_blank\" rel=\"noopener\">vizor</a>   <a href=\"https://webvr.rocks/slack\" target=\"_blank\" rel=\"noopener\">Slack</a><br><a href=\"https://www.beloola.com/\" target=\"_blank\" rel=\"noopener\">beloola</a>   <a href=\"http://vr.chromeexperiments.com/\" target=\"_blank\" rel=\"noopener\">chromeexperiments</a></p>\n<p>最后，想多余一句，如果是 i5 2.7GHz 和6100 1536 MB的mac话，还是换台win机吧，很烫。</p>\n<p>（本文完）</p>"},{"title":"ThreeJS-开篇","date":"2017-03-22T03:20:39.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"3D的世界，多一个维度，多一点欢乐。\n<!-- more -->\n### 不多说的为什么要学，直接开搞\n还是来点前奏吧 [Three.js](https://threejs.org/docs/index.html#Manual/Introduction/Creating_a_scene), 相信看了这个官方API的同学，笼统的风格实在是着急，但也理解，作者精力都放在源码上去了，再说，慕名而来的Threejser们哪个智商低了？哈哈哈\n我准备把看过的关于Threejs的知识跟体会做成一个系列，高手多指点，小白多交流，共同进步。\n<small>ps:评论多说我会抽时间来更换的,目前可以通过邮件 [@eyea](mailto:deyeseau@gmail.com) 联系或者Git[eyea](https://github.com/eyea) </small>\n<small>[源码的学习总是令人兴奋](https://github.com/mrdoob/three.js)</small>\n### ThreeJS三兄弟\n他们分别是 __Scene__ 、 __Camera__ 、 __Renderer__ ,即 场景，相机，渲染器。这三兄弟将会把3D世界搞得有声有色~ 。\n* 场景是用来容纳元素的，比如我们新建一个cube，一条line，一个star，都需要Scene.add()进来才能显示的，定义的size，position等才会有意义；\n* 相机是定义可视区域，能够确定哪些图形元素是可以看得到的；\n* 渲染器是...这个看名字，不多说,其实是代表的是 __canvas__ 标签,现在的版本 __85dev__ 使用的是WebGLRender来渲染的，但是存在有的机器上不支持WebGL.\n\n他们三个创建也很简单，都是THREE.X的实例：\n```javascript\nvar scene   = new THREE.Scene(),\n\tcamera  = new THREE.PerspectiveCamera(),  // 透视相机\n\trenderer= new THREE.WebGLRender();\n\n// threejs提供的相机有正交相机（OrthographicCamera）、透视相机（PerspectiveCamera）、全景相机（CubeCamera）和3D相机（StereoCamera）。\n// 你想看见的元素必须要放在相机可视域中，当创建元素看不到了，检查下相机的 __position__ 、__lookAt(朝向)__ 和创建参数了。当然都是相对的，你也可以调整元素嘛。\n// 多说一句，创建相机都有 __near__ 和 __far__ 两个参数，近值是指立方体离相机最近的点到相机的距离n的范围，远值这是指立方体中心到相机的距离s。\n// 相机大小和渲染器尺寸要相等，否则就会变形，如果你需要失真变形，随意。\n\n// 知道渲染器是canvas标签后，setSize也是可以的\n   renderer.setSize(width, height);\n// 然后放入你指定的元素中\n   ele.appendChild(renderer.domElement);\n```\n下一篇，我们开始相机。\n先看个 [例子](http://threejs-outsidelook.oss-cn-shanghai.aliyuncs.com/r89/source/examples/index.html?q=camera#webgl_camera) 。\n\n#### (To be continued)\n\n\n\n\n\n","source":"_posts/2017-03-23-ThreeJS-开篇.md","raw":"---\ntitle: ThreeJS-开篇\ndate: 2017-03-22 11:20:39\ntags: ['WebGL','ThreeJS']\ncategories: WebGL\nupdated:\n---\n3D的世界，多一个维度，多一点欢乐。\n<!-- more -->\n### 不多说的为什么要学，直接开搞\n还是来点前奏吧 [Three.js](https://threejs.org/docs/index.html#Manual/Introduction/Creating_a_scene), 相信看了这个官方API的同学，笼统的风格实在是着急，但也理解，作者精力都放在源码上去了，再说，慕名而来的Threejser们哪个智商低了？哈哈哈\n我准备把看过的关于Threejs的知识跟体会做成一个系列，高手多指点，小白多交流，共同进步。\n<small>ps:评论多说我会抽时间来更换的,目前可以通过邮件 [@eyea](mailto:deyeseau@gmail.com) 联系或者Git[eyea](https://github.com/eyea) </small>\n<small>[源码的学习总是令人兴奋](https://github.com/mrdoob/three.js)</small>\n### ThreeJS三兄弟\n他们分别是 __Scene__ 、 __Camera__ 、 __Renderer__ ,即 场景，相机，渲染器。这三兄弟将会把3D世界搞得有声有色~ 。\n* 场景是用来容纳元素的，比如我们新建一个cube，一条line，一个star，都需要Scene.add()进来才能显示的，定义的size，position等才会有意义；\n* 相机是定义可视区域，能够确定哪些图形元素是可以看得到的；\n* 渲染器是...这个看名字，不多说,其实是代表的是 __canvas__ 标签,现在的版本 __85dev__ 使用的是WebGLRender来渲染的，但是存在有的机器上不支持WebGL.\n\n他们三个创建也很简单，都是THREE.X的实例：\n```javascript\nvar scene   = new THREE.Scene(),\n\tcamera  = new THREE.PerspectiveCamera(),  // 透视相机\n\trenderer= new THREE.WebGLRender();\n\n// threejs提供的相机有正交相机（OrthographicCamera）、透视相机（PerspectiveCamera）、全景相机（CubeCamera）和3D相机（StereoCamera）。\n// 你想看见的元素必须要放在相机可视域中，当创建元素看不到了，检查下相机的 __position__ 、__lookAt(朝向)__ 和创建参数了。当然都是相对的，你也可以调整元素嘛。\n// 多说一句，创建相机都有 __near__ 和 __far__ 两个参数，近值是指立方体离相机最近的点到相机的距离n的范围，远值这是指立方体中心到相机的距离s。\n// 相机大小和渲染器尺寸要相等，否则就会变形，如果你需要失真变形，随意。\n\n// 知道渲染器是canvas标签后，setSize也是可以的\n   renderer.setSize(width, height);\n// 然后放入你指定的元素中\n   ele.appendChild(renderer.domElement);\n```\n下一篇，我们开始相机。\n先看个 [例子](http://threejs-outsidelook.oss-cn-shanghai.aliyuncs.com/r89/source/examples/index.html?q=camera#webgl_camera) 。\n\n#### (To be continued)\n\n\n\n\n\n","slug":"ThreeJS-开篇","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklm000ebbfyffhdp56z","content":"<p>3D的世界，多一个维度，多一点欢乐。<br><a id=\"more\"></a></p>\n<h3 id=\"不多说的为什么要学，直接开搞\"><a href=\"#不多说的为什么要学，直接开搞\" class=\"headerlink\" title=\"不多说的为什么要学，直接开搞\"></a>不多说的为什么要学，直接开搞</h3><p>还是来点前奏吧 <a href=\"https://threejs.org/docs/index.html#Manual/Introduction/Creating_a_scene\" target=\"_blank\" rel=\"noopener\">Three.js</a>, 相信看了这个官方API的同学，笼统的风格实在是着急，但也理解，作者精力都放在源码上去了，再说，慕名而来的Threejser们哪个智商低了？哈哈哈<br>我准备把看过的关于Threejs的知识跟体会做成一个系列，高手多指点，小白多交流，共同进步。<br><small>ps:评论多说我会抽时间来更换的,目前可以通过邮件 <a href=\"mailto:deyeseau@gmail.com\" target=\"_blank\" rel=\"noopener\">@eyea</a> 联系或者Git<a href=\"https://github.com/eyea\" target=\"_blank\" rel=\"noopener\">eyea</a> </small><br><small><a href=\"https://github.com/mrdoob/three.js\" target=\"_blank\" rel=\"noopener\">源码的学习总是令人兴奋</a></small></p>\n<h3 id=\"ThreeJS三兄弟\"><a href=\"#ThreeJS三兄弟\" class=\"headerlink\" title=\"ThreeJS三兄弟\"></a>ThreeJS三兄弟</h3><p>他们分别是 <strong>Scene</strong> 、 <strong>Camera</strong> 、 <strong>Renderer</strong> ,即 场景，相机，渲染器。这三兄弟将会把3D世界搞得有声有色~ 。</p>\n<ul>\n<li>场景是用来容纳元素的，比如我们新建一个cube，一条line，一个star，都需要Scene.add()进来才能显示的，定义的size，position等才会有意义；</li>\n<li>相机是定义可视区域，能够确定哪些图形元素是可以看得到的；</li>\n<li>渲染器是…这个看名字，不多说,其实是代表的是 <strong>canvas</strong> 标签,现在的版本 <strong>85dev</strong> 使用的是WebGLRender来渲染的，但是存在有的机器上不支持WebGL.</li>\n</ul>\n<p>他们三个创建也很简单，都是THREE.X的实例：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scene   = <span class=\"keyword\">new</span> THREE.Scene(),</span><br><span class=\"line\">\tcamera  = <span class=\"keyword\">new</span> THREE.PerspectiveCamera(),  <span class=\"comment\">// 透视相机</span></span><br><span class=\"line\">\trenderer= <span class=\"keyword\">new</span> THREE.WebGLRender();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// threejs提供的相机有正交相机（OrthographicCamera）、透视相机（PerspectiveCamera）、全景相机（CubeCamera）和3D相机（StereoCamera）。</span></span><br><span class=\"line\"><span class=\"comment\">// 你想看见的元素必须要放在相机可视域中，当创建元素看不到了，检查下相机的 __position__ 、__lookAt(朝向)__ 和创建参数了。当然都是相对的，你也可以调整元素嘛。</span></span><br><span class=\"line\"><span class=\"comment\">// 多说一句，创建相机都有 __near__ 和 __far__ 两个参数，近值是指立方体离相机最近的点到相机的距离n的范围，远值这是指立方体中心到相机的距离s。</span></span><br><span class=\"line\"><span class=\"comment\">// 相机大小和渲染器尺寸要相等，否则就会变形，如果你需要失真变形，随意。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 知道渲染器是canvas标签后，setSize也是可以的</span></span><br><span class=\"line\">   renderer.setSize(width, height);</span><br><span class=\"line\"><span class=\"comment\">// 然后放入你指定的元素中</span></span><br><span class=\"line\">   ele.appendChild(renderer.domElement);</span><br></pre></td></tr></table></figure></p>\n<p>下一篇，我们开始相机。<br>先看个 <a href=\"http://threejs-outsidelook.oss-cn-shanghai.aliyuncs.com/r89/source/examples/index.html?q=camera#webgl_camera\" target=\"_blank\" rel=\"noopener\">例子</a> 。</p>\n<h4 id=\"To-be-continued\"><a href=\"#To-be-continued\" class=\"headerlink\" title=\"(To be continued)\"></a>(To be continued)</h4>","site":{"data":{}},"excerpt":"<p>3D的世界，多一个维度，多一点欢乐。<br>","more":"</p>\n<h3 id=\"不多说的为什么要学，直接开搞\"><a href=\"#不多说的为什么要学，直接开搞\" class=\"headerlink\" title=\"不多说的为什么要学，直接开搞\"></a>不多说的为什么要学，直接开搞</h3><p>还是来点前奏吧 <a href=\"https://threejs.org/docs/index.html#Manual/Introduction/Creating_a_scene\" target=\"_blank\" rel=\"noopener\">Three.js</a>, 相信看了这个官方API的同学，笼统的风格实在是着急，但也理解，作者精力都放在源码上去了，再说，慕名而来的Threejser们哪个智商低了？哈哈哈<br>我准备把看过的关于Threejs的知识跟体会做成一个系列，高手多指点，小白多交流，共同进步。<br><small>ps:评论多说我会抽时间来更换的,目前可以通过邮件 <a href=\"mailto:deyeseau@gmail.com\" target=\"_blank\" rel=\"noopener\">@eyea</a> 联系或者Git<a href=\"https://github.com/eyea\" target=\"_blank\" rel=\"noopener\">eyea</a> </small><br><small><a href=\"https://github.com/mrdoob/three.js\" target=\"_blank\" rel=\"noopener\">源码的学习总是令人兴奋</a></small></p>\n<h3 id=\"ThreeJS三兄弟\"><a href=\"#ThreeJS三兄弟\" class=\"headerlink\" title=\"ThreeJS三兄弟\"></a>ThreeJS三兄弟</h3><p>他们分别是 <strong>Scene</strong> 、 <strong>Camera</strong> 、 <strong>Renderer</strong> ,即 场景，相机，渲染器。这三兄弟将会把3D世界搞得有声有色~ 。</p>\n<ul>\n<li>场景是用来容纳元素的，比如我们新建一个cube，一条line，一个star，都需要Scene.add()进来才能显示的，定义的size，position等才会有意义；</li>\n<li>相机是定义可视区域，能够确定哪些图形元素是可以看得到的；</li>\n<li>渲染器是…这个看名字，不多说,其实是代表的是 <strong>canvas</strong> 标签,现在的版本 <strong>85dev</strong> 使用的是WebGLRender来渲染的，但是存在有的机器上不支持WebGL.</li>\n</ul>\n<p>他们三个创建也很简单，都是THREE.X的实例：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scene   = <span class=\"keyword\">new</span> THREE.Scene(),</span><br><span class=\"line\">\tcamera  = <span class=\"keyword\">new</span> THREE.PerspectiveCamera(),  <span class=\"comment\">// 透视相机</span></span><br><span class=\"line\">\trenderer= <span class=\"keyword\">new</span> THREE.WebGLRender();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// threejs提供的相机有正交相机（OrthographicCamera）、透视相机（PerspectiveCamera）、全景相机（CubeCamera）和3D相机（StereoCamera）。</span></span><br><span class=\"line\"><span class=\"comment\">// 你想看见的元素必须要放在相机可视域中，当创建元素看不到了，检查下相机的 __position__ 、__lookAt(朝向)__ 和创建参数了。当然都是相对的，你也可以调整元素嘛。</span></span><br><span class=\"line\"><span class=\"comment\">// 多说一句，创建相机都有 __near__ 和 __far__ 两个参数，近值是指立方体离相机最近的点到相机的距离n的范围，远值这是指立方体中心到相机的距离s。</span></span><br><span class=\"line\"><span class=\"comment\">// 相机大小和渲染器尺寸要相等，否则就会变形，如果你需要失真变形，随意。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 知道渲染器是canvas标签后，setSize也是可以的</span></span><br><span class=\"line\">   renderer.setSize(width, height);</span><br><span class=\"line\"><span class=\"comment\">// 然后放入你指定的元素中</span></span><br><span class=\"line\">   ele.appendChild(renderer.domElement);</span><br></pre></td></tr></table></figure></p>\n<p>下一篇，我们开始相机。<br>先看个 <a href=\"http://threejs-outsidelook.oss-cn-shanghai.aliyuncs.com/r89/source/examples/index.html?q=camera#webgl_camera\" target=\"_blank\" rel=\"noopener\">例子</a> 。</p>\n<h4 id=\"To-be-continued\"><a href=\"#To-be-continued\" class=\"headerlink\" title=\"(To be continued)\"></a>(To be continued)</h4>"},{"title":"ThreeJS-相机","date":"2017-03-23T04:50:22.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"本篇文章是关于 Three.js 三维空间的观察，相机的概述。\n<!-- more -->\n在Threejs中相机的表示是 __THREE.Camera__，它是相机的抽象基类，其子类有两种相机，分别是正投影相机 __THREE.OrthographicCamera__ 和透视投影相机 __THREE.PerspectiveCamera__ ,区分二者也很简单：透视投影有近大远小的特征，即同一个物体在远处一定是比在近处看的小的。而正投影，学习机械建筑的同学都知道，三视图嘛，远近比例是一致的。\n\n### 透视投影相机\n这是今天主要介绍的对象。从生活经验来说，透视投影是更符合我们视觉的投影。横看成岭侧成峰，远近高低各不同。构造函数如下：\n```javascript\n  PerspectiveCamera( fov, aspect, near, far )\n```\n说明：\n* 1、视角fov：这个官方解释是： <code>Camera frustum vertical field of view, from bottom to top of view, in degrees. Default is 50.</code> 有种理解是：fov代表眼睛睁开的角度,即,视角的大小,如果设置为0,相当你闭上眼睛了,所以什么也看不到,如果为180,那么可以认为你的视界很广阔,但是在180度的时候，往往物体很小，因为他在你的整个可视区域中的比例变小了。另外，人类的正常视角是120度左右，但是要集中注意力看清楚东西，那么眼睛的视角在30-40度比较好。视角越大，中间的物体越小，这是因为，视角越大，看到的场景越大，那么中间的物体相对于整个场景来说，就越小了。\n\n\n* 2、近平面near：近值是指立方体离相机最近的点到相机的距离n的范围。也可以认为是眼睛距离近处的距离，不要设置为负值。\n\n* 3、远平面far：远值这是指立方体中心到相机的距离s。\n\n* 4、纵横比aspect：实际窗口的纵横比，即宽度除以高度。相机大小和渲染器尺寸要相等，否则就会变形，做好自己更改下参数看下效果。\n\n#### (To be continued)\n","source":"_posts/2017-03-23-ThreeJS-相机.md","raw":"---\ntitle: ThreeJS-相机\ndate: 2017-03-23 12:50:22\ntags:\ncategories:\nupdated:\n---\n本篇文章是关于 Three.js 三维空间的观察，相机的概述。\n<!-- more -->\n在Threejs中相机的表示是 __THREE.Camera__，它是相机的抽象基类，其子类有两种相机，分别是正投影相机 __THREE.OrthographicCamera__ 和透视投影相机 __THREE.PerspectiveCamera__ ,区分二者也很简单：透视投影有近大远小的特征，即同一个物体在远处一定是比在近处看的小的。而正投影，学习机械建筑的同学都知道，三视图嘛，远近比例是一致的。\n\n### 透视投影相机\n这是今天主要介绍的对象。从生活经验来说，透视投影是更符合我们视觉的投影。横看成岭侧成峰，远近高低各不同。构造函数如下：\n```javascript\n  PerspectiveCamera( fov, aspect, near, far )\n```\n说明：\n* 1、视角fov：这个官方解释是： <code>Camera frustum vertical field of view, from bottom to top of view, in degrees. Default is 50.</code> 有种理解是：fov代表眼睛睁开的角度,即,视角的大小,如果设置为0,相当你闭上眼睛了,所以什么也看不到,如果为180,那么可以认为你的视界很广阔,但是在180度的时候，往往物体很小，因为他在你的整个可视区域中的比例变小了。另外，人类的正常视角是120度左右，但是要集中注意力看清楚东西，那么眼睛的视角在30-40度比较好。视角越大，中间的物体越小，这是因为，视角越大，看到的场景越大，那么中间的物体相对于整个场景来说，就越小了。\n\n\n* 2、近平面near：近值是指立方体离相机最近的点到相机的距离n的范围。也可以认为是眼睛距离近处的距离，不要设置为负值。\n\n* 3、远平面far：远值这是指立方体中心到相机的距离s。\n\n* 4、纵横比aspect：实际窗口的纵横比，即宽度除以高度。相机大小和渲染器尺寸要相等，否则就会变形，做好自己更改下参数看下效果。\n\n#### (To be continued)\n","slug":"ThreeJS-相机","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklp000ibbfylya8k8to","content":"<p>本篇文章是关于 Three.js 三维空间的观察，相机的概述。<br><a id=\"more\"></a><br>在Threejs中相机的表示是 <strong>THREE.Camera</strong>，它是相机的抽象基类，其子类有两种相机，分别是正投影相机 <strong>THREE.OrthographicCamera</strong> 和透视投影相机 <strong>THREE.PerspectiveCamera</strong> ,区分二者也很简单：透视投影有近大远小的特征，即同一个物体在远处一定是比在近处看的小的。而正投影，学习机械建筑的同学都知道，三视图嘛，远近比例是一致的。</p>\n<h3 id=\"透视投影相机\"><a href=\"#透视投影相机\" class=\"headerlink\" title=\"透视投影相机\"></a>透视投影相机</h3><p>这是今天主要介绍的对象。从生活经验来说，透视投影是更符合我们视觉的投影。横看成岭侧成峰，远近高低各不同。构造函数如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PerspectiveCamera( fov, aspect, near, far )</span><br></pre></td></tr></table></figure></p>\n<p>说明：</p>\n<ul>\n<li>1、视角fov：这个官方解释是： <code>Camera frustum vertical field of view, from bottom to top of view, in degrees. Default is 50.</code> 有种理解是：fov代表眼睛睁开的角度,即,视角的大小,如果设置为0,相当你闭上眼睛了,所以什么也看不到,如果为180,那么可以认为你的视界很广阔,但是在180度的时候，往往物体很小，因为他在你的整个可视区域中的比例变小了。另外，人类的正常视角是120度左右，但是要集中注意力看清楚东西，那么眼睛的视角在30-40度比较好。视角越大，中间的物体越小，这是因为，视角越大，看到的场景越大，那么中间的物体相对于整个场景来说，就越小了。</li>\n</ul>\n<ul>\n<li><p>2、近平面near：近值是指立方体离相机最近的点到相机的距离n的范围。也可以认为是眼睛距离近处的距离，不要设置为负值。</p>\n</li>\n<li><p>3、远平面far：远值这是指立方体中心到相机的距离s。</p>\n</li>\n<li><p>4、纵横比aspect：实际窗口的纵横比，即宽度除以高度。相机大小和渲染器尺寸要相等，否则就会变形，做好自己更改下参数看下效果。</p>\n</li>\n</ul>\n<h4 id=\"To-be-continued\"><a href=\"#To-be-continued\" class=\"headerlink\" title=\"(To be continued)\"></a>(To be continued)</h4>","site":{"data":{}},"excerpt":"<p>本篇文章是关于 Three.js 三维空间的观察，相机的概述。<br>","more":"<br>在Threejs中相机的表示是 <strong>THREE.Camera</strong>，它是相机的抽象基类，其子类有两种相机，分别是正投影相机 <strong>THREE.OrthographicCamera</strong> 和透视投影相机 <strong>THREE.PerspectiveCamera</strong> ,区分二者也很简单：透视投影有近大远小的特征，即同一个物体在远处一定是比在近处看的小的。而正投影，学习机械建筑的同学都知道，三视图嘛，远近比例是一致的。</p>\n<h3 id=\"透视投影相机\"><a href=\"#透视投影相机\" class=\"headerlink\" title=\"透视投影相机\"></a>透视投影相机</h3><p>这是今天主要介绍的对象。从生活经验来说，透视投影是更符合我们视觉的投影。横看成岭侧成峰，远近高低各不同。构造函数如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PerspectiveCamera( fov, aspect, near, far )</span><br></pre></td></tr></table></figure></p>\n<p>说明：</p>\n<ul>\n<li>1、视角fov：这个官方解释是： <code>Camera frustum vertical field of view, from bottom to top of view, in degrees. Default is 50.</code> 有种理解是：fov代表眼睛睁开的角度,即,视角的大小,如果设置为0,相当你闭上眼睛了,所以什么也看不到,如果为180,那么可以认为你的视界很广阔,但是在180度的时候，往往物体很小，因为他在你的整个可视区域中的比例变小了。另外，人类的正常视角是120度左右，但是要集中注意力看清楚东西，那么眼睛的视角在30-40度比较好。视角越大，中间的物体越小，这是因为，视角越大，看到的场景越大，那么中间的物体相对于整个场景来说，就越小了。</li>\n</ul>\n<ul>\n<li><p>2、近平面near：近值是指立方体离相机最近的点到相机的距离n的范围。也可以认为是眼睛距离近处的距离，不要设置为负值。</p>\n</li>\n<li><p>3、远平面far：远值这是指立方体中心到相机的距离s。</p>\n</li>\n<li><p>4、纵横比aspect：实际窗口的纵横比，即宽度除以高度。相机大小和渲染器尺寸要相等，否则就会变形，做好自己更改下参数看下效果。</p>\n</li>\n</ul>\n<h4 id=\"To-be-continued\"><a href=\"#To-be-continued\" class=\"headerlink\" title=\"(To be continued)\"></a>(To be continued)</h4>"},{"title":"移动端适配方案一","date":"2017-03-29T07:28:12.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"现在我们不谈PC，只聊移动端适配那些事儿。\n> 不管是知道还是不知道，开发工具能够说明很多很多 \n\n<!-- more -->\n看到这里时候，最好带上笔和纸，勾勾画画，或者打开控制台，切换成手机模式，<strong>just coding !</strong> 从而形成一个大概的模型，方便理解。\n理解适配，先从两个概念入手：视口 和 像素\n### 视口\n视口分为 布局视口 和 视觉视口。\n#### 1.布局视口\n<code> document.documentElement.clientWidth/Height</code> 返回布局视口的尺寸。\n在移动端，布局视口(布局视口一般是980px)和屏幕宽度是完全独立的，他是由浏览器厂商来确定的视口(一般在768px~1024px之间)，为了让网页在窄屏幕上也能显示完整。\n我们使用meta标签的 __meta__ 和 __媒体查询__ 指的都是 布局视口。\n```javascript\n<meta name='viewport' content='width=640'>\n@media (min-width: 640px){\n\tfont-size: 16px;\n}\n```\n#### 2.视觉视口\n<code>window.innerWidth/Height</code> 返回视觉视口的尺寸，指我们正在看到的网页的区域。\n这里需要补充的一点是有个 __理想视口__ 的概念，对设备来讲是最理想的视口尺寸，即用户不需要额外的操作成本(缩放),即可获得最佳的查看网页外观效果。通常我们通过这样设定：\n```javascript\n<meta name='viewport' content='width=device-width initial-scale=1'>\n/*这里的initial-scale=1和width=device-width是一样的效果，\n兼容initial-scale，它会将布局视口也同步为缩放后的尺寸\ninitial-scale=1 解决了 iphone、ipad的毛病，\nwidth=device-width则解决了IE的毛病\n*/\n```\n让布局视口和设备理想尺寸宽度上保持一致。\n\n### 像素\n像素分为 设备像素 和 css像素\n#### 1.设备像素\n屏幕的物理像素，对特定的设备来说，该值是固定不变的。\n#### 2.css像素\n也可以称为设备独立像素。js和css中一个抽象概念，单位px。\n当我们给一个 __div__ 元素设置样式 __width:10px__ 那么该元素实际的大小是多少呢？\n在移动设备上，一个元素的实际大小有这么两个因子影响着：是否缩放(initial-scale) 、屏幕的分辨率。\n我们知道了缩放是相对于布局视口来进行的。当在 dpr=2的并且放大2倍的设备上来说， 10px 表现为 40px(10px*2*2)。\n我们定义的是css像素，然后浏览器内部会转换成对应多少设备像素来展示出来。\n这里引入一个 <strong>设备像素比(device pixel ratio)</strong> 即 __dpr__ 。\n```javascript\ndpr = 设备像素/css像素\n/*设备像素比也可以*/\ndpr = 屏幕横向设备像素/理想视口宽度\n```\n可以通过 <code>window.devicePixelRatio</code> 来得到该值。\n通过devicePixelRatio，我们可以知道该设备上一个css像素代表多少个物理像素。\n在不缩放前提下，1px*1px的元素在dpr=2上使用了2*2个设备像素，在dpr=3的设备上使用了3*3个设备像素，同样面积(1px*1px)的区域使用的设备像素越多，就显示的越清晰。\n\n\n### 参考文章\n[@riskers 移动端适配方案(上)](https://github.com/riskers/blog/issues/17)","source":"_posts/2017-03-29-移动端适配方案一.md","raw":"---\ntitle: 移动端适配方案一\ndate: 2017-03-29 15:28:12\ntags: \"移动端\"\ncategories: \"mobile\"\nupdated:\n---\n现在我们不谈PC，只聊移动端适配那些事儿。\n> 不管是知道还是不知道，开发工具能够说明很多很多 \n\n<!-- more -->\n看到这里时候，最好带上笔和纸，勾勾画画，或者打开控制台，切换成手机模式，<strong>just coding !</strong> 从而形成一个大概的模型，方便理解。\n理解适配，先从两个概念入手：视口 和 像素\n### 视口\n视口分为 布局视口 和 视觉视口。\n#### 1.布局视口\n<code> document.documentElement.clientWidth/Height</code> 返回布局视口的尺寸。\n在移动端，布局视口(布局视口一般是980px)和屏幕宽度是完全独立的，他是由浏览器厂商来确定的视口(一般在768px~1024px之间)，为了让网页在窄屏幕上也能显示完整。\n我们使用meta标签的 __meta__ 和 __媒体查询__ 指的都是 布局视口。\n```javascript\n<meta name='viewport' content='width=640'>\n@media (min-width: 640px){\n\tfont-size: 16px;\n}\n```\n#### 2.视觉视口\n<code>window.innerWidth/Height</code> 返回视觉视口的尺寸，指我们正在看到的网页的区域。\n这里需要补充的一点是有个 __理想视口__ 的概念，对设备来讲是最理想的视口尺寸，即用户不需要额外的操作成本(缩放),即可获得最佳的查看网页外观效果。通常我们通过这样设定：\n```javascript\n<meta name='viewport' content='width=device-width initial-scale=1'>\n/*这里的initial-scale=1和width=device-width是一样的效果，\n兼容initial-scale，它会将布局视口也同步为缩放后的尺寸\ninitial-scale=1 解决了 iphone、ipad的毛病，\nwidth=device-width则解决了IE的毛病\n*/\n```\n让布局视口和设备理想尺寸宽度上保持一致。\n\n### 像素\n像素分为 设备像素 和 css像素\n#### 1.设备像素\n屏幕的物理像素，对特定的设备来说，该值是固定不变的。\n#### 2.css像素\n也可以称为设备独立像素。js和css中一个抽象概念，单位px。\n当我们给一个 __div__ 元素设置样式 __width:10px__ 那么该元素实际的大小是多少呢？\n在移动设备上，一个元素的实际大小有这么两个因子影响着：是否缩放(initial-scale) 、屏幕的分辨率。\n我们知道了缩放是相对于布局视口来进行的。当在 dpr=2的并且放大2倍的设备上来说， 10px 表现为 40px(10px*2*2)。\n我们定义的是css像素，然后浏览器内部会转换成对应多少设备像素来展示出来。\n这里引入一个 <strong>设备像素比(device pixel ratio)</strong> 即 __dpr__ 。\n```javascript\ndpr = 设备像素/css像素\n/*设备像素比也可以*/\ndpr = 屏幕横向设备像素/理想视口宽度\n```\n可以通过 <code>window.devicePixelRatio</code> 来得到该值。\n通过devicePixelRatio，我们可以知道该设备上一个css像素代表多少个物理像素。\n在不缩放前提下，1px*1px的元素在dpr=2上使用了2*2个设备像素，在dpr=3的设备上使用了3*3个设备像素，同样面积(1px*1px)的区域使用的设备像素越多，就显示的越清晰。\n\n\n### 参考文章\n[@riskers 移动端适配方案(上)](https://github.com/riskers/blog/issues/17)","slug":"移动端适配方案一","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklq000kbbfyhsrrfsib","content":"<p>现在我们不谈PC，只聊移动端适配那些事儿。</p>\n<blockquote>\n<p>不管是知道还是不知道，开发工具能够说明很多很多 </p>\n</blockquote>\n<a id=\"more\"></a>\n<p>看到这里时候，最好带上笔和纸，勾勾画画，或者打开控制台，切换成手机模式，<strong>just coding !</strong> 从而形成一个大概的模型，方便理解。<br>理解适配，先从两个概念入手：视口 和 像素</p>\n<h3 id=\"视口\"><a href=\"#视口\" class=\"headerlink\" title=\"视口\"></a>视口</h3><p>视口分为 布局视口 和 视觉视口。</p>\n<h4 id=\"1-布局视口\"><a href=\"#1-布局视口\" class=\"headerlink\" title=\"1.布局视口\"></a>1.布局视口</h4><p><code> document.documentElement.clientWidth/Height</code> 返回布局视口的尺寸。<br>在移动端，布局视口(布局视口一般是980px)和屏幕宽度是完全独立的，他是由浏览器厂商来确定的视口(一般在768px~1024px之间)，为了让网页在窄屏幕上也能显示完整。<br>我们使用meta标签的 <strong>meta</strong> 和 <strong>媒体查询</strong> 指的都是 布局视口。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">'viewport'</span> content=<span class=\"string\">'width=640'</span>&gt;</span><br><span class=\"line\">@media (min-width: <span class=\"number\">640</span>px)&#123;</span><br><span class=\"line\">\tfont-size: <span class=\"number\">16</span>px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-视觉视口\"><a href=\"#2-视觉视口\" class=\"headerlink\" title=\"2.视觉视口\"></a>2.视觉视口</h4><p><code>window.innerWidth/Height</code> 返回视觉视口的尺寸，指我们正在看到的网页的区域。<br>这里需要补充的一点是有个 <strong>理想视口</strong> 的概念，对设备来讲是最理想的视口尺寸，即用户不需要额外的操作成本(缩放),即可获得最佳的查看网页外观效果。通常我们通过这样设定：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">'viewport'</span> content=<span class=\"string\">'width=device-width initial-scale=1'</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">/*这里的initial-scale=1和width=device-width是一样的效果，</span></span><br><span class=\"line\"><span class=\"comment\">兼容initial-scale，它会将布局视口也同步为缩放后的尺寸</span></span><br><span class=\"line\"><span class=\"comment\">initial-scale=1 解决了 iphone、ipad的毛病，</span></span><br><span class=\"line\"><span class=\"comment\">width=device-width则解决了IE的毛病</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></p>\n<p>让布局视口和设备理想尺寸宽度上保持一致。</p>\n<h3 id=\"像素\"><a href=\"#像素\" class=\"headerlink\" title=\"像素\"></a>像素</h3><p>像素分为 设备像素 和 css像素</p>\n<h4 id=\"1-设备像素\"><a href=\"#1-设备像素\" class=\"headerlink\" title=\"1.设备像素\"></a>1.设备像素</h4><p>屏幕的物理像素，对特定的设备来说，该值是固定不变的。</p>\n<h4 id=\"2-css像素\"><a href=\"#2-css像素\" class=\"headerlink\" title=\"2.css像素\"></a>2.css像素</h4><p>也可以称为设备独立像素。js和css中一个抽象概念，单位px。<br>当我们给一个 <strong>div</strong> 元素设置样式 <strong>width:10px</strong> 那么该元素实际的大小是多少呢？<br>在移动设备上，一个元素的实际大小有这么两个因子影响着：是否缩放(initial-scale) 、屏幕的分辨率。<br>我们知道了缩放是相对于布局视口来进行的。当在 dpr=2的并且放大2倍的设备上来说， 10px 表现为 40px(10px<em>2</em>2)。<br>我们定义的是css像素，然后浏览器内部会转换成对应多少设备像素来展示出来。<br>这里引入一个 <strong>设备像素比(device pixel ratio)</strong> 即 <strong>dpr</strong> 。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpr = 设备像素/css像素</span><br><span class=\"line\"><span class=\"comment\">/*设备像素比也可以*/</span></span><br><span class=\"line\">dpr = 屏幕横向设备像素/理想视口宽度</span><br></pre></td></tr></table></figure></p>\n<p>可以通过 <code>window.devicePixelRatio</code> 来得到该值。<br>通过devicePixelRatio，我们可以知道该设备上一个css像素代表多少个物理像素。<br>在不缩放前提下，1px<em>1px的元素在dpr=2上使用了2</em>2个设备像素，在dpr=3的设备上使用了3<em>3个设备像素，同样面积(1px</em>1px)的区域使用的设备像素越多，就显示的越清晰。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p><a href=\"https://github.com/riskers/blog/issues/17\" target=\"_blank\" rel=\"noopener\">@riskers 移动端适配方案(上)</a></p>\n","site":{"data":{}},"excerpt":"<p>现在我们不谈PC，只聊移动端适配那些事儿。</p>\n<blockquote>\n<p>不管是知道还是不知道，开发工具能够说明很多很多 </p>\n</blockquote>","more":"<p>看到这里时候，最好带上笔和纸，勾勾画画，或者打开控制台，切换成手机模式，<strong>just coding !</strong> 从而形成一个大概的模型，方便理解。<br>理解适配，先从两个概念入手：视口 和 像素</p>\n<h3 id=\"视口\"><a href=\"#视口\" class=\"headerlink\" title=\"视口\"></a>视口</h3><p>视口分为 布局视口 和 视觉视口。</p>\n<h4 id=\"1-布局视口\"><a href=\"#1-布局视口\" class=\"headerlink\" title=\"1.布局视口\"></a>1.布局视口</h4><p><code> document.documentElement.clientWidth/Height</code> 返回布局视口的尺寸。<br>在移动端，布局视口(布局视口一般是980px)和屏幕宽度是完全独立的，他是由浏览器厂商来确定的视口(一般在768px~1024px之间)，为了让网页在窄屏幕上也能显示完整。<br>我们使用meta标签的 <strong>meta</strong> 和 <strong>媒体查询</strong> 指的都是 布局视口。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">'viewport'</span> content=<span class=\"string\">'width=640'</span>&gt;</span><br><span class=\"line\">@media (min-width: <span class=\"number\">640</span>px)&#123;</span><br><span class=\"line\">\tfont-size: <span class=\"number\">16</span>px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-视觉视口\"><a href=\"#2-视觉视口\" class=\"headerlink\" title=\"2.视觉视口\"></a>2.视觉视口</h4><p><code>window.innerWidth/Height</code> 返回视觉视口的尺寸，指我们正在看到的网页的区域。<br>这里需要补充的一点是有个 <strong>理想视口</strong> 的概念，对设备来讲是最理想的视口尺寸，即用户不需要额外的操作成本(缩放),即可获得最佳的查看网页外观效果。通常我们通过这样设定：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">'viewport'</span> content=<span class=\"string\">'width=device-width initial-scale=1'</span>&gt;</span><br><span class=\"line\"><span class=\"comment\">/*这里的initial-scale=1和width=device-width是一样的效果，</span></span><br><span class=\"line\"><span class=\"comment\">兼容initial-scale，它会将布局视口也同步为缩放后的尺寸</span></span><br><span class=\"line\"><span class=\"comment\">initial-scale=1 解决了 iphone、ipad的毛病，</span></span><br><span class=\"line\"><span class=\"comment\">width=device-width则解决了IE的毛病</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure></p>\n<p>让布局视口和设备理想尺寸宽度上保持一致。</p>\n<h3 id=\"像素\"><a href=\"#像素\" class=\"headerlink\" title=\"像素\"></a>像素</h3><p>像素分为 设备像素 和 css像素</p>\n<h4 id=\"1-设备像素\"><a href=\"#1-设备像素\" class=\"headerlink\" title=\"1.设备像素\"></a>1.设备像素</h4><p>屏幕的物理像素，对特定的设备来说，该值是固定不变的。</p>\n<h4 id=\"2-css像素\"><a href=\"#2-css像素\" class=\"headerlink\" title=\"2.css像素\"></a>2.css像素</h4><p>也可以称为设备独立像素。js和css中一个抽象概念，单位px。<br>当我们给一个 <strong>div</strong> 元素设置样式 <strong>width:10px</strong> 那么该元素实际的大小是多少呢？<br>在移动设备上，一个元素的实际大小有这么两个因子影响着：是否缩放(initial-scale) 、屏幕的分辨率。<br>我们知道了缩放是相对于布局视口来进行的。当在 dpr=2的并且放大2倍的设备上来说， 10px 表现为 40px(10px<em>2</em>2)。<br>我们定义的是css像素，然后浏览器内部会转换成对应多少设备像素来展示出来。<br>这里引入一个 <strong>设备像素比(device pixel ratio)</strong> 即 <strong>dpr</strong> 。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpr = 设备像素/css像素</span><br><span class=\"line\"><span class=\"comment\">/*设备像素比也可以*/</span></span><br><span class=\"line\">dpr = 屏幕横向设备像素/理想视口宽度</span><br></pre></td></tr></table></figure></p>\n<p>可以通过 <code>window.devicePixelRatio</code> 来得到该值。<br>通过devicePixelRatio，我们可以知道该设备上一个css像素代表多少个物理像素。<br>在不缩放前提下，1px<em>1px的元素在dpr=2上使用了2</em>2个设备像素，在dpr=3的设备上使用了3<em>3个设备像素，同样面积(1px</em>1px)的区域使用的设备像素越多，就显示的越清晰。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p><a href=\"https://github.com/riskers/blog/issues/17\" target=\"_blank\" rel=\"noopener\">@riskers 移动端适配方案(上)</a></p>"},{"title":"移动端适配方案二","date":"2017-03-30T02:02:10.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"续上篇 [移动端适配方案一](http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/) ，了解了关于 视口 和 像素 之后，我们继续关于适配。\n> 适配的一切，都要忠于设计稿。\n\n<!-- more -->\n### 我只讲我用过的\n<strong>rem布局方案</strong> 登场，目前我采用的方案是这样的(如无特别说明，以下的尺寸均是指宽度):\n\n1.已经和设计师沟通好设计稿的尺寸为750px；\n2.前端这里以375px的6为依据(初始化宽度)，初始化html的fontSize为100px(方便计算)，采用理想视口：\n```javascript\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n```\n看着很暴力，嗯。。。对。。。\n依旧举个例子，设计稿上一个元素的尺寸是16px；那么在生成过程中，我们会转化成0.08rem；\n以上，便是适配的过程。\n\n### 用过的要思考\n当我们通过一个简单的操作就可以把产品推送到百万级的用户面前的时候，应该体会到的是，科技赐予我们的力量。\n下面分析下上述原理。\n所有的假设都会有一个前提，这里的前提，忘记了往上看。\n如果你跟设计师沟通好了，恰好跟我的情况一致，那恭喜，方案伸手即可用；如果是别的640，甚至是1242的，那么继续往下看。\n针对6的，我们解决了，那么如果是6plus、4的呢 [给你瞅个眼花缭乱的](http://screensiz.es/phone) 。\n这里我们加了段js，用来响应不同尺寸的屏幕对应的根元素基准值，大概意思是这样的：\n\n```javascript\nvar initWidth = 375,\n    initSize  = 100,\n    w         = window.innerWidth,\n    fixScreen = w/initWidth*initSize;\ndocument.documentElement.style.fontSize = fixScreen + \"px\";\n```\n适配？交给js去吧，静态部分只需计算好设计稿的尺寸跟对应的css像素，别的dpr，ppi，lpi，视觉视口，理想视口，布局视口...bye\n### 说我想说的\n理论部分，目前确实不擅长，各种名词和之间的逻辑关系。理解之后，我只用自己熟悉的语言来描述出来，加深记忆的同时，或许会帮助一些人。\n强烈建议看上一篇 [移动端适配方案一](http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/) ，我开始继续逼逼。\n\n这里我们可以假设dpr铺满“布局视口”的每一个像素点，那么也就是说此时的“布局视口”就是理想视口，就是视觉视口，简单理解就是1px=1dpr。\n\n但是移动设备(这里主要是手机，pad等)，往往不能给我们展示出真正的布局视口，所以需要适配。也就类似在清明上河图上显示出北宋汴京社会全貌。\n同样是表示卖菜的商贩，图纸上可能就是一个点，而社会上可能就是一大片区域，区别就在于资源的限制。如果想要在视觉视口上表示出布局视口的所有内容，那么肯定的一点就是单位面积上可用来表示元素的资源密集了，轮廓我们就可以按照比例放小点了，因为他也可以表示的很清楚，丝毫不逊于布局视口的展现。\n\n所给图纸的大小不一样，我们就需要不同的适配，用来表现同样的东西。\n\n清明上河图只有一份，在故宫放着。一个团队开发的标准也只有一个，上面方案就是一个标准，然后不同画布我们根据标准来等比缩放，那么同样的数字和单位的结合，在不同的图纸上，表示的大小就可能会不一样，在A4上可能是16px，那么在A2图纸上可能就是32px，因为可用资源增多了嘛。\n\n回过神来，设计稿是按照750px来设计的，元素是16px，那么设计师想要表达的是在750px的设备上展现的尺寸就是16个物理像素，在PC端，因为布局视口和视觉视口是一致的，我们不用适配，在移动端，不要高兴太早。\n同样表示的16个像素点，在6的375px下，表示设计稿元素同样的尺寸，因为其dpr为2，也就是说每个css像素，可以表示尺寸2个物理像素，所有自然而然的css像素就是8px了，没毛病。\n\n这就是跟设计师沟通达成一致后的方案，皆大欢喜。\n\n总结一下，我们确定基准6，然后结合 __meta__ 和 __javascript__ ，前者锁定理想视口，后者响应设备，重置根元素基准值。相关代码在来一遍：\n```javascript\n<meta name='viewport' content='width=device-width,initial-scale=1,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no'>\nvar initWidth = 375,\n    initSize  = 100,\n    w         = window.innerWidth,\n    fixScreen = w/initWidth*initSize;\ndocument.documentElement.style.fontSize = fixScreen + \"px\";\n```\n\n（本文完）\n","source":"_posts/2017-03-30-移动端适配方案二.md","raw":"---\ntitle: 移动端适配方案二\ndate: 2017-03-30 10:02:10\ntags: \"移动端\"\ncategories: \"mobile\"\nupdated:\n---\n续上篇 [移动端适配方案一](http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/) ，了解了关于 视口 和 像素 之后，我们继续关于适配。\n> 适配的一切，都要忠于设计稿。\n\n<!-- more -->\n### 我只讲我用过的\n<strong>rem布局方案</strong> 登场，目前我采用的方案是这样的(如无特别说明，以下的尺寸均是指宽度):\n\n1.已经和设计师沟通好设计稿的尺寸为750px；\n2.前端这里以375px的6为依据(初始化宽度)，初始化html的fontSize为100px(方便计算)，采用理想视口：\n```javascript\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n```\n看着很暴力，嗯。。。对。。。\n依旧举个例子，设计稿上一个元素的尺寸是16px；那么在生成过程中，我们会转化成0.08rem；\n以上，便是适配的过程。\n\n### 用过的要思考\n当我们通过一个简单的操作就可以把产品推送到百万级的用户面前的时候，应该体会到的是，科技赐予我们的力量。\n下面分析下上述原理。\n所有的假设都会有一个前提，这里的前提，忘记了往上看。\n如果你跟设计师沟通好了，恰好跟我的情况一致，那恭喜，方案伸手即可用；如果是别的640，甚至是1242的，那么继续往下看。\n针对6的，我们解决了，那么如果是6plus、4的呢 [给你瞅个眼花缭乱的](http://screensiz.es/phone) 。\n这里我们加了段js，用来响应不同尺寸的屏幕对应的根元素基准值，大概意思是这样的：\n\n```javascript\nvar initWidth = 375,\n    initSize  = 100,\n    w         = window.innerWidth,\n    fixScreen = w/initWidth*initSize;\ndocument.documentElement.style.fontSize = fixScreen + \"px\";\n```\n适配？交给js去吧，静态部分只需计算好设计稿的尺寸跟对应的css像素，别的dpr，ppi，lpi，视觉视口，理想视口，布局视口...bye\n### 说我想说的\n理论部分，目前确实不擅长，各种名词和之间的逻辑关系。理解之后，我只用自己熟悉的语言来描述出来，加深记忆的同时，或许会帮助一些人。\n强烈建议看上一篇 [移动端适配方案一](http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/) ，我开始继续逼逼。\n\n这里我们可以假设dpr铺满“布局视口”的每一个像素点，那么也就是说此时的“布局视口”就是理想视口，就是视觉视口，简单理解就是1px=1dpr。\n\n但是移动设备(这里主要是手机，pad等)，往往不能给我们展示出真正的布局视口，所以需要适配。也就类似在清明上河图上显示出北宋汴京社会全貌。\n同样是表示卖菜的商贩，图纸上可能就是一个点，而社会上可能就是一大片区域，区别就在于资源的限制。如果想要在视觉视口上表示出布局视口的所有内容，那么肯定的一点就是单位面积上可用来表示元素的资源密集了，轮廓我们就可以按照比例放小点了，因为他也可以表示的很清楚，丝毫不逊于布局视口的展现。\n\n所给图纸的大小不一样，我们就需要不同的适配，用来表现同样的东西。\n\n清明上河图只有一份，在故宫放着。一个团队开发的标准也只有一个，上面方案就是一个标准，然后不同画布我们根据标准来等比缩放，那么同样的数字和单位的结合，在不同的图纸上，表示的大小就可能会不一样，在A4上可能是16px，那么在A2图纸上可能就是32px，因为可用资源增多了嘛。\n\n回过神来，设计稿是按照750px来设计的，元素是16px，那么设计师想要表达的是在750px的设备上展现的尺寸就是16个物理像素，在PC端，因为布局视口和视觉视口是一致的，我们不用适配，在移动端，不要高兴太早。\n同样表示的16个像素点，在6的375px下，表示设计稿元素同样的尺寸，因为其dpr为2，也就是说每个css像素，可以表示尺寸2个物理像素，所有自然而然的css像素就是8px了，没毛病。\n\n这就是跟设计师沟通达成一致后的方案，皆大欢喜。\n\n总结一下，我们确定基准6，然后结合 __meta__ 和 __javascript__ ，前者锁定理想视口，后者响应设备，重置根元素基准值。相关代码在来一遍：\n```javascript\n<meta name='viewport' content='width=device-width,initial-scale=1,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no'>\nvar initWidth = 375,\n    initSize  = 100,\n    w         = window.innerWidth,\n    fixScreen = w/initWidth*initSize;\ndocument.documentElement.style.fontSize = fixScreen + \"px\";\n```\n\n（本文完）\n","slug":"移动端适配方案二","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklt000obbfywqme5mox","content":"<p>续上篇 <a href=\"http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/\" target=\"_blank\" rel=\"noopener\">移动端适配方案一</a> ，了解了关于 视口 和 像素 之后，我们继续关于适配。</p>\n<blockquote>\n<p>适配的一切，都要忠于设计稿。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"我只讲我用过的\"><a href=\"#我只讲我用过的\" class=\"headerlink\" title=\"我只讲我用过的\"></a>我只讲我用过的</h3><p><strong>rem布局方案</strong> 登场，目前我采用的方案是这样的(如无特别说明，以下的尺寸均是指宽度):</p>\n<p>1.已经和设计师沟通好设计稿的尺寸为750px；<br>2.前端这里以375px的6为依据(初始化宽度)，初始化html的fontSize为100px(方便计算)，采用理想视口：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,initial-scale=1\"</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<p>看着很暴力，嗯。。。对。。。<br>依旧举个例子，设计稿上一个元素的尺寸是16px；那么在生成过程中，我们会转化成0.08rem；<br>以上，便是适配的过程。</p>\n<h3 id=\"用过的要思考\"><a href=\"#用过的要思考\" class=\"headerlink\" title=\"用过的要思考\"></a>用过的要思考</h3><p>当我们通过一个简单的操作就可以把产品推送到百万级的用户面前的时候，应该体会到的是，科技赐予我们的力量。<br>下面分析下上述原理。<br>所有的假设都会有一个前提，这里的前提，忘记了往上看。<br>如果你跟设计师沟通好了，恰好跟我的情况一致，那恭喜，方案伸手即可用；如果是别的640，甚至是1242的，那么继续往下看。<br>针对6的，我们解决了，那么如果是6plus、4的呢 <a href=\"http://screensiz.es/phone\" target=\"_blank\" rel=\"noopener\">给你瞅个眼花缭乱的</a> 。<br>这里我们加了段js，用来响应不同尺寸的屏幕对应的根元素基准值，大概意思是这样的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> initWidth = <span class=\"number\">375</span>,</span><br><span class=\"line\">    initSize  = <span class=\"number\">100</span>,</span><br><span class=\"line\">    w         = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\">    fixScreen = w/initWidth*initSize;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.documentElement.style.fontSize = fixScreen + <span class=\"string\">\"px\"</span>;</span><br></pre></td></tr></table></figure>\n<p>适配？交给js去吧，静态部分只需计算好设计稿的尺寸跟对应的css像素，别的dpr，ppi，lpi，视觉视口，理想视口，布局视口…bye</p>\n<h3 id=\"说我想说的\"><a href=\"#说我想说的\" class=\"headerlink\" title=\"说我想说的\"></a>说我想说的</h3><p>理论部分，目前确实不擅长，各种名词和之间的逻辑关系。理解之后，我只用自己熟悉的语言来描述出来，加深记忆的同时，或许会帮助一些人。<br>强烈建议看上一篇 <a href=\"http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/\" target=\"_blank\" rel=\"noopener\">移动端适配方案一</a> ，我开始继续逼逼。</p>\n<p>这里我们可以假设dpr铺满“布局视口”的每一个像素点，那么也就是说此时的“布局视口”就是理想视口，就是视觉视口，简单理解就是1px=1dpr。</p>\n<p>但是移动设备(这里主要是手机，pad等)，往往不能给我们展示出真正的布局视口，所以需要适配。也就类似在清明上河图上显示出北宋汴京社会全貌。<br>同样是表示卖菜的商贩，图纸上可能就是一个点，而社会上可能就是一大片区域，区别就在于资源的限制。如果想要在视觉视口上表示出布局视口的所有内容，那么肯定的一点就是单位面积上可用来表示元素的资源密集了，轮廓我们就可以按照比例放小点了，因为他也可以表示的很清楚，丝毫不逊于布局视口的展现。</p>\n<p>所给图纸的大小不一样，我们就需要不同的适配，用来表现同样的东西。</p>\n<p>清明上河图只有一份，在故宫放着。一个团队开发的标准也只有一个，上面方案就是一个标准，然后不同画布我们根据标准来等比缩放，那么同样的数字和单位的结合，在不同的图纸上，表示的大小就可能会不一样，在A4上可能是16px，那么在A2图纸上可能就是32px，因为可用资源增多了嘛。</p>\n<p>回过神来，设计稿是按照750px来设计的，元素是16px，那么设计师想要表达的是在750px的设备上展现的尺寸就是16个物理像素，在PC端，因为布局视口和视觉视口是一致的，我们不用适配，在移动端，不要高兴太早。<br>同样表示的16个像素点，在6的375px下，表示设计稿元素同样的尺寸，因为其dpr为2，也就是说每个css像素，可以表示尺寸2个物理像素，所有自然而然的css像素就是8px了，没毛病。</p>\n<p>这就是跟设计师沟通达成一致后的方案，皆大欢喜。</p>\n<p>总结一下，我们确定基准6，然后结合 <strong>meta</strong> 和 <strong>javascript</strong> ，前者锁定理想视口，后者响应设备，重置根元素基准值。相关代码在来一遍：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">'viewport'</span> content=<span class=\"string\">'width=device-width,initial-scale=1,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no'</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> initWidth = <span class=\"number\">375</span>,</span><br><span class=\"line\">    initSize  = <span class=\"number\">100</span>,</span><br><span class=\"line\">    w         = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\">    fixScreen = w/initWidth*initSize;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.documentElement.style.fontSize = fixScreen + <span class=\"string\">\"px\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>（本文完）</p>\n","site":{"data":{}},"excerpt":"<p>续上篇 <a href=\"http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/\" target=\"_blank\" rel=\"noopener\">移动端适配方案一</a> ，了解了关于 视口 和 像素 之后，我们继续关于适配。</p>\n<blockquote>\n<p>适配的一切，都要忠于设计稿。</p>\n</blockquote>","more":"<h3 id=\"我只讲我用过的\"><a href=\"#我只讲我用过的\" class=\"headerlink\" title=\"我只讲我用过的\"></a>我只讲我用过的</h3><p><strong>rem布局方案</strong> 登场，目前我采用的方案是这样的(如无特别说明，以下的尺寸均是指宽度):</p>\n<p>1.已经和设计师沟通好设计稿的尺寸为750px；<br>2.前端这里以375px的6为依据(初始化宽度)，初始化html的fontSize为100px(方便计算)，采用理想视口：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">\"viewport\"</span> content=<span class=\"string\">\"width=device-width,initial-scale=1\"</span>&gt;</span><br></pre></td></tr></table></figure></p>\n<p>看着很暴力，嗯。。。对。。。<br>依旧举个例子，设计稿上一个元素的尺寸是16px；那么在生成过程中，我们会转化成0.08rem；<br>以上，便是适配的过程。</p>\n<h3 id=\"用过的要思考\"><a href=\"#用过的要思考\" class=\"headerlink\" title=\"用过的要思考\"></a>用过的要思考</h3><p>当我们通过一个简单的操作就可以把产品推送到百万级的用户面前的时候，应该体会到的是，科技赐予我们的力量。<br>下面分析下上述原理。<br>所有的假设都会有一个前提，这里的前提，忘记了往上看。<br>如果你跟设计师沟通好了，恰好跟我的情况一致，那恭喜，方案伸手即可用；如果是别的640，甚至是1242的，那么继续往下看。<br>针对6的，我们解决了，那么如果是6plus、4的呢 <a href=\"http://screensiz.es/phone\" target=\"_blank\" rel=\"noopener\">给你瞅个眼花缭乱的</a> 。<br>这里我们加了段js，用来响应不同尺寸的屏幕对应的根元素基准值，大概意思是这样的：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> initWidth = <span class=\"number\">375</span>,</span><br><span class=\"line\">    initSize  = <span class=\"number\">100</span>,</span><br><span class=\"line\">    w         = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\">    fixScreen = w/initWidth*initSize;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.documentElement.style.fontSize = fixScreen + <span class=\"string\">\"px\"</span>;</span><br></pre></td></tr></table></figure>\n<p>适配？交给js去吧，静态部分只需计算好设计稿的尺寸跟对应的css像素，别的dpr，ppi，lpi，视觉视口，理想视口，布局视口…bye</p>\n<h3 id=\"说我想说的\"><a href=\"#说我想说的\" class=\"headerlink\" title=\"说我想说的\"></a>说我想说的</h3><p>理论部分，目前确实不擅长，各种名词和之间的逻辑关系。理解之后，我只用自己熟悉的语言来描述出来，加深记忆的同时，或许会帮助一些人。<br>强烈建议看上一篇 <a href=\"http://blog.eyeseau.com/2017/03/29/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88%E4%B8%80/\" target=\"_blank\" rel=\"noopener\">移动端适配方案一</a> ，我开始继续逼逼。</p>\n<p>这里我们可以假设dpr铺满“布局视口”的每一个像素点，那么也就是说此时的“布局视口”就是理想视口，就是视觉视口，简单理解就是1px=1dpr。</p>\n<p>但是移动设备(这里主要是手机，pad等)，往往不能给我们展示出真正的布局视口，所以需要适配。也就类似在清明上河图上显示出北宋汴京社会全貌。<br>同样是表示卖菜的商贩，图纸上可能就是一个点，而社会上可能就是一大片区域，区别就在于资源的限制。如果想要在视觉视口上表示出布局视口的所有内容，那么肯定的一点就是单位面积上可用来表示元素的资源密集了，轮廓我们就可以按照比例放小点了，因为他也可以表示的很清楚，丝毫不逊于布局视口的展现。</p>\n<p>所给图纸的大小不一样，我们就需要不同的适配，用来表现同样的东西。</p>\n<p>清明上河图只有一份，在故宫放着。一个团队开发的标准也只有一个，上面方案就是一个标准，然后不同画布我们根据标准来等比缩放，那么同样的数字和单位的结合，在不同的图纸上，表示的大小就可能会不一样，在A4上可能是16px，那么在A2图纸上可能就是32px，因为可用资源增多了嘛。</p>\n<p>回过神来，设计稿是按照750px来设计的，元素是16px，那么设计师想要表达的是在750px的设备上展现的尺寸就是16个物理像素，在PC端，因为布局视口和视觉视口是一致的，我们不用适配，在移动端，不要高兴太早。<br>同样表示的16个像素点，在6的375px下，表示设计稿元素同样的尺寸，因为其dpr为2，也就是说每个css像素，可以表示尺寸2个物理像素，所有自然而然的css像素就是8px了，没毛病。</p>\n<p>这就是跟设计师沟通达成一致后的方案，皆大欢喜。</p>\n<p>总结一下，我们确定基准6，然后结合 <strong>meta</strong> 和 <strong>javascript</strong> ，前者锁定理想视口，后者响应设备，重置根元素基准值。相关代码在来一遍：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=<span class=\"string\">'viewport'</span> content=<span class=\"string\">'width=device-width,initial-scale=1,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no'</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> initWidth = <span class=\"number\">375</span>,</span><br><span class=\"line\">    initSize  = <span class=\"number\">100</span>,</span><br><span class=\"line\">    w         = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\">    fixScreen = w/initWidth*initSize;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.documentElement.style.fontSize = fixScreen + <span class=\"string\">\"px\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>（本文完）</p>"},{"title":"发布Node模块到NPM社区(es625原始包发布案例)","date":"2017-03-31T04:09:40.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"作为前端你不会nodejs怎么行？\n> 如果没有业务驱动，那么最好自我驱动！\n\n<!-- more -->\n关于Nodejs这个00后来说，从12年开始火，然后点亮了整个生态圈。nodejs的个人信息，需要的去看官方文档。\n\n这里假设的是你已经配置了nodejs环境，本文环境如下：\n```javascript\n\teyeseau:~ eyea$ node -v\n\tv6.9.1\n\teyeseau:~ eyea$ npm -v\n\t3.10.8\n```\n\n目的是简单的走一个制作一个npm包的简单流程，在 [npm社区](https://www.npmjs.com/) 这个庞大的社区里，共享你的知识成果。\n\n#### 1.初始化一个项目\n```javascript\nmkdir npm && cd npm  // 新建一个npm项目然后进入\nnpm init     // 初始化项目\n```\n紧接着开始配置，包括项目名称，版本号，项目描述，入口文件，关键词，作者等信息，配置 __license__ 后，会让你确认信息，通过后，我们便有了 __package.json__ 文件，用来提供项目信息和依赖信息。\n\n注意的是：\n\t\t1）npm包名要去小写；\n\t\t2）版本号类似于 __v1.0.0__ ，后续不同程度的更新，是有区别的：\n\t\t\t\t版本格式：主版号.次版号.修订号，版号递增规则如下：\n\t\t\t    主版号：当你做了不相容的 API 修改，\n\t\t\t    次版号：当你做了向下相容的功能性新增，\n\t\t\t    修订号：当你做了向下相容的问题修正。\n\t\t\t    先行版号及版本编译资讯可以加到「主版号.次版号.修订号」的后面，作为延伸。\n\t\t3）入口文件需要我们把组件暴露出去的，以供用户导入(这是用户访问你的npm包的唯一入口)；\n[es625](https://www.npmjs.com/package/es625) 这个是我们本次案例，目的是为了刚接触es6语法的同学学习，在做demo过程中和es5来进行直观的代码对比，同时建议结合es6API或者 [教程](http://es6.ruanyifeng.com/) ，更深入体会 __es6__ 的强大。\n\n#### 2.依赖文件配置\n我们依赖了es6toes5鼻祖 [babel](http://babeljs.io/)，以及 [Gulp](http://gulpjs.com/) 打包工具，所以有以下依赖：\n```javascript\n\"gulp\": \"^3.9.1\",\n\"gulp-babel\": \"^6.1.2\" ,\n\"babel-preset-es2015\": \"^6.24.0\",\n\"babel-plugin-transform-es2015-modules-amd\": \"^6.24.0\"\n```\n需要你在 __cmd__ 敲打一下命令：\n```javascript\nnpm install gulp gulp-babel babel-preset-es2015 babel-plugin-transform-es2015-modules-amd --save\n//  --save-dev 是你开发时候依赖的包,--save 是你发布之后仍然依赖的包。\n//  如果你爬梯子费劲，建议换成 cnpm。 \n```\n这时打开你的 __package.json__ 会多出配置项 __dependencies__ 。\n\n现在我们要开始使用gulp了，新建并配置 __gulpfile.js__ :\n```javascript\ntouch gulpfile.js && vi gulpfile.js\n// 或者就进入编辑器操作文件，都可以\n```\n具体编辑工作是这样的：\n```javascript\nvar gulp = require('gulp');\nvar babel= require('gulp-babel');\n\ngulp.task('es625', function(){\n  return gulp.src('src/**/*.js')   //ES6 file named \"src\"\n             .pipe(babel())\n\t     .pipe(gulp.dest('dist'));  //result of ES6(named \"dist\") to ES5\n});\n```\n上面的 __require__ 仿佛看到了用户使用我们制作的npm包的情景(不过es625目前版本v1.0.3只提供转换功能，并没有export哦)\n\n既然使用了 __babel__ 的‘翻译’功能，那么就得有这样的一个文件：\n```javascript\n// .babelrc\n{\n  \"presets\": [\"es2015\"]\n}\n```\n经常使用 __Git__ 的我们一定会记得 __.gitignore__ ，那么npm也有同样的功能的file，不过名字是 __.npmignore__ ，看个人需求了，不过本地开发，肯定会有测试文件，依赖文件，错误日志等，我们在本地留存就好了，没必要上传到包里。\n\n#### 3.README.md\n这个文档是很重要的，相当于发布包的说明书作用，介绍，用法，版本更新日志等，所以单独列出来。\n\n#### 4.发包\n首先你有个 [npm账号](https://www.npmjs.com/) 或者 命令行形式注册:\n```javascript\nnpm adduser\nUsername:\nPassword:\n```\n然后发布前，确认下：\n```javascript\nnpm whoami\neyeseau\n```\nOK后，\n```javascript\nnpm publish\n```\n\n至此，我们已经完成一个包的简单制作以及发布路程，去 [npm社区](https://www.npmjs.com/package/) 看下自己包包吧。\n\n（本文完）\n","source":"_posts/2017-03-31-发布Node模块到NPM社区.md","raw":"---\ntitle: 发布Node模块到NPM社区(es625原始包发布案例)\ndate: 2017-03-31 12:09:40\ntags: Node\ncategories: ['Node','npm']\nupdated:\n---\n作为前端你不会nodejs怎么行？\n> 如果没有业务驱动，那么最好自我驱动！\n\n<!-- more -->\n关于Nodejs这个00后来说，从12年开始火，然后点亮了整个生态圈。nodejs的个人信息，需要的去看官方文档。\n\n这里假设的是你已经配置了nodejs环境，本文环境如下：\n```javascript\n\teyeseau:~ eyea$ node -v\n\tv6.9.1\n\teyeseau:~ eyea$ npm -v\n\t3.10.8\n```\n\n目的是简单的走一个制作一个npm包的简单流程，在 [npm社区](https://www.npmjs.com/) 这个庞大的社区里，共享你的知识成果。\n\n#### 1.初始化一个项目\n```javascript\nmkdir npm && cd npm  // 新建一个npm项目然后进入\nnpm init     // 初始化项目\n```\n紧接着开始配置，包括项目名称，版本号，项目描述，入口文件，关键词，作者等信息，配置 __license__ 后，会让你确认信息，通过后，我们便有了 __package.json__ 文件，用来提供项目信息和依赖信息。\n\n注意的是：\n\t\t1）npm包名要去小写；\n\t\t2）版本号类似于 __v1.0.0__ ，后续不同程度的更新，是有区别的：\n\t\t\t\t版本格式：主版号.次版号.修订号，版号递增规则如下：\n\t\t\t    主版号：当你做了不相容的 API 修改，\n\t\t\t    次版号：当你做了向下相容的功能性新增，\n\t\t\t    修订号：当你做了向下相容的问题修正。\n\t\t\t    先行版号及版本编译资讯可以加到「主版号.次版号.修订号」的后面，作为延伸。\n\t\t3）入口文件需要我们把组件暴露出去的，以供用户导入(这是用户访问你的npm包的唯一入口)；\n[es625](https://www.npmjs.com/package/es625) 这个是我们本次案例，目的是为了刚接触es6语法的同学学习，在做demo过程中和es5来进行直观的代码对比，同时建议结合es6API或者 [教程](http://es6.ruanyifeng.com/) ，更深入体会 __es6__ 的强大。\n\n#### 2.依赖文件配置\n我们依赖了es6toes5鼻祖 [babel](http://babeljs.io/)，以及 [Gulp](http://gulpjs.com/) 打包工具，所以有以下依赖：\n```javascript\n\"gulp\": \"^3.9.1\",\n\"gulp-babel\": \"^6.1.2\" ,\n\"babel-preset-es2015\": \"^6.24.0\",\n\"babel-plugin-transform-es2015-modules-amd\": \"^6.24.0\"\n```\n需要你在 __cmd__ 敲打一下命令：\n```javascript\nnpm install gulp gulp-babel babel-preset-es2015 babel-plugin-transform-es2015-modules-amd --save\n//  --save-dev 是你开发时候依赖的包,--save 是你发布之后仍然依赖的包。\n//  如果你爬梯子费劲，建议换成 cnpm。 \n```\n这时打开你的 __package.json__ 会多出配置项 __dependencies__ 。\n\n现在我们要开始使用gulp了，新建并配置 __gulpfile.js__ :\n```javascript\ntouch gulpfile.js && vi gulpfile.js\n// 或者就进入编辑器操作文件，都可以\n```\n具体编辑工作是这样的：\n```javascript\nvar gulp = require('gulp');\nvar babel= require('gulp-babel');\n\ngulp.task('es625', function(){\n  return gulp.src('src/**/*.js')   //ES6 file named \"src\"\n             .pipe(babel())\n\t     .pipe(gulp.dest('dist'));  //result of ES6(named \"dist\") to ES5\n});\n```\n上面的 __require__ 仿佛看到了用户使用我们制作的npm包的情景(不过es625目前版本v1.0.3只提供转换功能，并没有export哦)\n\n既然使用了 __babel__ 的‘翻译’功能，那么就得有这样的一个文件：\n```javascript\n// .babelrc\n{\n  \"presets\": [\"es2015\"]\n}\n```\n经常使用 __Git__ 的我们一定会记得 __.gitignore__ ，那么npm也有同样的功能的file，不过名字是 __.npmignore__ ，看个人需求了，不过本地开发，肯定会有测试文件，依赖文件，错误日志等，我们在本地留存就好了，没必要上传到包里。\n\n#### 3.README.md\n这个文档是很重要的，相当于发布包的说明书作用，介绍，用法，版本更新日志等，所以单独列出来。\n\n#### 4.发包\n首先你有个 [npm账号](https://www.npmjs.com/) 或者 命令行形式注册:\n```javascript\nnpm adduser\nUsername:\nPassword:\n```\n然后发布前，确认下：\n```javascript\nnpm whoami\neyeseau\n```\nOK后，\n```javascript\nnpm publish\n```\n\n至此，我们已经完成一个包的简单制作以及发布路程，去 [npm社区](https://www.npmjs.com/package/) 看下自己包包吧。\n\n（本文完）\n","slug":"发布Node模块到NPM社区","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklv000qbbfyo702bjix","content":"<p>作为前端你不会nodejs怎么行？</p>\n<blockquote>\n<p>如果没有业务驱动，那么最好自我驱动！</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>关于Nodejs这个00后来说，从12年开始火，然后点亮了整个生态圈。nodejs的个人信息，需要的去看官方文档。</p>\n<p>这里假设的是你已经配置了nodejs环境，本文环境如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyeseau:~ eyea$ node -v</span><br><span class=\"line\">v6<span class=\"number\">.9</span><span class=\"number\">.1</span></span><br><span class=\"line\">eyeseau:~ eyea$ npm -v</span><br><span class=\"line\"><span class=\"number\">3.10</span><span class=\"number\">.8</span></span><br></pre></td></tr></table></figure></p>\n<p>目的是简单的走一个制作一个npm包的简单流程，在 <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">npm社区</a> 这个庞大的社区里，共享你的知识成果。</p>\n<h4 id=\"1-初始化一个项目\"><a href=\"#1-初始化一个项目\" class=\"headerlink\" title=\"1.初始化一个项目\"></a>1.初始化一个项目</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir npm &amp;&amp; cd npm  <span class=\"comment\">// 新建一个npm项目然后进入</span></span><br><span class=\"line\">npm init     <span class=\"comment\">// 初始化项目</span></span><br></pre></td></tr></table></figure>\n<p>紧接着开始配置，包括项目名称，版本号，项目描述，入口文件，关键词，作者等信息，配置 <strong>license</strong> 后，会让你确认信息，通过后，我们便有了 <strong>package.json</strong> 文件，用来提供项目信息和依赖信息。</p>\n<p>注意的是：<br>        1）npm包名要去小写；<br>        2）版本号类似于 <strong>v1.0.0</strong> ，后续不同程度的更新，是有区别的：<br>                版本格式：主版号.次版号.修订号，版号递增规则如下：<br>                主版号：当你做了不相容的 API 修改，<br>                次版号：当你做了向下相容的功能性新增，<br>                修订号：当你做了向下相容的问题修正。<br>                先行版号及版本编译资讯可以加到「主版号.次版号.修订号」的后面，作为延伸。<br>        3）入口文件需要我们把组件暴露出去的，以供用户导入(这是用户访问你的npm包的唯一入口)；<br><a href=\"https://www.npmjs.com/package/es625\" target=\"_blank\" rel=\"noopener\">es625</a> 这个是我们本次案例，目的是为了刚接触es6语法的同学学习，在做demo过程中和es5来进行直观的代码对比，同时建议结合es6API或者 <a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">教程</a> ，更深入体会 <strong>es6</strong> 的强大。</p>\n<h4 id=\"2-依赖文件配置\"><a href=\"#2-依赖文件配置\" class=\"headerlink\" title=\"2.依赖文件配置\"></a>2.依赖文件配置</h4><p>我们依赖了es6toes5鼻祖 <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener\">babel</a>，以及 <a href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"noopener\">Gulp</a> 打包工具，所以有以下依赖：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"gulp-babel\"</span>: <span class=\"string\">\"^6.1.2\"</span> ,</span><br><span class=\"line\"><span class=\"string\">\"babel-preset-es2015\"</span>: <span class=\"string\">\"^6.24.0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"babel-plugin-transform-es2015-modules-amd\"</span>: <span class=\"string\">\"^6.24.0\"</span></span><br></pre></td></tr></table></figure></p>\n<p>需要你在 <strong>cmd</strong> 敲打一下命令：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp gulp-babel babel-preset-es2015 babel-plugin-transform-es2015-modules-amd --save</span><br><span class=\"line\"><span class=\"comment\">//  --save-dev 是你开发时候依赖的包,--save 是你发布之后仍然依赖的包。</span></span><br><span class=\"line\"><span class=\"comment\">//  如果你爬梯子费劲，建议换成 cnpm。</span></span><br></pre></td></tr></table></figure></p>\n<p>这时打开你的 <strong>package.json</strong> 会多出配置项 <strong>dependencies</strong> 。</p>\n<p>现在我们要开始使用gulp了，新建并配置 <strong>gulpfile.js</strong> :<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch gulpfile.js &amp;&amp; vi gulpfile.js</span><br><span class=\"line\"><span class=\"comment\">// 或者就进入编辑器操作文件，都可以</span></span><br></pre></td></tr></table></figure></p>\n<p>具体编辑工作是这样的：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> babel= <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-babel'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'es625'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'src/**/*.js'</span>)   <span class=\"comment\">//ES6 file named \"src\"</span></span><br><span class=\"line\">             .pipe(babel())</span><br><span class=\"line\">\t     .pipe(gulp.dest(<span class=\"string\">'dist'</span>));  <span class=\"comment\">//result of ES6(named \"dist\") to ES5</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上面的 <strong>require</strong> 仿佛看到了用户使用我们制作的npm包的情景(不过es625目前版本v1.0.3只提供转换功能，并没有export哦)</p>\n<p>既然使用了 <strong>babel</strong> 的‘翻译’功能，那么就得有这样的一个文件：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// .babelrc</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"es2015\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>经常使用 <strong>Git</strong> 的我们一定会记得 <strong>.gitignore</strong> ，那么npm也有同样的功能的file，不过名字是 <strong>.npmignore</strong> ，看个人需求了，不过本地开发，肯定会有测试文件，依赖文件，错误日志等，我们在本地留存就好了，没必要上传到包里。</p>\n<h4 id=\"3-README-md\"><a href=\"#3-README-md\" class=\"headerlink\" title=\"3.README.md\"></a>3.README.md</h4><p>这个文档是很重要的，相当于发布包的说明书作用，介绍，用法，版本更新日志等，所以单独列出来。</p>\n<h4 id=\"4-发包\"><a href=\"#4-发包\" class=\"headerlink\" title=\"4.发包\"></a>4.发包</h4><p>首先你有个 <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">npm账号</a> 或者 命令行形式注册:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm adduser</span><br><span class=\"line\">Username:</span><br><span class=\"line\">Password:</span><br></pre></td></tr></table></figure></p>\n<p>然后发布前，确认下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm whoami</span><br><span class=\"line\">eyeseau</span><br></pre></td></tr></table></figure></p>\n<p>OK后，<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm publish</span><br></pre></td></tr></table></figure></p>\n<p>至此，我们已经完成一个包的简单制作以及发布路程，去 <a href=\"https://www.npmjs.com/package/\" target=\"_blank\" rel=\"noopener\">npm社区</a> 看下自己包包吧。</p>\n<p>（本文完）</p>\n","site":{"data":{}},"excerpt":"<p>作为前端你不会nodejs怎么行？</p>\n<blockquote>\n<p>如果没有业务驱动，那么最好自我驱动！</p>\n</blockquote>","more":"<p>关于Nodejs这个00后来说，从12年开始火，然后点亮了整个生态圈。nodejs的个人信息，需要的去看官方文档。</p>\n<p>这里假设的是你已经配置了nodejs环境，本文环境如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyeseau:~ eyea$ node -v</span><br><span class=\"line\">v6<span class=\"number\">.9</span><span class=\"number\">.1</span></span><br><span class=\"line\">eyeseau:~ eyea$ npm -v</span><br><span class=\"line\"><span class=\"number\">3.10</span><span class=\"number\">.8</span></span><br></pre></td></tr></table></figure></p>\n<p>目的是简单的走一个制作一个npm包的简单流程，在 <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">npm社区</a> 这个庞大的社区里，共享你的知识成果。</p>\n<h4 id=\"1-初始化一个项目\"><a href=\"#1-初始化一个项目\" class=\"headerlink\" title=\"1.初始化一个项目\"></a>1.初始化一个项目</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir npm &amp;&amp; cd npm  <span class=\"comment\">// 新建一个npm项目然后进入</span></span><br><span class=\"line\">npm init     <span class=\"comment\">// 初始化项目</span></span><br></pre></td></tr></table></figure>\n<p>紧接着开始配置，包括项目名称，版本号，项目描述，入口文件，关键词，作者等信息，配置 <strong>license</strong> 后，会让你确认信息，通过后，我们便有了 <strong>package.json</strong> 文件，用来提供项目信息和依赖信息。</p>\n<p>注意的是：<br>        1）npm包名要去小写；<br>        2）版本号类似于 <strong>v1.0.0</strong> ，后续不同程度的更新，是有区别的：<br>                版本格式：主版号.次版号.修订号，版号递增规则如下：<br>                主版号：当你做了不相容的 API 修改，<br>                次版号：当你做了向下相容的功能性新增，<br>                修订号：当你做了向下相容的问题修正。<br>                先行版号及版本编译资讯可以加到「主版号.次版号.修订号」的后面，作为延伸。<br>        3）入口文件需要我们把组件暴露出去的，以供用户导入(这是用户访问你的npm包的唯一入口)；<br><a href=\"https://www.npmjs.com/package/es625\" target=\"_blank\" rel=\"noopener\">es625</a> 这个是我们本次案例，目的是为了刚接触es6语法的同学学习，在做demo过程中和es5来进行直观的代码对比，同时建议结合es6API或者 <a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">教程</a> ，更深入体会 <strong>es6</strong> 的强大。</p>\n<h4 id=\"2-依赖文件配置\"><a href=\"#2-依赖文件配置\" class=\"headerlink\" title=\"2.依赖文件配置\"></a>2.依赖文件配置</h4><p>我们依赖了es6toes5鼻祖 <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener\">babel</a>，以及 <a href=\"http://gulpjs.com/\" target=\"_blank\" rel=\"noopener\">Gulp</a> 打包工具，所以有以下依赖：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"gulp\"</span>: <span class=\"string\">\"^3.9.1\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"gulp-babel\"</span>: <span class=\"string\">\"^6.1.2\"</span> ,</span><br><span class=\"line\"><span class=\"string\">\"babel-preset-es2015\"</span>: <span class=\"string\">\"^6.24.0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"babel-plugin-transform-es2015-modules-amd\"</span>: <span class=\"string\">\"^6.24.0\"</span></span><br></pre></td></tr></table></figure></p>\n<p>需要你在 <strong>cmd</strong> 敲打一下命令：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp gulp-babel babel-preset-es2015 babel-plugin-transform-es2015-modules-amd --save</span><br><span class=\"line\"><span class=\"comment\">//  --save-dev 是你开发时候依赖的包,--save 是你发布之后仍然依赖的包。</span></span><br><span class=\"line\"><span class=\"comment\">//  如果你爬梯子费劲，建议换成 cnpm。</span></span><br></pre></td></tr></table></figure></p>\n<p>这时打开你的 <strong>package.json</strong> 会多出配置项 <strong>dependencies</strong> 。</p>\n<p>现在我们要开始使用gulp了，新建并配置 <strong>gulpfile.js</strong> :<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch gulpfile.js &amp;&amp; vi gulpfile.js</span><br><span class=\"line\"><span class=\"comment\">// 或者就进入编辑器操作文件，都可以</span></span><br></pre></td></tr></table></figure></p>\n<p>具体编辑工作是这样的：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> babel= <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-babel'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'es625'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'src/**/*.js'</span>)   <span class=\"comment\">//ES6 file named \"src\"</span></span><br><span class=\"line\">             .pipe(babel())</span><br><span class=\"line\">\t     .pipe(gulp.dest(<span class=\"string\">'dist'</span>));  <span class=\"comment\">//result of ES6(named \"dist\") to ES5</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>上面的 <strong>require</strong> 仿佛看到了用户使用我们制作的npm包的情景(不过es625目前版本v1.0.3只提供转换功能，并没有export哦)</p>\n<p>既然使用了 <strong>babel</strong> 的‘翻译’功能，那么就得有这样的一个文件：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// .babelrc</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"presets\"</span>: [<span class=\"string\">\"es2015\"</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>经常使用 <strong>Git</strong> 的我们一定会记得 <strong>.gitignore</strong> ，那么npm也有同样的功能的file，不过名字是 <strong>.npmignore</strong> ，看个人需求了，不过本地开发，肯定会有测试文件，依赖文件，错误日志等，我们在本地留存就好了，没必要上传到包里。</p>\n<h4 id=\"3-README-md\"><a href=\"#3-README-md\" class=\"headerlink\" title=\"3.README.md\"></a>3.README.md</h4><p>这个文档是很重要的，相当于发布包的说明书作用，介绍，用法，版本更新日志等，所以单独列出来。</p>\n<h4 id=\"4-发包\"><a href=\"#4-发包\" class=\"headerlink\" title=\"4.发包\"></a>4.发包</h4><p>首先你有个 <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener\">npm账号</a> 或者 命令行形式注册:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm adduser</span><br><span class=\"line\">Username:</span><br><span class=\"line\">Password:</span><br></pre></td></tr></table></figure></p>\n<p>然后发布前，确认下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm whoami</span><br><span class=\"line\">eyeseau</span><br></pre></td></tr></table></figure></p>\n<p>OK后，<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm publish</span><br></pre></td></tr></table></figure></p>\n<p>至此，我们已经完成一个包的简单制作以及发布路程，去 <a href=\"https://www.npmjs.com/package/\" target=\"_blank\" rel=\"noopener\">npm社区</a> 看下自己包包吧。</p>\n<p>（本文完）</p>"},{"title":"资源和文章","date":"2017-04-24T02:30:40.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。\n> 分享，是为了受益更多的朋友。\n\n<!-- more -->\n从这里开始，我会不定时的更新这篇文章，用于记录日常工作和学习中遇到的好的文章、网站、视频、常识...甚至不限于一个链接。侧重于思维、逻辑、还有方法论这些方面，但不局限于，可能你会看到费德勒呢！\n我知道，我们每一个人都想要一份新鲜的食物，需要如同沐浴春风的感觉，喜欢猎奇，喜欢欣赏，喜欢享受...如果，你和我一样~\n\n### 网站\n1. [谷歌学术](https://scholar.google.com/)\n\n\n### 文章\n1. [前端的自我修养](http://taobaofed.org/blog/2016/03/23/the-growth-of-front-end/index.html)\n\t印象比较深的是那句 __You are the owner of your career.__ __知识和能力__。\n\t一定要主动去建立自己的知识体系。在知识部分，分为两部分，一是标准，而是技术。如何建立自己的知识体系：第一步，寻找线索，确定要学的知识点，找标准文档和附录，找源代码，找最初的争议。第二步，建立联系。第三步，分类，建立联系以后，我们依据知识之间的联系，进行分类，就可以得到一张图谱，在这个图里面，我们就可以非常清楚地知道，哪些知识，是非常重要的，哪些，其实是可以互相替代的。第四步，追本溯源，当我对一个知识体系的全貌有了概念以后，占了全面两个字，接下来需要确认它的准确性。很多知识，在社区，会有很多的争议，该相信谁呢，这是个问题。而我的答案，就是追本溯源，去找它最初的讨论和定义。除了 wiki-google 学术搜索的组合，还有一些邮件列表和 github 提交历史，也是非常适合去查证一些概念和技术的历史的。最后说，我讲的这个建立知识体系的过程，是不断接受新知识，挑战、质疑原有的体系，推翻再重建，每一次循环，你的知识体系都变得更加坚固，更加强大。\n\n\t还有就是能力的培养，重点是要去教材，训练。能力部分的比重占据80%，分别是 __编程能力__ ，就是用代码解决问题的能力，编程能力越强，面对越复杂的问题就会越得心应手，编程能力有细分调试、算法、数据结构、OS原理等。__架构能力__ ，则是解决代码规模的问题，当一个系统足够复杂，你会写每一块，能解决每一个问题，不等于你能搞定整个系统，这就需要架构能力，架构能力包含了一些意识，比如解耦、接口隔离，也包含认识业务建立抽象模型，也有一些常见的模式，比如经典的 MVC，还有设计层面，面向对象、设计模式等等。最后 __工程能力__，则是解决协作的问题，当系统规模更大，光靠一个人，是没办法完成的，如何保证几个高手互相能够配合好？如何保证项目里面水平最差的人不拖后腿？这个工程化建设，往往会跨越多个业务，以汇报关系上的团队为单位来做。包括前后端解耦，模块化，质量保证，代码风格，等等。\n\t\n\t__任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。__\n\n\n\n---------\n(持续更新ing...)","source":"_posts/2017-04-24-资源和文章.md","raw":"---\ntitle: 资源和文章\ndate: 2017-04-24 10:30:40\ntags: 'resource'\ncategories: 'resources'\nupdated:\n---\n任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。\n> 分享，是为了受益更多的朋友。\n\n<!-- more -->\n从这里开始，我会不定时的更新这篇文章，用于记录日常工作和学习中遇到的好的文章、网站、视频、常识...甚至不限于一个链接。侧重于思维、逻辑、还有方法论这些方面，但不局限于，可能你会看到费德勒呢！\n我知道，我们每一个人都想要一份新鲜的食物，需要如同沐浴春风的感觉，喜欢猎奇，喜欢欣赏，喜欢享受...如果，你和我一样~\n\n### 网站\n1. [谷歌学术](https://scholar.google.com/)\n\n\n### 文章\n1. [前端的自我修养](http://taobaofed.org/blog/2016/03/23/the-growth-of-front-end/index.html)\n\t印象比较深的是那句 __You are the owner of your career.__ __知识和能力__。\n\t一定要主动去建立自己的知识体系。在知识部分，分为两部分，一是标准，而是技术。如何建立自己的知识体系：第一步，寻找线索，确定要学的知识点，找标准文档和附录，找源代码，找最初的争议。第二步，建立联系。第三步，分类，建立联系以后，我们依据知识之间的联系，进行分类，就可以得到一张图谱，在这个图里面，我们就可以非常清楚地知道，哪些知识，是非常重要的，哪些，其实是可以互相替代的。第四步，追本溯源，当我对一个知识体系的全貌有了概念以后，占了全面两个字，接下来需要确认它的准确性。很多知识，在社区，会有很多的争议，该相信谁呢，这是个问题。而我的答案，就是追本溯源，去找它最初的讨论和定义。除了 wiki-google 学术搜索的组合，还有一些邮件列表和 github 提交历史，也是非常适合去查证一些概念和技术的历史的。最后说，我讲的这个建立知识体系的过程，是不断接受新知识，挑战、质疑原有的体系，推翻再重建，每一次循环，你的知识体系都变得更加坚固，更加强大。\n\n\t还有就是能力的培养，重点是要去教材，训练。能力部分的比重占据80%，分别是 __编程能力__ ，就是用代码解决问题的能力，编程能力越强，面对越复杂的问题就会越得心应手，编程能力有细分调试、算法、数据结构、OS原理等。__架构能力__ ，则是解决代码规模的问题，当一个系统足够复杂，你会写每一块，能解决每一个问题，不等于你能搞定整个系统，这就需要架构能力，架构能力包含了一些意识，比如解耦、接口隔离，也包含认识业务建立抽象模型，也有一些常见的模式，比如经典的 MVC，还有设计层面，面向对象、设计模式等等。最后 __工程能力__，则是解决协作的问题，当系统规模更大，光靠一个人，是没办法完成的，如何保证几个高手互相能够配合好？如何保证项目里面水平最差的人不拖后腿？这个工程化建设，往往会跨越多个业务，以汇报关系上的团队为单位来做。包括前后端解耦，模块化，质量保证，代码风格，等等。\n\t\n\t__任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。__\n\n\n\n---------\n(持续更新ing...)","slug":"资源和文章","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobklx000ubbfyf55k188d","content":"<p>任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。</p>\n<blockquote>\n<p>分享，是为了受益更多的朋友。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>从这里开始，我会不定时的更新这篇文章，用于记录日常工作和学习中遇到的好的文章、网站、视频、常识…甚至不限于一个链接。侧重于思维、逻辑、还有方法论这些方面，但不局限于，可能你会看到费德勒呢！<br>我知道，我们每一个人都想要一份新鲜的食物，需要如同沐浴春风的感觉，喜欢猎奇，喜欢欣赏，喜欢享受…如果，你和我一样~</p>\n<h3 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h3><ol>\n<li><a href=\"https://scholar.google.com/\" target=\"_blank\" rel=\"noopener\">谷歌学术</a></li>\n</ol>\n<h3 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ol>\n<li><p><a href=\"http://taobaofed.org/blog/2016/03/23/the-growth-of-front-end/index.html\" target=\"_blank\" rel=\"noopener\">前端的自我修养</a><br> 印象比较深的是那句 <strong>You are the owner of your career.</strong> <strong>知识和能力</strong>。<br> 一定要主动去建立自己的知识体系。在知识部分，分为两部分，一是标准，而是技术。如何建立自己的知识体系：第一步，寻找线索，确定要学的知识点，找标准文档和附录，找源代码，找最初的争议。第二步，建立联系。第三步，分类，建立联系以后，我们依据知识之间的联系，进行分类，就可以得到一张图谱，在这个图里面，我们就可以非常清楚地知道，哪些知识，是非常重要的，哪些，其实是可以互相替代的。第四步，追本溯源，当我对一个知识体系的全貌有了概念以后，占了全面两个字，接下来需要确认它的准确性。很多知识，在社区，会有很多的争议，该相信谁呢，这是个问题。而我的答案，就是追本溯源，去找它最初的讨论和定义。除了 wiki-google 学术搜索的组合，还有一些邮件列表和 github 提交历史，也是非常适合去查证一些概念和技术的历史的。最后说，我讲的这个建立知识体系的过程，是不断接受新知识，挑战、质疑原有的体系，推翻再重建，每一次循环，你的知识体系都变得更加坚固，更加强大。</p>\n<p> 还有就是能力的培养，重点是要去教材，训练。能力部分的比重占据80%，分别是 <strong>编程能力</strong> ，就是用代码解决问题的能力，编程能力越强，面对越复杂的问题就会越得心应手，编程能力有细分调试、算法、数据结构、OS原理等。<strong>架构能力</strong> ，则是解决代码规模的问题，当一个系统足够复杂，你会写每一块，能解决每一个问题，不等于你能搞定整个系统，这就需要架构能力，架构能力包含了一些意识，比如解耦、接口隔离，也包含认识业务建立抽象模型，也有一些常见的模式，比如经典的 MVC，还有设计层面，面向对象、设计模式等等。最后 <strong>工程能力</strong>，则是解决协作的问题，当系统规模更大，光靠一个人，是没办法完成的，如何保证几个高手互相能够配合好？如何保证项目里面水平最差的人不拖后腿？这个工程化建设，往往会跨越多个业务，以汇报关系上的团队为单位来做。包括前后端解耦，模块化，质量保证，代码风格，等等。</p>\n<p> <strong>任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。</strong></p>\n</li>\n</ol>\n<hr>\n<p>(持续更新ing…)</p>\n","site":{"data":{}},"excerpt":"<p>任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。</p>\n<blockquote>\n<p>分享，是为了受益更多的朋友。</p>\n</blockquote>","more":"<p>从这里开始，我会不定时的更新这篇文章，用于记录日常工作和学习中遇到的好的文章、网站、视频、常识…甚至不限于一个链接。侧重于思维、逻辑、还有方法论这些方面，但不局限于，可能你会看到费德勒呢！<br>我知道，我们每一个人都想要一份新鲜的食物，需要如同沐浴春风的感觉，喜欢猎奇，喜欢欣赏，喜欢享受…如果，你和我一样~</p>\n<h3 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h3><ol>\n<li><a href=\"https://scholar.google.com/\" target=\"_blank\" rel=\"noopener\">谷歌学术</a></li>\n</ol>\n<h3 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ol>\n<li><p><a href=\"http://taobaofed.org/blog/2016/03/23/the-growth-of-front-end/index.html\" target=\"_blank\" rel=\"noopener\">前端的自我修养</a><br> 印象比较深的是那句 <strong>You are the owner of your career.</strong> <strong>知识和能力</strong>。<br> 一定要主动去建立自己的知识体系。在知识部分，分为两部分，一是标准，而是技术。如何建立自己的知识体系：第一步，寻找线索，确定要学的知识点，找标准文档和附录，找源代码，找最初的争议。第二步，建立联系。第三步，分类，建立联系以后，我们依据知识之间的联系，进行分类，就可以得到一张图谱，在这个图里面，我们就可以非常清楚地知道，哪些知识，是非常重要的，哪些，其实是可以互相替代的。第四步，追本溯源，当我对一个知识体系的全貌有了概念以后，占了全面两个字，接下来需要确认它的准确性。很多知识，在社区，会有很多的争议，该相信谁呢，这是个问题。而我的答案，就是追本溯源，去找它最初的讨论和定义。除了 wiki-google 学术搜索的组合，还有一些邮件列表和 github 提交历史，也是非常适合去查证一些概念和技术的历史的。最后说，我讲的这个建立知识体系的过程，是不断接受新知识，挑战、质疑原有的体系，推翻再重建，每一次循环，你的知识体系都变得更加坚固，更加强大。</p>\n<p> 还有就是能力的培养，重点是要去教材，训练。能力部分的比重占据80%，分别是 <strong>编程能力</strong> ，就是用代码解决问题的能力，编程能力越强，面对越复杂的问题就会越得心应手，编程能力有细分调试、算法、数据结构、OS原理等。<strong>架构能力</strong> ，则是解决代码规模的问题，当一个系统足够复杂，你会写每一块，能解决每一个问题，不等于你能搞定整个系统，这就需要架构能力，架构能力包含了一些意识，比如解耦、接口隔离，也包含认识业务建立抽象模型，也有一些常见的模式，比如经典的 MVC，还有设计层面，面向对象、设计模式等等。最后 <strong>工程能力</strong>，则是解决协作的问题，当系统规模更大，光靠一个人，是没办法完成的，如何保证几个高手互相能够配合好？如何保证项目里面水平最差的人不拖后腿？这个工程化建设，往往会跨越多个业务，以汇报关系上的团队为单位来做。包括前后端解耦，模块化，质量保证，代码风格，等等。</p>\n<p> <strong>任何被动的痛苦，都没法给人带来进步，你的痛苦倒是可能给老板带来更多收入。</strong></p>\n</li>\n</ol>\n<hr>\n<p>(持续更新ing…)</p>"},{"title":"记一次在AWS上VPS搭建网站的一些事","date":"2017-05-09T13:47:18.000Z","updated":"2017-11-29T06:14:20.000Z","_content":"> 生活再不如意，心里也要微笑着。\n\n<!--more-->\n个人网站刚开始诞生的时候，在阿里云上买的域名，记得还有一个虚拟主机，开心了一年，续费之后，觉得总是一大堆文件 __ftp__ 或者别的工具直接到主机上，也没有数据库啊，后台环境这些个配置，什么WordPress，hexo(目前这个blog正在采用的)，没什么意思。正好最近闲的蛋疼，其实是心里烦躁的很，突然看到半年前注册的AWS，12个月的 __VPS__ 对于我来说可是重新认识了。我之前傻傻分不清楚 [虚拟主机跟虚拟服务器的区别](https://www.zhihu.com/question/25507629)，但是看过之后，瞬间觉得aws的这个12个月的体验简直是我等屌丝的福音啊，果断的搞起来。\n以下内容涉及的入门，是到发稿时候我的进度，挨着来的，通过啃文档，请教大神零星总结的。\n### 账号\n首先得有一个[账号](https://aws.amazon.com/)吧。反正这个之前呢，你的 __梯子__ 一定要稳定啊！不稳的话，访问下[这个](https://aws.amazon.com/cn/)。相关信息的录入我就不多说了，提醒的一点是要绑定你的信用卡，我这次是扣取了2美元，汇率都6.9了...据说之后会返还的，但是即使不返还，2个大洋，12个月的vps，偷着乐吧。\n\n### 实例\n然后右上角 __我的账户__ --> __AWS管理控制台__ 选择所有服务下的 __EC2__ ，进入后在 创建实例 下，点击 启动实例 按钮，进入后记得勾选左侧的 仅免费套餐 哦，我选择的是默认的第一个(我这个假后台不知道这些知识)，然后... 我要是一个输入框的说，我自己都会烦的。\n\n### 配置\n建好一个实例之后，\n打开命令行\n<small>这里稍后我会补充...</small>\n\n### 域名\n如果你是在阿里云上备案的域名，那就进入域名解析(举例子，你想要来个www.eyeseau.com)，添加一个解析。记录类型是 __CNAME__ ,主机记录 __www__ ,记录值是刚才你新建的实例的公网IP，然后保存就好了，现在就可以访问[你的网站](http://www.eyeseau.com/)了。\n\n<small>后续我会更新自动化部署，github，建议先看看文档，这部分新手有点麻烦。。。</small>","source":"_posts/2017-05-09-记一次在AWS上VPS搭建网站的一些事.md","raw":"---\ntitle: 记一次在AWS上VPS搭建网站的一些事\ndate: 2017-05-09 21:47:18\ntags: ['AWS','VPS','node','nginx']\ncategories:\nupdated:\n---\n> 生活再不如意，心里也要微笑着。\n\n<!--more-->\n个人网站刚开始诞生的时候，在阿里云上买的域名，记得还有一个虚拟主机，开心了一年，续费之后，觉得总是一大堆文件 __ftp__ 或者别的工具直接到主机上，也没有数据库啊，后台环境这些个配置，什么WordPress，hexo(目前这个blog正在采用的)，没什么意思。正好最近闲的蛋疼，其实是心里烦躁的很，突然看到半年前注册的AWS，12个月的 __VPS__ 对于我来说可是重新认识了。我之前傻傻分不清楚 [虚拟主机跟虚拟服务器的区别](https://www.zhihu.com/question/25507629)，但是看过之后，瞬间觉得aws的这个12个月的体验简直是我等屌丝的福音啊，果断的搞起来。\n以下内容涉及的入门，是到发稿时候我的进度，挨着来的，通过啃文档，请教大神零星总结的。\n### 账号\n首先得有一个[账号](https://aws.amazon.com/)吧。反正这个之前呢，你的 __梯子__ 一定要稳定啊！不稳的话，访问下[这个](https://aws.amazon.com/cn/)。相关信息的录入我就不多说了，提醒的一点是要绑定你的信用卡，我这次是扣取了2美元，汇率都6.9了...据说之后会返还的，但是即使不返还，2个大洋，12个月的vps，偷着乐吧。\n\n### 实例\n然后右上角 __我的账户__ --> __AWS管理控制台__ 选择所有服务下的 __EC2__ ，进入后在 创建实例 下，点击 启动实例 按钮，进入后记得勾选左侧的 仅免费套餐 哦，我选择的是默认的第一个(我这个假后台不知道这些知识)，然后... 我要是一个输入框的说，我自己都会烦的。\n\n### 配置\n建好一个实例之后，\n打开命令行\n<small>这里稍后我会补充...</small>\n\n### 域名\n如果你是在阿里云上备案的域名，那就进入域名解析(举例子，你想要来个www.eyeseau.com)，添加一个解析。记录类型是 __CNAME__ ,主机记录 __www__ ,记录值是刚才你新建的实例的公网IP，然后保存就好了，现在就可以访问[你的网站](http://www.eyeseau.com/)了。\n\n<small>后续我会更新自动化部署，github，建议先看看文档，这部分新手有点麻烦。。。</small>","slug":"记一次在AWS上VPS搭建网站的一些事","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobkm1000vbbfy931i5bzg","content":"<blockquote>\n<p>生活再不如意，心里也要微笑着。</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>个人网站刚开始诞生的时候，在阿里云上买的域名，记得还有一个虚拟主机，开心了一年，续费之后，觉得总是一大堆文件 <strong>ftp</strong> 或者别的工具直接到主机上，也没有数据库啊，后台环境这些个配置，什么WordPress，hexo(目前这个blog正在采用的)，没什么意思。正好最近闲的蛋疼，其实是心里烦躁的很，突然看到半年前注册的AWS，12个月的 <strong>VPS</strong> 对于我来说可是重新认识了。我之前傻傻分不清楚 <a href=\"https://www.zhihu.com/question/25507629\" target=\"_blank\" rel=\"noopener\">虚拟主机跟虚拟服务器的区别</a>，但是看过之后，瞬间觉得aws的这个12个月的体验简直是我等屌丝的福音啊，果断的搞起来。<br>以下内容涉及的入门，是到发稿时候我的进度，挨着来的，通过啃文档，请教大神零星总结的。</p>\n<h3 id=\"账号\"><a href=\"#账号\" class=\"headerlink\" title=\"账号\"></a>账号</h3><p>首先得有一个<a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"noopener\">账号</a>吧。反正这个之前呢，你的 <strong>梯子</strong> 一定要稳定啊！不稳的话，访问下<a href=\"https://aws.amazon.com/cn/\" target=\"_blank\" rel=\"noopener\">这个</a>。相关信息的录入我就不多说了，提醒的一点是要绑定你的信用卡，我这次是扣取了2美元，汇率都6.9了…据说之后会返还的，但是即使不返还，2个大洋，12个月的vps，偷着乐吧。</p>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p>然后右上角 <strong>我的账户</strong> –&gt; <strong>AWS管理控制台</strong> 选择所有服务下的 <strong>EC2</strong> ，进入后在 创建实例 下，点击 启动实例 按钮，进入后记得勾选左侧的 仅免费套餐 哦，我选择的是默认的第一个(我这个假后台不知道这些知识)，然后… 我要是一个输入框的说，我自己都会烦的。</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>建好一个实例之后，<br>打开命令行<br><small>这里稍后我会补充…</small></p>\n<h3 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h3><p>如果你是在阿里云上备案的域名，那就进入域名解析(举例子，你想要来个www.eyeseau.com)，添加一个解析。记录类型是 <strong>CNAME</strong> ,主机记录 <strong>www</strong> ,记录值是刚才你新建的实例的公网IP，然后保存就好了，现在就可以访问<a href=\"http://www.eyeseau.com/\" target=\"_blank\" rel=\"noopener\">你的网站</a>了。</p>\n<p><small>后续我会更新自动化部署，github，建议先看看文档，这部分新手有点麻烦。。。</small></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>生活再不如意，心里也要微笑着。</p>\n</blockquote>","more":"<p>个人网站刚开始诞生的时候，在阿里云上买的域名，记得还有一个虚拟主机，开心了一年，续费之后，觉得总是一大堆文件 <strong>ftp</strong> 或者别的工具直接到主机上，也没有数据库啊，后台环境这些个配置，什么WordPress，hexo(目前这个blog正在采用的)，没什么意思。正好最近闲的蛋疼，其实是心里烦躁的很，突然看到半年前注册的AWS，12个月的 <strong>VPS</strong> 对于我来说可是重新认识了。我之前傻傻分不清楚 <a href=\"https://www.zhihu.com/question/25507629\" target=\"_blank\" rel=\"noopener\">虚拟主机跟虚拟服务器的区别</a>，但是看过之后，瞬间觉得aws的这个12个月的体验简直是我等屌丝的福音啊，果断的搞起来。<br>以下内容涉及的入门，是到发稿时候我的进度，挨着来的，通过啃文档，请教大神零星总结的。</p>\n<h3 id=\"账号\"><a href=\"#账号\" class=\"headerlink\" title=\"账号\"></a>账号</h3><p>首先得有一个<a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"noopener\">账号</a>吧。反正这个之前呢，你的 <strong>梯子</strong> 一定要稳定啊！不稳的话，访问下<a href=\"https://aws.amazon.com/cn/\" target=\"_blank\" rel=\"noopener\">这个</a>。相关信息的录入我就不多说了，提醒的一点是要绑定你的信用卡，我这次是扣取了2美元，汇率都6.9了…据说之后会返还的，但是即使不返还，2个大洋，12个月的vps，偷着乐吧。</p>\n<h3 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h3><p>然后右上角 <strong>我的账户</strong> –&gt; <strong>AWS管理控制台</strong> 选择所有服务下的 <strong>EC2</strong> ，进入后在 创建实例 下，点击 启动实例 按钮，进入后记得勾选左侧的 仅免费套餐 哦，我选择的是默认的第一个(我这个假后台不知道这些知识)，然后… 我要是一个输入框的说，我自己都会烦的。</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>建好一个实例之后，<br>打开命令行<br><small>这里稍后我会补充…</small></p>\n<h3 id=\"域名\"><a href=\"#域名\" class=\"headerlink\" title=\"域名\"></a>域名</h3><p>如果你是在阿里云上备案的域名，那就进入域名解析(举例子，你想要来个www.eyeseau.com)，添加一个解析。记录类型是 <strong>CNAME</strong> ,主机记录 <strong>www</strong> ,记录值是刚才你新建的实例的公网IP，然后保存就好了，现在就可以访问<a href=\"http://www.eyeseau.com/\" target=\"_blank\" rel=\"noopener\">你的网站</a>了。</p>\n<p><small>后续我会更新自动化部署，github，建议先看看文档，这部分新手有点麻烦。。。</small></p>"},{"title":"HTML5---localStorage本地存储","date":"2017-01-04T16:33:03.000Z","_content":"### 概述\nHTML5 提供了两种在客户端存储数据的新方法：\n`localStorage` - 没有时间限制的数据存储\n`sessionStorage` - 针对一个 session 的数据存储\n<!-- more -->\n之前，这些都是由 `cookie` 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。\n在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。\n对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。\nHTML5 使用 `JavaScript` 来存储和访问数据。\n### 用法小结\n（一）设置值\n```javascript\n1.localStorage.setItem(key,value) //如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】\n2.localStorage.name = \"moomoo\";\n3.localStorage[\"name\"] = \"moomoo\";\n```\n（二）获取值\n```javascript\n1.localStorage.getItem(key,value):如果key的value不存在时，返回null，例：localStorage.getItem(\"name\");【推荐写法】\n2.var name = localStorage.name;\n3.var name = localStorage[\"name\"];\n```\n（三）清除值\n```javascript\n1.localStorage.remove(key);// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值\n2.localStorage.clear();  // 表示清除localStorage存储的所有数据\n```\n（四）遍历存储的数据\n当你不清楚本地localStorage存储了多少数据的时候，用`key(index)`方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：\n```javascript\nfor(i=0;i<localStorage.length;i++){\n　　document.write(localStorage.key(i)+\":\"+localStorage.getItem(localStorage.key(i))+\"<br/>\");\n}\nlocalStorage.length表示本地存储数据的总量；\nlocalStorage.key(i),表示获取第i个数据的key；\nlocalStorage.getItem(localStorage.key(i));表示获取第i个数据的value。\n```\n（五）JSON存储\n当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。\n1.SON.stringify(data) 将对象转换成JSON格式的数据串。\n2.JSON.parse(data)将数据解析成对象并返回解析后的对象。\n这样说或许不太好懂，直接上例子：\n```javascript\nvar arr = {\"name\":\"moomoo\",\"age\":2,\"eat\":\"apple\"};\nlocalStorage.setItem(\"arr\",JSON.stringify(arr));\narr = JSON.parse(localStorage.getItem(\"arr\"));\n```\n不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。\n（六）sessionStorage\n`sessionStorage`是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。\n当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。\nsessionStorage 方法与localStorage的方法相似，这里就不过多赘述。\n（七）兼容性\n   [点击这里查看兼容性^_^](http://caniuse.com/#search=localStorage)\n作者 [@eyea](mailto:deyeseau@gmail.com)\n### END\n","source":"_posts/html之localStorage.md","raw":"---\ntitle: HTML5---localStorage本地存储\ndate: 2017-01-05 00:33:03\ntags:\ncategories: 性能优化\n---\n### 概述\nHTML5 提供了两种在客户端存储数据的新方法：\n`localStorage` - 没有时间限制的数据存储\n`sessionStorage` - 针对一个 session 的数据存储\n<!-- more -->\n之前，这些都是由 `cookie` 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。\n在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。\n对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。\nHTML5 使用 `JavaScript` 来存储和访问数据。\n### 用法小结\n（一）设置值\n```javascript\n1.localStorage.setItem(key,value) //如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】\n2.localStorage.name = \"moomoo\";\n3.localStorage[\"name\"] = \"moomoo\";\n```\n（二）获取值\n```javascript\n1.localStorage.getItem(key,value):如果key的value不存在时，返回null，例：localStorage.getItem(\"name\");【推荐写法】\n2.var name = localStorage.name;\n3.var name = localStorage[\"name\"];\n```\n（三）清除值\n```javascript\n1.localStorage.remove(key);// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值\n2.localStorage.clear();  // 表示清除localStorage存储的所有数据\n```\n（四）遍历存储的数据\n当你不清楚本地localStorage存储了多少数据的时候，用`key(index)`方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：\n```javascript\nfor(i=0;i<localStorage.length;i++){\n　　document.write(localStorage.key(i)+\":\"+localStorage.getItem(localStorage.key(i))+\"<br/>\");\n}\nlocalStorage.length表示本地存储数据的总量；\nlocalStorage.key(i),表示获取第i个数据的key；\nlocalStorage.getItem(localStorage.key(i));表示获取第i个数据的value。\n```\n（五）JSON存储\n当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。\n1.SON.stringify(data) 将对象转换成JSON格式的数据串。\n2.JSON.parse(data)将数据解析成对象并返回解析后的对象。\n这样说或许不太好懂，直接上例子：\n```javascript\nvar arr = {\"name\":\"moomoo\",\"age\":2,\"eat\":\"apple\"};\nlocalStorage.setItem(\"arr\",JSON.stringify(arr));\narr = JSON.parse(localStorage.getItem(\"arr\"));\n```\n不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。\n（六）sessionStorage\n`sessionStorage`是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。\n当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。\nsessionStorage 方法与localStorage的方法相似，这里就不过多赘述。\n（七）兼容性\n   [点击这里查看兼容性^_^](http://caniuse.com/#search=localStorage)\n作者 [@eyea](mailto:deyeseau@gmail.com)\n### END\n","slug":"html之localStorage","published":1,"updated":"2017-11-29T06:14:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobkm2000ybbfy6i2tljen","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>HTML5 提供了两种在客户端存储数据的新方法：<br><code>localStorage</code> - 没有时间限制的数据存储<br><code>sessionStorage</code> - 针对一个 session 的数据存储<br><a id=\"more\"></a><br>之前，这些都是由 <code>cookie</code> 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。<br>在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。<br>对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。<br>HTML5 使用 <code>JavaScript</code> 来存储和访问数据。</p>\n<h3 id=\"用法小结\"><a href=\"#用法小结\" class=\"headerlink\" title=\"用法小结\"></a>用法小结</h3><p>（一）设置值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>localStorage.setItem(key,value) <span class=\"comment\">//如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】</span></span><br><span class=\"line\"><span class=\"number\">2.</span>localStorage.name = <span class=\"string\">\"moomoo\"</span>;</span><br><span class=\"line\"><span class=\"number\">3.</span>localStorage[<span class=\"string\">\"name\"</span>] = <span class=\"string\">\"moomoo\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>（二）获取值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>localStorage.getItem(key,value):如果key的value不存在时，返回<span class=\"literal\">null</span>，例：localStorage.getItem(<span class=\"string\">\"name\"</span>);【推荐写法】</span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"keyword\">var</span> name = localStorage.name;</span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"keyword\">var</span> name = localStorage[<span class=\"string\">\"name\"</span>];</span><br></pre></td></tr></table></figure></p>\n<p>（三）清除值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>localStorage.remove(key);<span class=\"comment\">// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值</span></span><br><span class=\"line\"><span class=\"number\">2.</span>localStorage.clear();  <span class=\"comment\">// 表示清除localStorage存储的所有数据</span></span><br></pre></td></tr></table></figure></p>\n<p>（四）遍历存储的数据<br>当你不清楚本地localStorage存储了多少数据的时候，用<code>key(index)</code>方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;localStorage.length;i++)&#123;</span><br><span class=\"line\">　　<span class=\"built_in\">document</span>.write(localStorage.key(i)+<span class=\"string\">\":\"</span>+localStorage.getItem(localStorage.key(i))+<span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">localStorage.length表示本地存储数据的总量；</span><br><span class=\"line\">localStorage.key(i),表示获取第i个数据的key；</span><br><span class=\"line\">localStorage.getItem(localStorage.key(i));表示获取第i个数据的value。</span><br></pre></td></tr></table></figure></p>\n<p>（五）JSON存储<br>当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。<br>1.SON.stringify(data) 将对象转换成JSON格式的数据串。<br>2.JSON.parse(data)将数据解析成对象并返回解析后的对象。<br>这样说或许不太好懂，直接上例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"moomoo\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">2</span>,<span class=\"string\">\"eat\"</span>:<span class=\"string\">\"apple\"</span>&#125;;</span><br><span class=\"line\">localStorage.setItem(<span class=\"string\">\"arr\"</span>,<span class=\"built_in\">JSON</span>.stringify(arr));</span><br><span class=\"line\">arr = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">\"arr\"</span>));</span><br></pre></td></tr></table></figure></p>\n<p>不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。<br>（六）sessionStorage<br><code>sessionStorage</code>是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。<br>当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。<br>sessionStorage 方法与localStorage的方法相似，这里就不过多赘述。<br>（七）兼容性<br>   <a href=\"http://caniuse.com/#search=localStorage\" target=\"_blank\" rel=\"noopener\">点击这里查看兼容性^_^</a><br>作者 <a href=\"mailto:deyeseau@gmail.com\" target=\"_blank\" rel=\"noopener\">@eyea</a></p>\n<h3 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h3>","site":{"data":{}},"excerpt":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>HTML5 提供了两种在客户端存储数据的新方法：<br><code>localStorage</code> - 没有时间限制的数据存储<br><code>sessionStorage</code> - 针对一个 session 的数据存储<br>","more":"<br>之前，这些都是由 <code>cookie</code> 完成的。但是 cookie 不适合大量数据的存储，因为它们由每个对服务器的请求来传递，这使得 cookie 速度很慢而且效率也不高。<br>在 HTML5 中，数据不是由每个服务器请求传递的，而是只有在请求时使用数据。它使在不影响网站性能的情况下存储大量数据成为可能。<br>对于不同的网站，数据存储于不同的区域，并且一个网站只能访问其自身的数据。<br>HTML5 使用 <code>JavaScript</code> 来存储和访问数据。</p>\n<h3 id=\"用法小结\"><a href=\"#用法小结\" class=\"headerlink\" title=\"用法小结\"></a>用法小结</h3><p>（一）设置值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>localStorage.setItem(key,value) <span class=\"comment\">//如果key的value存在时，更新key的值,例：localStorage.setItem(\"name\",\"moomoo\");【推荐写法】</span></span><br><span class=\"line\"><span class=\"number\">2.</span>localStorage.name = <span class=\"string\">\"moomoo\"</span>;</span><br><span class=\"line\"><span class=\"number\">3.</span>localStorage[<span class=\"string\">\"name\"</span>] = <span class=\"string\">\"moomoo\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>（二）获取值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>localStorage.getItem(key,value):如果key的value不存在时，返回<span class=\"literal\">null</span>，例：localStorage.getItem(<span class=\"string\">\"name\"</span>);【推荐写法】</span><br><span class=\"line\"><span class=\"number\">2.</span><span class=\"keyword\">var</span> name = localStorage.name;</span><br><span class=\"line\"><span class=\"number\">3.</span><span class=\"keyword\">var</span> name = localStorage[<span class=\"string\">\"name\"</span>];</span><br></pre></td></tr></table></figure></p>\n<p>（三）清除值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>localStorage.remove(key);<span class=\"comment\">// 表示清除单项key的值，例:localStorage.remove(\"name\");执行这句话就会清除name的值</span></span><br><span class=\"line\"><span class=\"number\">2.</span>localStorage.clear();  <span class=\"comment\">// 表示清除localStorage存储的所有数据</span></span><br></pre></td></tr></table></figure></p>\n<p>（四）遍历存储的数据<br>当你不清楚本地localStorage存储了多少数据的时候，用<code>key(index)</code>方法绝对是一个不错的选择，key(index)方法可以遍历localStorage存储的key。写个简单的例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;localStorage.length;i++)&#123;</span><br><span class=\"line\">　　<span class=\"built_in\">document</span>.write(localStorage.key(i)+<span class=\"string\">\":\"</span>+localStorage.getItem(localStorage.key(i))+<span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">localStorage.length表示本地存储数据的总量；</span><br><span class=\"line\">localStorage.key(i),表示获取第i个数据的key；</span><br><span class=\"line\">localStorage.getItem(localStorage.key(i));表示获取第i个数据的value。</span><br></pre></td></tr></table></figure></p>\n<p>（五）JSON存储<br>当需要存储的数据很多时，可以将数据存储到数组中并转换成JSON格式的数据。<br>1.SON.stringify(data) 将对象转换成JSON格式的数据串。<br>2.JSON.parse(data)将数据解析成对象并返回解析后的对象。<br>这样说或许不太好懂，直接上例子：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"moomoo\"</span>,<span class=\"string\">\"age\"</span>:<span class=\"number\">2</span>,<span class=\"string\">\"eat\"</span>:<span class=\"string\">\"apple\"</span>&#125;;</span><br><span class=\"line\">localStorage.setItem(<span class=\"string\">\"arr\"</span>,<span class=\"built_in\">JSON</span>.stringify(arr));</span><br><span class=\"line\">arr = <span class=\"built_in\">JSON</span>.parse(localStorage.getItem(<span class=\"string\">\"arr\"</span>));</span><br></pre></td></tr></table></figure></p>\n<p>不过需要注意的是：localStorage存储的数据是不能跨浏览器共用的，也就是说存储在浏览器的数据只能在这个浏览器中访问，现在各个浏览器的存储空间是5M。<br>（六）sessionStorage<br><code>sessionStorage</code>是个全局对象，它维护着在页面会话(page session)期间有效的存储空间。只要浏览器开着，页面会话周期就会一直持续。当页面重新载入(reload)或者被恢复(restores)时，页面会话也是一直存在的。每在新标签或者新窗口中打开一个新页面，都会初始化一个新的会话，也就是说sessionStorage针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。<br>当浏览器被意外刷新的时候，一些临时数据应当被保存和恢复。sessionStorage 对象在处理这种情况的时候是最有用的。sessionStorage自动保存一个文本域中的内容，如果浏览器被意外刷新，则恢复该文本域中的内容，所以不会丢失任何输入的数据。<br>sessionStorage 方法与localStorage的方法相似，这里就不过多赘述。<br>（七）兼容性<br>   <a href=\"http://caniuse.com/#search=localStorage\" target=\"_blank\" rel=\"noopener\">点击这里查看兼容性^_^</a><br>作者 <a href=\"mailto:deyeseau@gmail.com\" target=\"_blank\" rel=\"noopener\">@eyea</a></p>\n<h3 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h3>"},{"title":"开始新篇章","date":"2017-01-04T16:27:18.000Z","keywords":"Hexo, Blog","description":"生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。","_content":"一枚前端，在努力得一步一步往上爬\n<!-- more -->\n更多精彩内容，后续会持续更新中...^_^\n","source":"_posts/night.md","raw":"---\ntitle: 开始新篇章\ndate: 2017-01-05 00:27:18\ntags:\ncategories: \"阅读\"\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n---\n一枚前端，在努力得一步一步往上爬\n<!-- more -->\n更多精彩内容，后续会持续更新中...^_^\n","slug":"night","published":1,"updated":"2017-11-29T06:14:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjakobkm50011bbfytvwb94ct","content":"<p>一枚前端，在努力得一步一步往上爬<br><a id=\"more\"></a><br>更多精彩内容，后续会持续更新中…^_^</p>\n","site":{"data":{}},"excerpt":"<p>一枚前端，在努力得一步一步往上爬<br>","more":"<br>更多精彩内容，后续会持续更新中…^_^</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjakobkkt0000bbfyo8307dnx","category_id":"cjakobkl60004bbfyyv77kevc","_id":"cjakobkln000fbbfy3lgm9xne"},{"post_id":"cjakobkl20002bbfy9rbnang3","category_id":"cjakobklj000abbfyvd4s8fir","_id":"cjakobkls000lbbfytg3af6u1"},{"post_id":"cjakobklc0006bbfyqfow9uuf","category_id":"cjakobklo000gbbfyztge8bxq","_id":"cjakobklw000rbbfy36upkbnd"},{"post_id":"cjakobklh0008bbfyge0aqsca","category_id":"cjakobkls000mbbfydbc1ndk4","_id":"cjakobkm2000xbbfy15t28dd9"},{"post_id":"cjakobkli0009bbfyjetr3yw1","category_id":"cjakobklo000gbbfyztge8bxq","_id":"cjakobkm70012bbfyob0qmmq9"},{"post_id":"cjakobklk000dbbfybd8chmx5","category_id":"cjakobkm2000wbbfyxbavk0eb","_id":"cjakobkm90017bbfy9b06vvbv"},{"post_id":"cjakobklm000ebbfyffhdp56z","category_id":"cjakobkm70014bbfy3yqu45xe","_id":"cjakobkma001abbfyfzowmv5b"},{"post_id":"cjakobklq000kbbfyhsrrfsib","category_id":"cjakobkm90018bbfyzwq7p5yr","_id":"cjakobkmd001gbbfydvgehofs"},{"post_id":"cjakobklt000obbfywqme5mox","category_id":"cjakobkm90018bbfyzwq7p5yr","_id":"cjakobkme001ibbfyxct6jjxm"},{"post_id":"cjakobklx000ubbfyf55k188d","category_id":"cjakobkme001jbbfyklbdmtjb","_id":"cjakobkmh001qbbfyd9adznku"},{"post_id":"cjakobkm2000ybbfy6i2tljen","category_id":"cjakobkmf001nbbfyptwmvdgh","_id":"cjakobkmj001ubbfyqty3ftfp"},{"post_id":"cjakobkm50011bbfytvwb94ct","category_id":"cjakobkmh001rbbfy5w3ge5sd","_id":"cjakobkmk001ybbfydlzzrqj0"},{"post_id":"cjakobklv000qbbfyo702bjix","category_id":"cjakobkmd001fbbfy195ov8qx","_id":"cjakobkml0021bbfyypko55ox"},{"post_id":"cjakobklv000qbbfyo702bjix","category_id":"cjakobkmj001vbbfy8l3lryp8","_id":"cjakobkmm0023bbfyzs16qomr"}],"PostTag":[{"post_id":"cjakobkkt0000bbfyo8307dnx","tag_id":"cjakobklb0005bbfy1osungjj","_id":"cjakobklk000cbbfykl8ukmyr"},{"post_id":"cjakobkl20002bbfy9rbnang3","tag_id":"cjakobklj000bbbfyl86x0xam","_id":"cjakobklq000jbbfypw6gx9zf"},{"post_id":"cjakobklc0006bbfyqfow9uuf","tag_id":"cjakobklo000hbbfyrmd460d0","_id":"cjakobklu000pbbfygymwqmtl"},{"post_id":"cjakobklh0008bbfyge0aqsca","tag_id":"cjakobkls000nbbfy746xpjzj","_id":"cjakobkm50010bbfyrdx3nhzn"},{"post_id":"cjakobklh0008bbfyge0aqsca","tag_id":"cjakobklx000tbbfyz8d0xxfi","_id":"cjakobkm70013bbfyboxdotr8"},{"post_id":"cjakobkli0009bbfyjetr3yw1","tag_id":"cjakobklo000hbbfyrmd460d0","_id":"cjakobkm80016bbfy6d6fu1ue"},{"post_id":"cjakobklk000dbbfybd8chmx5","tag_id":"cjakobkm70015bbfyhvytqprc","_id":"cjakobkmd001dbbfy5o9exhpm"},{"post_id":"cjakobklk000dbbfybd8chmx5","tag_id":"cjakobkma0019bbfysxvrtfef","_id":"cjakobkmd001ebbfy1p0rr8fj"},{"post_id":"cjakobklm000ebbfyffhdp56z","tag_id":"cjakobkmc001cbbfyulc4ckwa","_id":"cjakobkmf001lbbfyua6saoas"},{"post_id":"cjakobklm000ebbfyffhdp56z","tag_id":"cjakobkmd001hbbfy203ixu15","_id":"cjakobkmf001mbbfyyasug21b"},{"post_id":"cjakobklq000kbbfyhsrrfsib","tag_id":"cjakobkme001kbbfyeuaumtll","_id":"cjakobkmg001pbbfyups7hobz"},{"post_id":"cjakobklt000obbfywqme5mox","tag_id":"cjakobkme001kbbfyeuaumtll","_id":"cjakobkmj001tbbfysm6hvye5"},{"post_id":"cjakobklv000qbbfyo702bjix","tag_id":"cjakobkmi001sbbfyx2crj5cn","_id":"cjakobkmk001xbbfy26c38lpp"},{"post_id":"cjakobklx000ubbfyf55k188d","tag_id":"cjakobkmk001wbbfyxkylgv7f","_id":"cjakobkml0020bbfy75t5viox"},{"post_id":"cjakobkm1000vbbfy931i5bzg","tag_id":"cjakobkml001zbbfyvpzibgqi","_id":"cjakobkmq0026bbfyczfli12v"},{"post_id":"cjakobkm1000vbbfy931i5bzg","tag_id":"cjakobkml0022bbfy2h1ista5","_id":"cjakobkmq0027bbfyc54v3c7x"},{"post_id":"cjakobkm1000vbbfy931i5bzg","tag_id":"cjakobkmm0024bbfylt629pay","_id":"cjakobkmq0028bbfyf95wa6lk"},{"post_id":"cjakobkm1000vbbfy931i5bzg","tag_id":"cjakobkmo0025bbfy2497fes3","_id":"cjakobkmq0029bbfyg5fz8u8e"}],"Tag":[{"name":"Ajax","_id":"cjakobklb0005bbfy1osungjj"},{"name":"Git","_id":"cjakobklj000bbbfyl86x0xam"},{"name":"CSS","_id":"cjakobklo000hbbfyrmd460d0"},{"name":"知识付费、变现","_id":"cjakobkls000nbbfy746xpjzj"},{"name":"知识共享","_id":"cjakobklx000tbbfyz8d0xxfi"},{"name":"VR","_id":"cjakobkm70015bbfyhvytqprc"},{"name":"A-FRAME","_id":"cjakobkma0019bbfysxvrtfef"},{"name":"WebGL","_id":"cjakobkmc001cbbfyulc4ckwa"},{"name":"ThreeJS","_id":"cjakobkmd001hbbfy203ixu15"},{"name":"移动端","_id":"cjakobkme001kbbfyeuaumtll"},{"name":"Node","_id":"cjakobkmi001sbbfyx2crj5cn"},{"name":"resource","_id":"cjakobkmk001wbbfyxkylgv7f"},{"name":"AWS","_id":"cjakobkml001zbbfyvpzibgqi"},{"name":"VPS","_id":"cjakobkml0022bbfy2h1ista5"},{"name":"node","_id":"cjakobkmm0024bbfylt629pay"},{"name":"nginx","_id":"cjakobkmo0025bbfy2497fes3"}]}}